{"version":3,"sources":["webpack:///./node_modules/multibase/src/rfc4648.js","webpack:///./node_modules/varint/index.js","webpack:///./node_modules/multihashes/src/index.js","webpack:///./node_modules/multihashes/src/constants.js","webpack:///./node_modules/@radiantearth/stac-fields/formatters.js","webpack:///./node_modules/varint/length.js","webpack:///./node_modules/multibase/src/index.js","webpack:///./node_modules/uint8arrays/to-string.js","webpack:///./node_modules/multibase/src/base.js","webpack:///./node_modules/multibase/src/util.js","webpack:///./node_modules/multibase/src/constants.js","webpack:///./node_modules/varint/encode.js","webpack:///./node_modules/@openeo/vue-components/components/internal/StacFields.vue?b8b7","webpack:///./node_modules/uint8arrays/from-string.js","webpack:///./node_modules/web-encoding/src/lib.browser.js","webpack:///./node_modules/@multiformats/base-x/src/index.js","webpack:///./node_modules/@openeo/vue-components/components/internal/StacFields.vue?7a6f","webpack:///node_modules/@openeo/vue-components/components/internal/StacFields.vue","webpack:///./node_modules/@openeo/vue-components/components/internal/StacFields.vue?2eb5","webpack:///./node_modules/@openeo/vue-components/components/internal/StacFields.vue","webpack:///./node_modules/uint8arrays/concat.js","webpack:///./node_modules/varint/decode.js"],"names":["decode","string","alphabet","bitsPerChar","codes","i","length","end","out","Uint8Array","bits","buffer","written","value","undefined","SyntaxError","encode","data","pad","mask","rfc4648","input","module","exports","encodingLength","multibase","varint","names","uint8ArrayToString","uint8ArrayFromString","uint8ArrayConcat","key","name","toHexString","hash","Error","fromHexString","toB58String","slice","fromB58String","encoded","bytes","code","isValidCode","toString","len","digest","hashfn","coerceCode","isAppCode","validate","multihash","prefix","subarray","Object","freeze","Registry","externalRenderer","spec","Fields","extensions","_","normalizeField","field","metadata","specs","addMetadataField","str","String","replace","arr","sort","formatter","list","tag","map","join","url","title","obj","html","label","formatKey","Array","isArray","e","split","part","substr","toUpperCase","fields","alias","assign","format","Formatters","isObject","items","itemOrder","push","i1","i2","id","order","localeCompare","item","hexString","match","byte","parseInt","reduce","padStart","objectList","o","keys","a","k","indexOf","unit","DataTypes","toList","v","toObject","num","parseFloat","toLocaleString","bool","boolean","number","array","object","null","Date","timeZone","timeZoneName","error","context","toLink","licenses","links","filter","link","href","rel","provider","roles","description","r","formatCommonMark","commonmark","reader","Parser","writer","HtmlRenderer","safe","smart","render","parse","software","version","formatNull","formatTimestamp","date","formatted","indent","keyword","tabs","repeat","fileSizeUnits","Math","floor","log","pow","toFixed","meta","hexToUint8","hex","uint8ToHex","fileDataTypes","numeric","find","formatGrouped","prop","coreKey","groups","parts","unshift","ext","extension","properties","isSummarizedListWithKeys","listWithKeys","itemFieldNames","temp","values","keysFromListOfObjects","fieldName","includes","forEach","explain","min","max","formatExtent","result","custom","b","formatSummaries","collection","formatItemProperties","callback","formattedValues","normalizeFields","Helper","N1","N2","N3","N4","N5","N6","N7","N8","N9","constants","encodeText","decodeText","concat","nameOrCode","buf","codeBuf","encoding","validEncode","enc","toLowerCase","substring","isEncoded","prototype","call","err","encodingFromData","getCodec","TextDecoder","utf8Decoder","uint8ArrayToAsciiString","fromCharCode","Base","factory","this","codec","char","TextEncoder","textDecoder","textEncoder","text","arrs","output","offset","set","baseX","identity","prev","tupple","MSB","REST","MSBALL","INT","Number","MAX_SAFE_INTEGER","RangeError","oldOffset","utf8Encoder","asciiStringToUint8Array","charCodeAt","fromString","base","ALPHABET","TypeError","BASE_MAP","j","x","charAt","xc","BASE","LEADER","FACTOR","iFACTOR","source","ArrayBuffer","isView","byteOffset","byteLength","from","zeroes","pbegin","pend","size","b58","carry","it1","it2","decodeUnsafe","psz","b256","it3","it4","vch","_vm","_h","$createElement","_c","_self","staticClass","_l","group","headingTag","domProps","_s","class","wrap","Boolean","attrs","normalize","_e","col","row","_v","staticRenderFns","component","arrays","acc","curr","read","res","shift","counter","l"],"mappings":"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d,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,YAAa,MACb,aAAc,MACd,aAAc,MACd,aAAc,MACd,aAAc,MACd,aAAc,MACd,aAAc,MACd,aAAc,MACd,aAAc,MACd,aAAc,MACd,aAAc,MACd,aAAc,MACd,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,aAAc,MACd,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,aAAc,MACd,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,cAAe,MACf,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,KACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,iBAAkB,MAClB,iBAAkB,MAClB,iBAAkB,MAClB,iBAAkB,MAClB,4BAA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","file":"js/chunk-3293b009.61c4bfe0.js","sourcesContent":["'use strict'\n\n/** @typedef {import('./types').CodecFactory} CodecFactory */\n\n/**\n * @param {string} string\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @returns {Uint8Array}\n */\nconst decode = (string, alphabet, bitsPerChar) => {\n  // Build the character lookup table:\n  /** @type {Record<string, number>} */\n  const codes = {}\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i\n  }\n\n  // Count the padding bytes:\n  let end = string.length\n  while (string[end - 1] === '=') {\n    --end\n  }\n\n  // Allocate the output:\n  const out = new Uint8Array((end * bitsPerChar / 8) | 0)\n\n  // Parse the data:\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  let written = 0 // Next byte to write\n  for (let i = 0; i < end; ++i) {\n    // Read one character from the string:\n    const value = codes[string[i]]\n    if (value === undefined) {\n      throw new SyntaxError('Invalid character ' + string[i])\n    }\n\n    // Append the bits to the buffer:\n    buffer = (buffer << bitsPerChar) | value\n    bits += bitsPerChar\n\n    // Write out some bits if the buffer has a byte's worth:\n    if (bits >= 8) {\n      bits -= 8\n      out[written++] = 0xff & (buffer >> bits)\n    }\n  }\n\n  // Verify that we have received just enough bits:\n  if (bits >= bitsPerChar || 0xff & (buffer << (8 - bits))) {\n    throw new SyntaxError('Unexpected end of data')\n  }\n\n  return out\n}\n\n/**\n * @param {Uint8Array} data\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @returns {string}\n */\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '='\n  const mask = (1 << bitsPerChar) - 1\n  let out = ''\n\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  for (let i = 0; i < data.length; ++i) {\n    // Slurp data into the buffer:\n    buffer = (buffer << 8) | data[i]\n    bits += 8\n\n    // Write out as much as we can:\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar\n      out += alphabet[mask & (buffer >> bits)]\n    }\n  }\n\n  // Partial character:\n  if (bits) {\n    out += alphabet[mask & (buffer << (bitsPerChar - bits))]\n  }\n\n  // Add padding characters until we hit a byte boundary:\n  if (pad) {\n    while ((out.length * bitsPerChar) & 7) {\n      out += '='\n    }\n  }\n\n  return out\n}\n\n/**\n * RFC4648 Factory\n *\n * @param {number} bitsPerChar\n * @returns {CodecFactory}\n */\nconst rfc4648 = (bitsPerChar) => (alphabet) => {\n  return {\n    /**\n     * @param {Uint8Array} input\n     * @returns {string}\n     */\n    encode (input) {\n      return encode(input, alphabet, bitsPerChar)\n    },\n    /**\n     * @param {string} input\n     * @returns {Uint8Array}\n     */\n    decode (input) {\n      return decode(input, alphabet, bitsPerChar)\n    }\n  }\n}\n\nmodule.exports = { rfc4648 }\n","module.exports = {\n    encode: require('./encode.js')\n  , decode: require('./decode.js')\n  , encodingLength: require('./length.js')\n}\n","/**\n * Multihash implementation in JavaScript.\n *\n * @module multihash\n */\n'use strict'\n\nconst multibase = require('multibase')\nconst varint = require('varint')\nconst { names } = require('./constants')\nconst uint8ArrayToString = require('uint8arrays/to-string')\nconst uint8ArrayFromString = require('uint8arrays/from-string')\nconst uint8ArrayConcat = require('uint8arrays/concat')\n\nconst codes = /** @type {import('./types').CodeNameMap} */({})\n\n// eslint-disable-next-line guard-for-in\nfor (const key in names) {\n  const name = /** @type {HashName} */(key)\n  codes[names[name]] = name\n}\n\n/**\n * Convert the given multihash to a hex encoded string.\n *\n * @param {Uint8Array} hash\n * @returns {string}\n */\nfunction toHexString (hash) {\n  if (!(hash instanceof Uint8Array)) {\n    throw new Error('must be passed a Uint8Array')\n  }\n\n  return uint8ArrayToString(hash, 'base16')\n}\n\n/**\n * Convert the given hex encoded string to a multihash.\n *\n * @param {string} hash\n * @returns {Uint8Array}\n */\nfunction fromHexString (hash) {\n  return uint8ArrayFromString(hash, 'base16')\n}\n\n/**\n * Convert the given multihash to a base58 encoded string.\n *\n * @param {Uint8Array} hash\n * @returns {string}\n */\nfunction toB58String (hash) {\n  if (!(hash instanceof Uint8Array)) {\n    throw new Error('must be passed a Uint8Array')\n  }\n\n  return uint8ArrayToString(multibase.encode('base58btc', hash)).slice(1)\n}\n\n/**\n * Convert the given base58 encoded string to a multihash.\n *\n * @param {string|Uint8Array} hash\n * @returns {Uint8Array}\n */\nfunction fromB58String (hash) {\n  const encoded = hash instanceof Uint8Array\n    ? uint8ArrayToString(hash)\n    : hash\n\n  return multibase.decode('z' + encoded)\n}\n\n/**\n * Decode a hash from the given multihash.\n *\n * @param {Uint8Array} bytes\n * @returns {{code: HashCode, name: HashName, length: number, digest: Uint8Array}} result\n */\nfunction decode (bytes) {\n  if (!(bytes instanceof Uint8Array)) {\n    throw new Error('multihash must be a Uint8Array')\n  }\n\n  if (bytes.length < 2) {\n    throw new Error('multihash too short. must be > 2 bytes.')\n  }\n\n  const code = /** @type {HashCode} */(varint.decode(bytes))\n  if (!isValidCode(code)) {\n    throw new Error(`multihash unknown function code: 0x${code.toString(16)}`)\n  }\n  bytes = bytes.slice(varint.decode.bytes)\n\n  const len = varint.decode(bytes)\n  if (len < 0) {\n    throw new Error(`multihash invalid length: ${len}`)\n  }\n  bytes = bytes.slice(varint.decode.bytes)\n\n  if (bytes.length !== len) {\n    throw new Error(`multihash length inconsistent: 0x${uint8ArrayToString(bytes, 'base16')}`)\n  }\n\n  return {\n    code,\n    name: codes[code],\n    length: len,\n    digest: bytes\n  }\n}\n\n/**\n * Encode a hash digest along with the specified function code.\n *\n * > **Note:** the length is derived from the length of the digest itself.\n *\n * @param {Uint8Array} digest\n * @param {HashName | HashCode} code\n * @param {number} [length]\n * @returns {Uint8Array}\n */\nfunction encode (digest, code, length) {\n  if (!digest || code === undefined) {\n    throw new Error('multihash encode requires at least two args: digest, code')\n  }\n\n  // ensure it's a hashfunction code.\n  const hashfn = coerceCode(code)\n\n  if (!(digest instanceof Uint8Array)) {\n    throw new Error('digest should be a Uint8Array')\n  }\n\n  if (length == null) {\n    length = digest.length\n  }\n\n  if (length && digest.length !== length) {\n    throw new Error('digest length should be equal to specified length.')\n  }\n\n  const hash = varint.encode(hashfn)\n  const len = varint.encode(length)\n  return uint8ArrayConcat([hash, len, digest], hash.length + len.length + digest.length)\n}\n\n/**\n * Converts a hash function name into the matching code.\n * If passed a number it will return the number if it's a valid code.\n *\n * @param {HashName | number} name\n * @returns {number}\n */\nfunction coerceCode (name) {\n  let code = name\n\n  if (typeof name === 'string') {\n    if (names[name] === undefined) {\n      throw new Error(`Unrecognized hash function named: ${name}`)\n    }\n    code = names[name]\n  }\n\n  if (typeof code !== 'number') {\n    throw new Error(`Hash function code should be a number. Got: ${code}`)\n  }\n\n  // @ts-ignore\n  if (codes[code] === undefined && !isAppCode(code)) {\n    throw new Error(`Unrecognized function code: ${code}`)\n  }\n\n  return code\n}\n\n/**\n * Checks if a code is part of the app range\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction isAppCode (code) {\n  return code > 0 && code < 0x10\n}\n\n/**\n * Checks whether a multihash code is valid.\n *\n * @param {HashCode} code\n * @returns {boolean}\n */\nfunction isValidCode (code) {\n  if (isAppCode(code)) {\n    return true\n  }\n\n  if (codes[code]) {\n    return true\n  }\n\n  return false\n}\n\n/**\n * Check if the given buffer is a valid multihash. Throws an error if it is not valid.\n *\n * @param {Uint8Array} multihash\n * @returns {void}\n * @throws {Error}\n */\nfunction validate (multihash) {\n  decode(multihash) // throws if bad.\n}\n\n/**\n * Returns a prefix from a valid multihash. Throws an error if it is not valid.\n *\n * @param {Uint8Array} multihash\n * @returns {Uint8Array}\n * @throws {Error}\n */\nfunction prefix (multihash) {\n  validate(multihash)\n\n  return multihash.subarray(0, 2)\n}\n\nmodule.exports = {\n  names,\n  codes: Object.freeze(codes),\n  toHexString,\n  fromHexString,\n  toB58String,\n  fromB58String,\n  decode,\n  encode,\n  coerceCode,\n  isAppCode,\n  validate,\n  prefix,\n  isValidCode\n}\n\n/**\n * @typedef { import(\"./constants\").HashCode } HashCode\n * @typedef { import(\"./constants\").HashName } HashName\n */\n","/* eslint quote-props: off */\n'use strict'\n\n/**\n * Names for all available hashes\n *\n * @typedef { \"identity\" | \"sha1\" | \"sha2-256\" | \"sha2-512\" | \"sha3-512\" | \"sha3-384\" | \"sha3-256\" | \"sha3-224\" | \"shake-128\" | \"shake-256\" | \"keccak-224\" | \"keccak-256\" | \"keccak-384\" | \"keccak-512\" | \"blake3\" | \"murmur3-128\" | \"murmur3-32\" | \"dbl-sha2-256\" | \"md4\" | \"md5\" | \"bmt\" | \"sha2-256-trunc254-padded\" | \"ripemd-128\" | \"ripemd-160\" | \"ripemd-256\" | \"ripemd-320\" | \"x11\" | \"kangarootwelve\" | \"sm3-256\" | \"blake2b-8\" | \"blake2b-16\" | \"blake2b-24\" | \"blake2b-32\" | \"blake2b-40\" | \"blake2b-48\" | \"blake2b-56\" | \"blake2b-64\" | \"blake2b-72\" | \"blake2b-80\" | \"blake2b-88\" | \"blake2b-96\" | \"blake2b-104\" | \"blake2b-112\" | \"blake2b-120\" | \"blake2b-128\" | \"blake2b-136\" | \"blake2b-144\" | \"blake2b-152\" | \"blake2b-160\" | \"blake2b-168\" | \"blake2b-176\" | \"blake2b-184\" | \"blake2b-192\" | \"blake2b-200\" | \"blake2b-208\" | \"blake2b-216\" | \"blake2b-224\" | \"blake2b-232\" | \"blake2b-240\" | \"blake2b-248\" | \"blake2b-256\" | \"blake2b-264\" | \"blake2b-272\" | \"blake2b-280\" | \"blake2b-288\" | \"blake2b-296\" | \"blake2b-304\" | \"blake2b-312\" | \"blake2b-320\" | \"blake2b-328\" | \"blake2b-336\" | \"blake2b-344\" | \"blake2b-352\" | \"blake2b-360\" | \"blake2b-368\" | \"blake2b-376\" | \"blake2b-384\" | \"blake2b-392\" | \"blake2b-400\" | \"blake2b-408\" | \"blake2b-416\" | \"blake2b-424\" | \"blake2b-432\" | \"blake2b-440\" | \"blake2b-448\" | \"blake2b-456\" | \"blake2b-464\" | \"blake2b-472\" | \"blake2b-480\" | \"blake2b-488\" | \"blake2b-496\" | \"blake2b-504\" | \"blake2b-512\" | \"blake2s-8\" | \"blake2s-16\" | \"blake2s-24\" | \"blake2s-32\" | \"blake2s-40\" | \"blake2s-48\" | \"blake2s-56\" | \"blake2s-64\" | \"blake2s-72\" | \"blake2s-80\" | \"blake2s-88\" | \"blake2s-96\" | \"blake2s-104\" | \"blake2s-112\" | \"blake2s-120\" | \"blake2s-128\" | \"blake2s-136\" | \"blake2s-144\" | \"blake2s-152\" | \"blake2s-160\" | \"blake2s-168\" | \"blake2s-176\" | \"blake2s-184\" | \"blake2s-192\" | \"blake2s-200\" | \"blake2s-208\" | \"blake2s-216\" | \"blake2s-224\" | \"blake2s-232\" | \"blake2s-240\" | \"blake2s-248\" | \"blake2s-256\" | \"skein256-8\" | \"skein256-16\" | \"skein256-24\" | \"skein256-32\" | \"skein256-40\" | \"skein256-48\" | \"skein256-56\" | \"skein256-64\" | \"skein256-72\" | \"skein256-80\" | \"skein256-88\" | \"skein256-96\" | \"skein256-104\" | \"skein256-112\" | \"skein256-120\" | \"skein256-128\" | \"skein256-136\" | \"skein256-144\" | \"skein256-152\" | \"skein256-160\" | \"skein256-168\" | \"skein256-176\" | \"skein256-184\" | \"skein256-192\" | \"skein256-200\" | \"skein256-208\" | \"skein256-216\" | \"skein256-224\" | \"skein256-232\" | \"skein256-240\" | \"skein256-248\" | \"skein256-256\" | \"skein512-8\" | \"skein512-16\" | \"skein512-24\" | \"skein512-32\" | \"skein512-40\" | \"skein512-48\" | \"skein512-56\" | \"skein512-64\" | \"skein512-72\" | \"skein512-80\" | \"skein512-88\" | \"skein512-96\" | \"skein512-104\" | \"skein512-112\" | \"skein512-120\" | \"skein512-128\" | \"skein512-136\" | \"skein512-144\" | \"skein512-152\" | \"skein512-160\" | \"skein512-168\" | \"skein512-176\" | \"skein512-184\" | \"skein512-192\" | \"skein512-200\" | \"skein512-208\" | \"skein512-216\" | \"skein512-224\" | \"skein512-232\" | \"skein512-240\" | \"skein512-248\" | \"skein512-256\" | \"skein512-264\" | \"skein512-272\" | \"skein512-280\" | \"skein512-288\" | \"skein512-296\" | \"skein512-304\" | \"skein512-312\" | \"skein512-320\" | \"skein512-328\" | \"skein512-336\" | \"skein512-344\" | \"skein512-352\" | \"skein512-360\" | \"skein512-368\" | \"skein512-376\" | \"skein512-384\" | \"skein512-392\" | \"skein512-400\" | \"skein512-408\" | \"skein512-416\" | \"skein512-424\" | \"skein512-432\" | \"skein512-440\" | \"skein512-448\" | \"skein512-456\" | \"skein512-464\" | \"skein512-472\" | \"skein512-480\" | \"skein512-488\" | \"skein512-496\" | \"skein512-504\" | \"skein512-512\" | \"skein1024-8\" | \"skein1024-16\" | \"skein1024-24\" | \"skein1024-32\" | \"skein1024-40\" | \"skein1024-48\" | \"skein1024-56\" | \"skein1024-64\" | \"skein1024-72\" | \"skein1024-80\" | \"skein1024-88\" | \"skein1024-96\" | \"skein1024-104\" | \"skein1024-112\" | \"skein1024-120\" | \"skein1024-128\" | \"skein1024-136\" | \"skein1024-144\" | \"skein1024-152\" | \"skein1024-160\" | \"skein1024-168\" | \"skein1024-176\" | \"skein1024-184\" | \"skein1024-192\" | \"skein1024-200\" | \"skein1024-208\" | \"skein1024-216\" | \"skein1024-224\" | \"skein1024-232\" | \"skein1024-240\" | \"skein1024-248\" | \"skein1024-256\" | \"skein1024-264\" | \"skein1024-272\" | \"skein1024-280\" | \"skein1024-288\" | \"skein1024-296\" | \"skein1024-304\" | \"skein1024-312\" | \"skein1024-320\" | \"skein1024-328\" | \"skein1024-336\" | \"skein1024-344\" | \"skein1024-352\" | \"skein1024-360\" | \"skein1024-368\" | \"skein1024-376\" | \"skein1024-384\" | \"skein1024-392\" | \"skein1024-400\" | \"skein1024-408\" | \"skein1024-416\" | \"skein1024-424\" | \"skein1024-432\" | \"skein1024-440\" | \"skein1024-448\" | \"skein1024-456\" | \"skein1024-464\" | \"skein1024-472\" | \"skein1024-480\" | \"skein1024-488\" | \"skein1024-496\" | \"skein1024-504\" | \"skein1024-512\" | \"skein1024-520\" | \"skein1024-528\" | \"skein1024-536\" | \"skein1024-544\" | \"skein1024-552\" | \"skein1024-560\" | \"skein1024-568\" | \"skein1024-576\" | \"skein1024-584\" | \"skein1024-592\" | \"skein1024-600\" | \"skein1024-608\" | \"skein1024-616\" | \"skein1024-624\" | \"skein1024-632\" | \"skein1024-640\" | \"skein1024-648\" | \"skein1024-656\" | \"skein1024-664\" | \"skein1024-672\" | \"skein1024-680\" | \"skein1024-688\" | \"skein1024-696\" | \"skein1024-704\" | \"skein1024-712\" | \"skein1024-720\" | \"skein1024-728\" | \"skein1024-736\" | \"skein1024-744\" | \"skein1024-752\" | \"skein1024-760\" | \"skein1024-768\" | \"skein1024-776\" | \"skein1024-784\" | \"skein1024-792\" | \"skein1024-800\" | \"skein1024-808\" | \"skein1024-816\" | \"skein1024-824\" | \"skein1024-832\" | \"skein1024-840\" | \"skein1024-848\" | \"skein1024-856\" | \"skein1024-864\" | \"skein1024-872\" | \"skein1024-880\" | \"skein1024-888\" | \"skein1024-896\" | \"skein1024-904\" | \"skein1024-912\" | \"skein1024-920\" | \"skein1024-928\" | \"skein1024-936\" | \"skein1024-944\" | \"skein1024-952\" | \"skein1024-960\" | \"skein1024-968\" | \"skein1024-976\" | \"skein1024-984\" | \"skein1024-992\" | \"skein1024-1000\" | \"skein1024-1008\" | \"skein1024-1016\" | \"skein1024-1024\" | \"poseidon-bls12_381-a2-fc1\" | \"poseidon-bls12_381-a2-fc1-sc\" } HashName\n */\n/**\n * Codes for all available hashes\n *\n * @typedef { 0x00 | 0x11 | 0x12 | 0x13 | 0x14 | 0x15 | 0x16 | 0x17 | 0x18 | 0x19 | 0x1a | 0x1b | 0x1c | 0x1d | 0x1e | 0x22 | 0x23 | 0x56 | 0xd4 | 0xd5 | 0xd6 | 0x1012 | 0x1052 | 0x1053 | 0x1054 | 0x1055 | 0x1100 | 0x1d01 | 0x534d | 0xb201 | 0xb202 | 0xb203 | 0xb204 | 0xb205 | 0xb206 | 0xb207 | 0xb208 | 0xb209 | 0xb20a | 0xb20b | 0xb20c | 0xb20d | 0xb20e | 0xb20f | 0xb210 | 0xb211 | 0xb212 | 0xb213 | 0xb214 | 0xb215 | 0xb216 | 0xb217 | 0xb218 | 0xb219 | 0xb21a | 0xb21b | 0xb21c | 0xb21d | 0xb21e | 0xb21f | 0xb220 | 0xb221 | 0xb222 | 0xb223 | 0xb224 | 0xb225 | 0xb226 | 0xb227 | 0xb228 | 0xb229 | 0xb22a | 0xb22b | 0xb22c | 0xb22d | 0xb22e | 0xb22f | 0xb230 | 0xb231 | 0xb232 | 0xb233 | 0xb234 | 0xb235 | 0xb236 | 0xb237 | 0xb238 | 0xb239 | 0xb23a | 0xb23b | 0xb23c | 0xb23d | 0xb23e | 0xb23f | 0xb240 | 0xb241 | 0xb242 | 0xb243 | 0xb244 | 0xb245 | 0xb246 | 0xb247 | 0xb248 | 0xb249 | 0xb24a | 0xb24b | 0xb24c | 0xb24d | 0xb24e | 0xb24f | 0xb250 | 0xb251 | 0xb252 | 0xb253 | 0xb254 | 0xb255 | 0xb256 | 0xb257 | 0xb258 | 0xb259 | 0xb25a | 0xb25b | 0xb25c | 0xb25d | 0xb25e | 0xb25f | 0xb260 | 0xb301 | 0xb302 | 0xb303 | 0xb304 | 0xb305 | 0xb306 | 0xb307 | 0xb308 | 0xb309 | 0xb30a | 0xb30b | 0xb30c | 0xb30d | 0xb30e | 0xb30f | 0xb310 | 0xb311 | 0xb312 | 0xb313 | 0xb314 | 0xb315 | 0xb316 | 0xb317 | 0xb318 | 0xb319 | 0xb31a | 0xb31b | 0xb31c | 0xb31d | 0xb31e | 0xb31f | 0xb320 | 0xb321 | 0xb322 | 0xb323 | 0xb324 | 0xb325 | 0xb326 | 0xb327 | 0xb328 | 0xb329 | 0xb32a | 0xb32b | 0xb32c | 0xb32d | 0xb32e | 0xb32f | 0xb330 | 0xb331 | 0xb332 | 0xb333 | 0xb334 | 0xb335 | 0xb336 | 0xb337 | 0xb338 | 0xb339 | 0xb33a | 0xb33b | 0xb33c | 0xb33d | 0xb33e | 0xb33f | 0xb340 | 0xb341 | 0xb342 | 0xb343 | 0xb344 | 0xb345 | 0xb346 | 0xb347 | 0xb348 | 0xb349 | 0xb34a | 0xb34b | 0xb34c | 0xb34d | 0xb34e | 0xb34f | 0xb350 | 0xb351 | 0xb352 | 0xb353 | 0xb354 | 0xb355 | 0xb356 | 0xb357 | 0xb358 | 0xb359 | 0xb35a | 0xb35b | 0xb35c | 0xb35d | 0xb35e | 0xb35f | 0xb360 | 0xb361 | 0xb362 | 0xb363 | 0xb364 | 0xb365 | 0xb366 | 0xb367 | 0xb368 | 0xb369 | 0xb36a | 0xb36b | 0xb36c | 0xb36d | 0xb36e | 0xb36f | 0xb370 | 0xb371 | 0xb372 | 0xb373 | 0xb374 | 0xb375 | 0xb376 | 0xb377 | 0xb378 | 0xb379 | 0xb37a | 0xb37b | 0xb37c | 0xb37d | 0xb37e | 0xb37f | 0xb380 | 0xb381 | 0xb382 | 0xb383 | 0xb384 | 0xb385 | 0xb386 | 0xb387 | 0xb388 | 0xb389 | 0xb38a | 0xb38b | 0xb38c | 0xb38d | 0xb38e | 0xb38f | 0xb390 | 0xb391 | 0xb392 | 0xb393 | 0xb394 | 0xb395 | 0xb396 | 0xb397 | 0xb398 | 0xb399 | 0xb39a | 0xb39b | 0xb39c | 0xb39d | 0xb39e | 0xb39f | 0xb3a0 | 0xb3a1 | 0xb3a2 | 0xb3a3 | 0xb3a4 | 0xb3a5 | 0xb3a6 | 0xb3a7 | 0xb3a8 | 0xb3a9 | 0xb3aa | 0xb3ab | 0xb3ac | 0xb3ad | 0xb3ae | 0xb3af | 0xb3b0 | 0xb3b1 | 0xb3b2 | 0xb3b3 | 0xb3b4 | 0xb3b5 | 0xb3b6 | 0xb3b7 | 0xb3b8 | 0xb3b9 | 0xb3ba | 0xb3bb | 0xb3bc | 0xb3bd | 0xb3be | 0xb3bf | 0xb3c0 | 0xb3c1 | 0xb3c2 | 0xb3c3 | 0xb3c4 | 0xb3c5 | 0xb3c6 | 0xb3c7 | 0xb3c8 | 0xb3c9 | 0xb3ca | 0xb3cb | 0xb3cc | 0xb3cd | 0xb3ce | 0xb3cf | 0xb3d0 | 0xb3d1 | 0xb3d2 | 0xb3d3 | 0xb3d4 | 0xb3d5 | 0xb3d6 | 0xb3d7 | 0xb3d8 | 0xb3d9 | 0xb3da | 0xb3db | 0xb3dc | 0xb3dd | 0xb3de | 0xb3df | 0xb3e0 | 0xb401 | 0xb402 } HashCode\n */\n\n/**\n * @type { Record<HashName,HashCode> }\n */\nconst names = Object.freeze({\n  'identity': 0x00,\n  'sha1': 0x11,\n  'sha2-256': 0x12,\n  'sha2-512': 0x13,\n  'sha3-512': 0x14,\n  'sha3-384': 0x15,\n  'sha3-256': 0x16,\n  'sha3-224': 0x17,\n  'shake-128': 0x18,\n  'shake-256': 0x19,\n  'keccak-224': 0x1a,\n  'keccak-256': 0x1b,\n  'keccak-384': 0x1c,\n  'keccak-512': 0x1d,\n  'blake3': 0x1e,\n  'murmur3-128': 0x22,\n  'murmur3-32': 0x23,\n  'dbl-sha2-256': 0x56,\n  'md4': 0xd4,\n  'md5': 0xd5,\n  'bmt': 0xd6,\n  'sha2-256-trunc254-padded': 0x1012,\n  'ripemd-128': 0x1052,\n  'ripemd-160': 0x1053,\n  'ripemd-256': 0x1054,\n  'ripemd-320': 0x1055,\n  'x11': 0x1100,\n  'kangarootwelve': 0x1d01,\n  'sm3-256': 0x534d,\n  'blake2b-8': 0xb201,\n  'blake2b-16': 0xb202,\n  'blake2b-24': 0xb203,\n  'blake2b-32': 0xb204,\n  'blake2b-40': 0xb205,\n  'blake2b-48': 0xb206,\n  'blake2b-56': 0xb207,\n  'blake2b-64': 0xb208,\n  'blake2b-72': 0xb209,\n  'blake2b-80': 0xb20a,\n  'blake2b-88': 0xb20b,\n  'blake2b-96': 0xb20c,\n  'blake2b-104': 0xb20d,\n  'blake2b-112': 0xb20e,\n  'blake2b-120': 0xb20f,\n  'blake2b-128': 0xb210,\n  'blake2b-136': 0xb211,\n  'blake2b-144': 0xb212,\n  'blake2b-152': 0xb213,\n  'blake2b-160': 0xb214,\n  'blake2b-168': 0xb215,\n  'blake2b-176': 0xb216,\n  'blake2b-184': 0xb217,\n  'blake2b-192': 0xb218,\n  'blake2b-200': 0xb219,\n  'blake2b-208': 0xb21a,\n  'blake2b-216': 0xb21b,\n  'blake2b-224': 0xb21c,\n  'blake2b-232': 0xb21d,\n  'blake2b-240': 0xb21e,\n  'blake2b-248': 0xb21f,\n  'blake2b-256': 0xb220,\n  'blake2b-264': 0xb221,\n  'blake2b-272': 0xb222,\n  'blake2b-280': 0xb223,\n  'blake2b-288': 0xb224,\n  'blake2b-296': 0xb225,\n  'blake2b-304': 0xb226,\n  'blake2b-312': 0xb227,\n  'blake2b-320': 0xb228,\n  'blake2b-328': 0xb229,\n  'blake2b-336': 0xb22a,\n  'blake2b-344': 0xb22b,\n  'blake2b-352': 0xb22c,\n  'blake2b-360': 0xb22d,\n  'blake2b-368': 0xb22e,\n  'blake2b-376': 0xb22f,\n  'blake2b-384': 0xb230,\n  'blake2b-392': 0xb231,\n  'blake2b-400': 0xb232,\n  'blake2b-408': 0xb233,\n  'blake2b-416': 0xb234,\n  'blake2b-424': 0xb235,\n  'blake2b-432': 0xb236,\n  'blake2b-440': 0xb237,\n  'blake2b-448': 0xb238,\n  'blake2b-456': 0xb239,\n  'blake2b-464': 0xb23a,\n  'blake2b-472': 0xb23b,\n  'blake2b-480': 0xb23c,\n  'blake2b-488': 0xb23d,\n  'blake2b-496': 0xb23e,\n  'blake2b-504': 0xb23f,\n  'blake2b-512': 0xb240,\n  'blake2s-8': 0xb241,\n  'blake2s-16': 0xb242,\n  'blake2s-24': 0xb243,\n  'blake2s-32': 0xb244,\n  'blake2s-40': 0xb245,\n  'blake2s-48': 0xb246,\n  'blake2s-56': 0xb247,\n  'blake2s-64': 0xb248,\n  'blake2s-72': 0xb249,\n  'blake2s-80': 0xb24a,\n  'blake2s-88': 0xb24b,\n  'blake2s-96': 0xb24c,\n  'blake2s-104': 0xb24d,\n  'blake2s-112': 0xb24e,\n  'blake2s-120': 0xb24f,\n  'blake2s-128': 0xb250,\n  'blake2s-136': 0xb251,\n  'blake2s-144': 0xb252,\n  'blake2s-152': 0xb253,\n  'blake2s-160': 0xb254,\n  'blake2s-168': 0xb255,\n  'blake2s-176': 0xb256,\n  'blake2s-184': 0xb257,\n  'blake2s-192': 0xb258,\n  'blake2s-200': 0xb259,\n  'blake2s-208': 0xb25a,\n  'blake2s-216': 0xb25b,\n  'blake2s-224': 0xb25c,\n  'blake2s-232': 0xb25d,\n  'blake2s-240': 0xb25e,\n  'blake2s-248': 0xb25f,\n  'blake2s-256': 0xb260,\n  'skein256-8': 0xb301,\n  'skein256-16': 0xb302,\n  'skein256-24': 0xb303,\n  'skein256-32': 0xb304,\n  'skein256-40': 0xb305,\n  'skein256-48': 0xb306,\n  'skein256-56': 0xb307,\n  'skein256-64': 0xb308,\n  'skein256-72': 0xb309,\n  'skein256-80': 0xb30a,\n  'skein256-88': 0xb30b,\n  'skein256-96': 0xb30c,\n  'skein256-104': 0xb30d,\n  'skein256-112': 0xb30e,\n  'skein256-120': 0xb30f,\n  'skein256-128': 0xb310,\n  'skein256-136': 0xb311,\n  'skein256-144': 0xb312,\n  'skein256-152': 0xb313,\n  'skein256-160': 0xb314,\n  'skein256-168': 0xb315,\n  'skein256-176': 0xb316,\n  'skein256-184': 0xb317,\n  'skein256-192': 0xb318,\n  'skein256-200': 0xb319,\n  'skein256-208': 0xb31a,\n  'skein256-216': 0xb31b,\n  'skein256-224': 0xb31c,\n  'skein256-232': 0xb31d,\n  'skein256-240': 0xb31e,\n  'skein256-248': 0xb31f,\n  'skein256-256': 0xb320,\n  'skein512-8': 0xb321,\n  'skein512-16': 0xb322,\n  'skein512-24': 0xb323,\n  'skein512-32': 0xb324,\n  'skein512-40': 0xb325,\n  'skein512-48': 0xb326,\n  'skein512-56': 0xb327,\n  'skein512-64': 0xb328,\n  'skein512-72': 0xb329,\n  'skein512-80': 0xb32a,\n  'skein512-88': 0xb32b,\n  'skein512-96': 0xb32c,\n  'skein512-104': 0xb32d,\n  'skein512-112': 0xb32e,\n  'skein512-120': 0xb32f,\n  'skein512-128': 0xb330,\n  'skein512-136': 0xb331,\n  'skein512-144': 0xb332,\n  'skein512-152': 0xb333,\n  'skein512-160': 0xb334,\n  'skein512-168': 0xb335,\n  'skein512-176': 0xb336,\n  'skein512-184': 0xb337,\n  'skein512-192': 0xb338,\n  'skein512-200': 0xb339,\n  'skein512-208': 0xb33a,\n  'skein512-216': 0xb33b,\n  'skein512-224': 0xb33c,\n  'skein512-232': 0xb33d,\n  'skein512-240': 0xb33e,\n  'skein512-248': 0xb33f,\n  'skein512-256': 0xb340,\n  'skein512-264': 0xb341,\n  'skein512-272': 0xb342,\n  'skein512-280': 0xb343,\n  'skein512-288': 0xb344,\n  'skein512-296': 0xb345,\n  'skein512-304': 0xb346,\n  'skein512-312': 0xb347,\n  'skein512-320': 0xb348,\n  'skein512-328': 0xb349,\n  'skein512-336': 0xb34a,\n  'skein512-344': 0xb34b,\n  'skein512-352': 0xb34c,\n  'skein512-360': 0xb34d,\n  'skein512-368': 0xb34e,\n  'skein512-376': 0xb34f,\n  'skein512-384': 0xb350,\n  'skein512-392': 0xb351,\n  'skein512-400': 0xb352,\n  'skein512-408': 0xb353,\n  'skein512-416': 0xb354,\n  'skein512-424': 0xb355,\n  'skein512-432': 0xb356,\n  'skein512-440': 0xb357,\n  'skein512-448': 0xb358,\n  'skein512-456': 0xb359,\n  'skein512-464': 0xb35a,\n  'skein512-472': 0xb35b,\n  'skein512-480': 0xb35c,\n  'skein512-488': 0xb35d,\n  'skein512-496': 0xb35e,\n  'skein512-504': 0xb35f,\n  'skein512-512': 0xb360,\n  'skein1024-8': 0xb361,\n  'skein1024-16': 0xb362,\n  'skein1024-24': 0xb363,\n  'skein1024-32': 0xb364,\n  'skein1024-40': 0xb365,\n  'skein1024-48': 0xb366,\n  'skein1024-56': 0xb367,\n  'skein1024-64': 0xb368,\n  'skein1024-72': 0xb369,\n  'skein1024-80': 0xb36a,\n  'skein1024-88': 0xb36b,\n  'skein1024-96': 0xb36c,\n  'skein1024-104': 0xb36d,\n  'skein1024-112': 0xb36e,\n  'skein1024-120': 0xb36f,\n  'skein1024-128': 0xb370,\n  'skein1024-136': 0xb371,\n  'skein1024-144': 0xb372,\n  'skein1024-152': 0xb373,\n  'skein1024-160': 0xb374,\n  'skein1024-168': 0xb375,\n  'skein1024-176': 0xb376,\n  'skein1024-184': 0xb377,\n  'skein1024-192': 0xb378,\n  'skein1024-200': 0xb379,\n  'skein1024-208': 0xb37a,\n  'skein1024-216': 0xb37b,\n  'skein1024-224': 0xb37c,\n  'skein1024-232': 0xb37d,\n  'skein1024-240': 0xb37e,\n  'skein1024-248': 0xb37f,\n  'skein1024-256': 0xb380,\n  'skein1024-264': 0xb381,\n  'skein1024-272': 0xb382,\n  'skein1024-280': 0xb383,\n  'skein1024-288': 0xb384,\n  'skein1024-296': 0xb385,\n  'skein1024-304': 0xb386,\n  'skein1024-312': 0xb387,\n  'skein1024-320': 0xb388,\n  'skein1024-328': 0xb389,\n  'skein1024-336': 0xb38a,\n  'skein1024-344': 0xb38b,\n  'skein1024-352': 0xb38c,\n  'skein1024-360': 0xb38d,\n  'skein1024-368': 0xb38e,\n  'skein1024-376': 0xb38f,\n  'skein1024-384': 0xb390,\n  'skein1024-392': 0xb391,\n  'skein1024-400': 0xb392,\n  'skein1024-408': 0xb393,\n  'skein1024-416': 0xb394,\n  'skein1024-424': 0xb395,\n  'skein1024-432': 0xb396,\n  'skein1024-440': 0xb397,\n  'skein1024-448': 0xb398,\n  'skein1024-456': 0xb399,\n  'skein1024-464': 0xb39a,\n  'skein1024-472': 0xb39b,\n  'skein1024-480': 0xb39c,\n  'skein1024-488': 0xb39d,\n  'skein1024-496': 0xb39e,\n  'skein1024-504': 0xb39f,\n  'skein1024-512': 0xb3a0,\n  'skein1024-520': 0xb3a1,\n  'skein1024-528': 0xb3a2,\n  'skein1024-536': 0xb3a3,\n  'skein1024-544': 0xb3a4,\n  'skein1024-552': 0xb3a5,\n  'skein1024-560': 0xb3a6,\n  'skein1024-568': 0xb3a7,\n  'skein1024-576': 0xb3a8,\n  'skein1024-584': 0xb3a9,\n  'skein1024-592': 0xb3aa,\n  'skein1024-600': 0xb3ab,\n  'skein1024-608': 0xb3ac,\n  'skein1024-616': 0xb3ad,\n  'skein1024-624': 0xb3ae,\n  'skein1024-632': 0xb3af,\n  'skein1024-640': 0xb3b0,\n  'skein1024-648': 0xb3b1,\n  'skein1024-656': 0xb3b2,\n  'skein1024-664': 0xb3b3,\n  'skein1024-672': 0xb3b4,\n  'skein1024-680': 0xb3b5,\n  'skein1024-688': 0xb3b6,\n  'skein1024-696': 0xb3b7,\n  'skein1024-704': 0xb3b8,\n  'skein1024-712': 0xb3b9,\n  'skein1024-720': 0xb3ba,\n  'skein1024-728': 0xb3bb,\n  'skein1024-736': 0xb3bc,\n  'skein1024-744': 0xb3bd,\n  'skein1024-752': 0xb3be,\n  'skein1024-760': 0xb3bf,\n  'skein1024-768': 0xb3c0,\n  'skein1024-776': 0xb3c1,\n  'skein1024-784': 0xb3c2,\n  'skein1024-792': 0xb3c3,\n  'skein1024-800': 0xb3c4,\n  'skein1024-808': 0xb3c5,\n  'skein1024-816': 0xb3c6,\n  'skein1024-824': 0xb3c7,\n  'skein1024-832': 0xb3c8,\n  'skein1024-840': 0xb3c9,\n  'skein1024-848': 0xb3ca,\n  'skein1024-856': 0xb3cb,\n  'skein1024-864': 0xb3cc,\n  'skein1024-872': 0xb3cd,\n  'skein1024-880': 0xb3ce,\n  'skein1024-888': 0xb3cf,\n  'skein1024-896': 0xb3d0,\n  'skein1024-904': 0xb3d1,\n  'skein1024-912': 0xb3d2,\n  'skein1024-920': 0xb3d3,\n  'skein1024-928': 0xb3d4,\n  'skein1024-936': 0xb3d5,\n  'skein1024-944': 0xb3d6,\n  'skein1024-952': 0xb3d7,\n  'skein1024-960': 0xb3d8,\n  'skein1024-968': 0xb3d9,\n  'skein1024-976': 0xb3da,\n  'skein1024-984': 0xb3db,\n  'skein1024-992': 0xb3dc,\n  'skein1024-1000': 0xb3dd,\n  'skein1024-1008': 0xb3de,\n  'skein1024-1016': 0xb3df,\n  'skein1024-1024': 0xb3e0,\n  'poseidon-bls12_381-a2-fc1': 0xb401,\n  'poseidon-bls12_381-a2-fc1-sc': 0xb402\n})\n\nmodule.exports = { names }\n","var Registry = {\r\n\r\n\texternalRenderer: false,\r\n\r\n\taddExtension(prefix, spec) {\r\n\t\tFields.extensions[prefix] = _.normalizeField(spec, Fields.extensions);\r\n\t},\r\n\r\n\taddMetadataField(field, spec) {\r\n\t\tFields.metadata[field] = _.normalizeField(spec, Fields.metadata);\r\n\t},\r\n\r\n\taddMetadataFields(specs) {\r\n\t\tfor(var key in specs) {\r\n\t\t\tRegistry.addMetadataField(key, specs[key]);\r\n\t\t}\r\n\t}\r\n\r\n};\r\n\r\nvar _ = {\r\n\r\n\te(str) {\r\n\t\tif (typeof str !== 'string') {\r\n\t\t\tstr = String(str);\r\n\t\t}\r\n\t\treturn str.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, '&apos;');\r\n\t},\r\n\r\n\ttoList(arr, sort = false, formatter = null) {\r\n\t\tlet list = arr;\r\n\t\tlet tag = 'ol';\r\n\t\tif (sort) {\r\n\t\t\tlist = list.slice(0).sort();\r\n\t\t\ttag = 'ul';\r\n\t\t}\r\n\t\tif (typeof formatter === 'function') {\r\n\t\t\tlist = list.map(formatter);\r\n\t\t}\r\n\t\tif (list.length === 0) {\r\n\t\t\treturn formatter(null);\r\n\t\t}\r\n\t\telse if (list.length === 1) {\r\n\t\t\treturn list[0];\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn `<${tag}><li>${list.join(\"</li><li>\")}</li></${tag}>`;\r\n\t\t}\r\n\t},\r\n\r\n\ttoLink(url, title) {\r\n\t\treturn `<a href=\"${url}\" target=\"_blank\">${title}</a>`;\r\n\t},\r\n\r\n\ttoObject(obj, formatter = null) {\r\n\t\tlet html = '<dl>';\r\n\t\tfor(let key in obj) {\r\n\t\t\t// ToDo: also convert CamelCase? but not abbreviations like \"USA\".\r\n\t\t\tlet label = _.formatKey(key, true);\r\n\t\t\tlet value = obj[key];\r\n\t\t\tif (typeof formatter === 'function') {\r\n\t\t\t\tvalue = formatter(value, key);\r\n\t\t\t}\r\n\t\t\t// TODO: Format label (also in arrays)\r\n\t\t\thtml += `<dt>${label}</dt><dd>${value}</dd>`;\r\n\t\t}\r\n\t\thtml += `</dl>`;\r\n\t\treturn html;\r\n\t},\r\n\r\n\tisObject(obj) {\r\n\t\treturn (typeof obj === 'object' && obj === Object(obj) && !Array.isArray(obj));\r\n\t},\r\n\r\n\tformatKey(key, prefix = false) {\r\n\t\tif (prefix === false) {\r\n\t\t\tkey = key.replace(/^\\w+:/i, '');\r\n\t\t}\r\n\t\treturn _.e(key).split(/[:_\\-\\s]/g).map(part => part.substr(0, 1).toUpperCase() + part.substr(1)).join(' ');\r\n\t},\r\n\r\n\tnormalizeFields(fields) {\r\n\t\tfor(let key in fields.extensions) {\r\n\t\t\tfields.extensions[key] = _.normalizeField(fields.extensions[key], fields.extensions);\r\n\t\t}\r\n\t\tfor(let key in fields.metadata) {\r\n\t\t\tfields.metadata[key] = _.normalizeField(fields.metadata[key], fields.metadata);\r\n\t\t}\r\n\t\treturn fields;\r\n\t},\r\n\r\n\tnormalizeField(spec, fields = {}) {\r\n\t\t// If just a string label is given, make a normal object with a label from it\r\n\t\tif (typeof spec === 'string') {\r\n\t\t\treturn {\r\n\t\t\t\tlabel: spec\r\n\t\t\t};\r\n\t\t}\r\n\t\t// Resolve alias\r\n\t\tif (typeof spec.alias === 'string') {\r\n\t\t\t// As we don't know whether the alias has been resolved so far, resolve it here, too.\r\n\t\t\treturn Object.assign(spec, _.normalizeField(fields[spec.alias], fields));\r\n\t\t}\r\n\r\n\t\t// Add formatting callback as `formatter`\r\n\t\tif (typeof spec.format === 'string') {\r\n\t\t\tspec.formatter = Formatters[`format${spec.format}`];\r\n\t\t}\r\n\r\n\t\t// Normalize items\r\n\t\tif (_.isObject(spec.items)) {\r\n\t\tlet itemOrder = [];\r\n\t\t\tfor(let key in spec.items) {\r\n\t\t\t\tspec.items[key] = _.normalizeField(spec.items[key], fields);\r\n\t\t\t\titemOrder.push(Object.assign({key}, spec.items[key]));\r\n\t\t\t}\r\n\r\n\t\t\tspec.itemOrder = itemOrder\r\n\t\t\t\t.sort((i1, i2) => {\r\n\t\t\t\t\tif (i1.id === true) {\r\n\t\t\t\t\t\treturn -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (i2.id === true) {\r\n\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof i1.order === 'number' && typeof i2.order === 'number') {\r\n\t\t\t\t\t\treturn i1.order - i2.order;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\treturn i1.label.localeCompare(i2.label);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.map(item => item.key);\r\n\t\t}\r\n\r\n\t\treturn spec;\r\n\t},\r\n\r\n\thexToUint8(hexString) {\r\n\t\tif(hexString.length === 0 || hexString.length % 2 !== 0){\r\n\t\t\tthrow new Error(`The string \"${hexString}\" is not valid hex.`)\r\n\t\t}\r\n  \t\treturn new Uint8Array(hexString.match(/.{1,2}/g).map(byte => parseInt(byte, 16)));\r\n\t},\r\n\r\n\tuint8ToHex(bytes) {\r\n\t\treturn bytes.reduce((str, byte) => str + byte.toString(16).padStart(2, '0'), '');\r\n\t},\r\n\r\n\tkeysFromListOfObjects(objectList) {\r\n\t\treturn objectList.reduce(\r\n\t\t\t(arr, o) => Object.keys(o).reduce(\r\n\t\t\t\t(a, k) => {\r\n\t\t\t\t\tif (a.indexOf(k) == -1) {\r\n\t\t\t\t\t\ta.push(k);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn a;\r\n\t\t\t\t},\r\n\t\t\t\tarr\r\n\t\t\t),\r\n\t\t\t[]\r\n\t\t);\r\n\t},\r\n\r\n\tunit(value, unit = '') {\r\n\t\tif (typeof unit === 'string' && unit.length > 0) {\r\n\t\t\treturn `${value}&nbsp;<span class=\"unit\">${unit}</unit>`;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n};\r\n\r\nvar DataTypes = {\r\n\r\n\tarray(arr, sort = false, unit = '') {\r\n\t\treturn _.toList(arr, sort, v => DataTypes.format(v, unit));\r\n\t},\r\n\t\r\n\tobject(obj) {\r\n\t\treturn _.toObject(obj, v => DataTypes.format(v));\r\n\t},\r\n\t\r\n\tnull(label = 'n/a') {\r\n\t\treturn `<i class=\"null\">${label}</i>`;\r\n\t},\r\n\t\r\n\tnumber(num, unit = '') {\r\n\t\tif (typeof num !== 'number') {\r\n\t\t\tnum = parseFloat(num);\r\n\t\t}\r\n\t\treturn _.unit(num.toLocaleString(), unit);\r\n\t},\r\n\r\n\tstring(str, unit = '') {\r\n\t\treturn _.unit(_.e(str).replace(/(\\r\\n|\\r|\\n){2,}/g, '<br />'), unit);\r\n\t},\r\n\t\r\n\tboolean(bool) {\r\n\t\treturn bool ? '✔️' : '❌';\r\n\t},\r\n\t\r\n\tformat(value, unit = '') {\r\n\t\tif (typeof value === 'boolean') {\r\n\t\t\treturn DataTypes.boolean(value);\r\n\t\t}\r\n\t\telse if (typeof value === 'number') {\r\n\t\t\treturn DataTypes.number(value, unit);\r\n\t\t}\r\n\t\telse if (typeof value === 'string') {\r\n\t\t\treturn DataTypes.string(value, unit);\r\n\t\t}\r\n\t\telse if (Array.isArray(value)) {\r\n\t\t\treturn DataTypes.array(value, unit);\r\n\t\t}\r\n\t\telse if (_.isObject(value)) {\r\n\t\t\treturn DataTypes.object(value);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn DataTypes.null();\r\n\t\t}\r\n\t}\r\n\r\n};\r\n\r\nvar Formatters = {\r\n\r\n\tformatTimestamp(value) {\r\n\t\tif (typeof value === 'string') {\r\n\t\t\ttry {\r\n\t\t\t\treturn new Date(value).toLocaleString([], {\r\n\t\t\t\t\ttimeZone: \"UTC\",\r\n\t\t\t\t\ttimeZoneName: \"short\"\r\n\t\t\t\t});\r\n\t\t\t} catch (error) {}\r\n\t\t}\r\n\t\treturn DataTypes.null();\r\n\t},\r\n\r\n\tformatLicense(value, field, spec, context = null) {\r\n\t\tif (typeof value !== 'string' || value.length === 0) {\r\n\t\t\treturn DataTypes.null();\r\n\t\t}\r\n\r\n\t\t// We could use the spdx-license-ids and/or spdx-to-html packages previously used in STAC Browser,\r\n\t\t// but let's try it without additional dependency for now.\r\n\t\tif (value !== 'proprietary' && value !== 'various' && value.match(/^[\\w\\.\\-]+$/i)) { // SPDX\r\n\t\t\treturn _.toLink(`https://spdx.org/licenses/${value}.html`, value);\r\n\t\t}\r\n\t\t\r\n\t\tlet licenses = Array.isArray(context.links) ? context.links.filter(link => (_.isObject(link) && typeof link.href === 'string' && link.rel === 'license')) : [];\r\n\t\treturn _.toList(licenses, false, link => _.toLink(_.e(link.href), _.e(link.title || value)));\r\n\t},\r\n\r\n\tformatProviders(value) {\r\n\t\treturn _.toList(value, false, provider => {\r\n\t\t\tlet name = provider.name;\r\n\t\t\tlet roles = '';\r\n\t\t\tlet description = '';\r\n\t\t\tif (typeof provider.url === 'string' && provider.url.length > 0) {\r\n\t\t\t\tname = _.toLink(provider.url, name);\r\n\t\t\t}\r\n\t\t\tif (Array.isArray(provider.roles) && provider.roles.length > 0) {\r\n\t\t\t\troles = provider.roles.map(r => _.e(r)).join(', ');\r\n\t\t\t\troles = ` (<em>${roles}</em>)`;\r\n\t\t\t}\r\n\t\t\tif (typeof provider.description === 'string' && provider.description.length > 0) {\r\n\t\t\t\tdescription = Formatters.formatCommonMark(provider.description);\r\n\t\t\t}\r\n\t\t\treturn `${name}${roles}${description}`;\r\n\t\t});\r\n\t},\r\n\r\n\tformatCommonMark(value) {\r\n\t\tif (typeof value !== 'string' || value.length === 0) {\r\n\t\t\treturn DataTypes.null();\r\n\t\t}\r\n\t\tconst commonmark = require('commonmark');\r\n\t\tlet reader = new commonmark.Parser();\r\n\t\tlet writer = new commonmark.HtmlRenderer({safe: true, smart: true});\r\n\t\tlet html = writer.render(reader.parse(value));\r\n\t\treturn `<div class=\"description\">${html}</div>`;\r\n\t},\r\n\r\n\tformatSoftware(value) {\r\n\t\tif (!_.isObject(value)) {\r\n\t\t\treturn DataTypes.null();\r\n\t\t}\r\n\r\n\t\tlet list = [];\r\n\t\tfor(let software in value) {\r\n\t\t\tlet version = value[software];\r\n\t\t\tif ((typeof version === 'string' && version.length > 0) || typeof version === 'number') {\r\n\t\t\t\tlist.push(`${software} (${version})`);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlist.push(software);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn _.toList(list, true);\r\n\t},\r\n\r\n\tformatDOI(value) {\r\n\t\tvalue = _.e(value);\r\n\t\treturn _.toLink(`http://doi.org/${value}`, value);\r\n\t},\r\n\r\n\tformatEPSG(value) {\r\n\t\t// Remove leading 'epsg:' which people sometimes prepend\r\n\t\tif (typeof value === 'string') {\r\n\t\t\tvalue = value.replace(/^epsg:/i, '');\r\n\t\t}\r\n\t\tvalue = parseInt(value, 10);\r\n\t\tif (value > 0) {\r\n\t\t\treturn _.toLink(`http://epsg.io/${value}`, value);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn DataTypes.null();\r\n\t\t}\r\n\t},\r\n\r\n\tformatExtent(value, unit = '') {\r\n\t\tif (!Array.isArray(value) || value.length < 2 || (value[0] === null && value[1] === null)) {\r\n\t\t\treturn DataTypes.formatNull();\r\n\t\t}\r\n\t\telse if (value[0] === null) {\r\n\t\t\treturn `Until ${DataTypes.format(value[1], unit)}`;\r\n\t\t}\r\n\t\telse if (value[1] === null) {\r\n\t\t\treturn `From ${DataTypes.format(value[0], unit)}`;\r\n\t\t}\r\n\t\telse if (value[0] === value[1]) {\r\n\t\t\treturn DataTypes.format(value[0], unit);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn value.map(v => DataTypes.format(v, unit)).join(' – ');\r\n\t\t}\r\n\t},\r\n\r\n\t// Helper, not used at the moment\r\n\tformatTemporalExtent(value) {\r\n\t\tif (!Array.isArray(value) || value.length < 2 || (typeof value[0] !== 'string' && typeof value[1] !== 'string')) {\r\n\t\t\treturn DataTypes.formatNull();\r\n\t\t}\r\n\t\telse if (typeof value[0] !== 'string') {\r\n\t\t\treturn `Until ${Formatters.formatTimestamp(value[1])}`;\r\n\t\t}\r\n\t\telse if (typeof value[1] !== 'string') {\r\n\t\t\treturn `${Formatters.formatTimestamp(value[0])} until present`;\r\n\t\t}\r\n\t\telse if (value[0] === value[1]) {\r\n\t\t\treturn Formatters.formatTimestamp(value[0]);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn value.map(date => Formatters.formatTimestamp(date)).join(' - ');\r\n\t\t}\r\n\t},\r\n\r\n\tformatWKT2(value) {\r\n\t\tif (typeof value !== 'string') {\r\n\t\t\treturn DataTypes.formatNull();\r\n\t\t}\r\n\t\t\r\n\t\t// This is a VERY simplistic WKT2 formatter, which may fail to render properly in some cases.\r\n\t\tlet indent = -1;\r\n\t\tlet formatted;\r\n\t\ttry {\r\n\t\t\tformatted = value.replace(/([A-Z]+)\\[|\\]/g, (match, keyword) => {\r\n\t\t\t\tif (match === ']') {\r\n\t\t\t\t\tindent--;\r\n\t\t\t\t\treturn match;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tindent++;\r\n\t\t\t\t\tlet tabs = \"  \".repeat(indent);\r\n\t\t\t\t\treturn `\\n${tabs}${keyword}[`;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} catch (e) {\r\n\t\t\t// In case the formatting did not work properly\r\n\t\t\t// (usually the number of [ and ] doesn't match)\r\n\t\t\t// just return the unformatted value\r\n\t\t\tformatted = value;\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\treturn `<pre>${formatted}</pre>`;\r\n\t},\r\n\r\n\tfileSizeUnits: ['B', 'kB', 'MB', 'GB', 'TB'],\r\n\r\n\tformatFileSize(value) {\r\n\t\tif (typeof value !== 'number') {\r\n\t\t\treturn _.e(value);\r\n\t\t}\r\n\t\tvar i = value == 0 ? 0 : Math.floor( Math.log(value) / Math.log(1024) );\r\n\t\treturn _.unit(( value / Math.pow(1024, i) ).toFixed(2) * 1, Formatters.fileSizeUnits[i]);\r\n\t},\r\n\r\n\tformatChecksum(value) {\r\n\t\tif (typeof value !== 'string') {\r\n\t\t\treturn DataTypes.formatNull();\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tconst multihash = require('multihashes');\r\n\t\t\tconst meta = multihash.decode(_.hexToUint8(value));\r\n\t\t\tconst name = _.e(meta.name);\r\n\t\t\tconst hex = _.e(_.uint8ToHex(meta.digest));\r\n\t\t\treturn `<input class=\"checksum-input\" size=\"32\" value=\"${hex}\" readonly /><br />Hashing algorithm: <strong>${name}</strong>`;\r\n\t\t} catch (error) {\r\n\t\t\treturn DataTypes.null();\r\n\t\t}\r\n\t},\r\n\r\n\tfileDataTypes: {\r\n\t\t\"int8\": \"8-bit integer\",\r\n\t\t\"int16\": \"16-bit integer\",\r\n\t\t\"int32\": \"32-bit integer\",\r\n\t\t\"int64\": \"64-bit integer\",\r\n\t\t\"uint8\": \"unsigned 8-bit integer\",\r\n\t\t\"uint16\": \"unsigned 16-bit integer\",\r\n\t\t\"uint32\": \"unsigned 32-bit integer\",\r\n\t\t\"uint64\": \"unsigned 64-bit integer\",\r\n\t\t\"float16\": \"16-bit float\",\r\n\t\t\"float32\": \"32-bit float\",\r\n\t\t\"float64\": \"64-big float\",\r\n\t\t\"cint16\": \"16-bit complex integer\",\r\n\t\t\"cint32\": \"32-bit complex integer\",\r\n\t\t\"cfloat32\": \"32-bit complex float\",\r\n\t\t\"cfloat64\": \"64-bit complex float\",\r\n\t\t\"other\": \"Other\"\r\n\t},\r\n\r\n\tformatFileDataType(value) {\r\n\t\tif (typeof value === 'string' && value in Formatters.fileDataTypes) {\r\n\t\t\treturn `<abbr title=\"${Formatters.fileDataTypes[value]}\">${value}</abbr>`;\r\n\t\t}\r\n\r\n\t\treturn DataTypes.formatNull();\r\n\t},\r\n\r\n\tformatCSV(value) {\r\n\t\tif (Array.isArray(value)) {\r\n\t\t\tlet numeric = value.find(v => typeof v === 'number') !== undefined;\r\n\t\t\t// If there's potentially a comma in the values (decimal or thousand separators in numbers), use semicolon instead of comma.\r\n\t\t\treturn value.map(_.e).join(numeric ? '; ' : ', ');\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn _.e(value);\r\n\t\t}\r\n\t}\r\n\r\n};\r\n\r\nfunction formatGrouped(context, prop, filter, coreKey) {\r\n\t// Group fields into extensions\r\n\tlet groups = {};\r\n\tfor(let field in context[prop]) {\r\n\t\tlet parts = field.split(':', 2);\r\n\t\tif (parts.length === 1) {\r\n\t\t\tparts.unshift(coreKey);\r\n\t\t}\r\n\t\tlet ext = parts[0];\r\n\t\tif (typeof filter === 'function' && !filter(field)) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\t// Add group if missing\r\n\t\tif (!_.isObject(groups[ext])) {\r\n\t\t\tgroups[ext] = {\r\n\t\t\t\textension: ext,\r\n\t\t\t\tlabel: extension(ext),\r\n\t\t\t\tproperties: {}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tlet value = context[prop][field];\r\n\t\tlet spec = Fields.metadata[field] || {};\r\n\t\t// Special handling for summaries that contain a list with keys (e.g. cube:dimensions, gee:schema)\r\n\t\t// There's usually just a single object included, so get that as value\r\n\t\tlet isSummarizedListWithKeys = false;\r\n\t\tif (prop === 'summaries' && spec.listWithKeys && Array.isArray(value) && value.length > 0) {\r\n\t\t\tvalue = value[0];\r\n\t\t\tisSummarizedListWithKeys = true;\r\n\t\t}\r\n\r\n\t\t// Fill items with missing properties\r\n\t\tlet items = null;\r\n\t\tlet itemOrder = [];\r\n\t\tif (_.isObject(spec.items)) {\r\n\t\t\tlet temp = value;\r\n\t\t\t// Ignore keys for lists that are stored as object (e.g. cube:dimensions)\r\n\t\t\tif (spec.listWithKeys) {\r\n\t\t\t\ttemp = Object.values(temp);\r\n\t\t\t}\r\n\r\n\t\t\tlet itemFieldNames;\r\n\t\t\tif (Array.isArray(temp)) {\r\n\t\t\t\titemFieldNames = _.keysFromListOfObjects(temp);\r\n\t\t\t}\r\n\t\t\telse if (_.isObject(temp)) {\r\n\t\t\t\titemFieldNames = Object.keys(temp);\r\n\t\t\t}\r\n\r\n\t\t\titems = {};\r\n\t\t\t// Remove fields from list that are not available in the data\r\n\t\t\titemOrder = spec.itemOrder.filter(fieldName => itemFieldNames.includes(fieldName));\r\n\r\n\t\t\titemFieldNames.forEach(key => {\r\n\t\t\t\tif (typeof spec.items[key] === 'undefined') {\r\n\t\t\t\t\t// Add fields that are not specified in fields.json\r\n\t\t\t\t\titems[key] = {\r\n\t\t\t\t\t\tlabel: _.formatKey(key),\r\n\t\t\t\t\t\texplain: key\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// Place non-specified fields at the end\r\n\t\t\t\t\titemOrder.push(key);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// Copy field spec from fields.json\r\n\t\t\t\t\titems[key] = spec.items[key];\r\n\t\t\t\t\titems[key].label = label(key, spec.items);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Format values\r\n\t\tlet formatted;\r\n\r\n\t\t// Handle summaries\r\n\t\tif (prop === 'summaries') {\r\n\t\t\t// ToDo: Migrate to RC1, where this is minimum and maximum instead of min and max\r\n\t\t\tif (!isSummarizedListWithKeys && _.isObject(value) && typeof value.min !== 'undefined' && typeof value.max !== 'undefined') {\r\n\t\t\t\tformatted = Formatters.formatExtent([value.min, value.max], spec.unit);\r\n\t\t\t}\r\n\t\t\telse if (Registry.externalRenderer && items) {\r\n\t\t\t\tlet formatted = isSummarizedListWithKeys ? Object.assign({}, value) : value.slice(0);\r\n\t\t\t\t// Go through each field's summary\r\n\t\t\t\tfor(let i in formatted) {\r\n\t\t\t\t\tlet result = _.isObject(formatted[i]) ? {} : [];\r\n\t\t\t\t\t// Go through each entry in a field's summary (this is besically a single value as defined in the Item spec)\r\n\t\t\t\t\tfor(let key in items) {\r\n\t\t\t\t\t\tresult[key] = format(formatted[i][key], key, context, items[key]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tformatted[i] = result;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tformatted = _.toList(value, !spec.custom && !spec.items, v => format(v, field, context, spec));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Fallback to \"normal\" rendering if not handled by summaries yet\r\n\t\tif (typeof formatted === 'undefined') {\r\n\t\t\tformatted = format(value, field, context, spec);\r\n\t\t}\r\n\r\n\t\tgroups[ext].properties[field] = {\r\n\t\t\tlabel: label(field),\r\n\t\t\tvalue,\r\n\t\t\tformatted,\r\n\t\t\titems,\r\n\t\t\titemOrder,\r\n\t\t\tspec\r\n\t\t};\r\n\t}\r\n\treturn Object.values(groups).sort((a,b) => a.extension.localeCompare(b.extension));\r\n\r\n}\r\n\r\nfunction formatSummaries(collection, filter = null, coreKey = '') {\r\n\treturn formatGrouped(collection, 'summaries', filter, coreKey);\r\n}\r\n\r\nfunction formatItemProperties(item, filter = null, coreKey = '') {\r\n\treturn formatGrouped(item, 'properties', filter, coreKey);\r\n}\r\n\r\nfunction format(value, field, context = null, spec = null) {\r\n\tif (!_.isObject(spec)) {\r\n\t\tspec = Fields.metadata[field] || {};\r\n\t}\r\n\tif (typeof spec.formatter === 'function') {\r\n\t\treturn spec.formatter(value, field, spec, context) ;\r\n\t}\r\n\telse if (value === null && spec.null) {\r\n\t\treturn DataTypes.null(spec.null);\r\n\t}\r\n\telse if (Array.isArray(value)) {\r\n\t\tlet callback = v => format(v, field, context, spec);\r\n\t\tif (Registry.externalRenderer && (spec.custom || spec.items)) {\r\n\t\t\treturn value.map(callback);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn _.toList(value, false, callback);\r\n\t\t}\r\n\t}\r\n\telse if (_.isObject(value) && _.isObject(spec.items)) {\r\n\t\tlet callback = (v, k) => format(v, k, context, spec.listWithKeys ? Object.assign({}, spec, {listWithKeys: false}) : spec.items[k]);\r\n\t\tif (Registry.externalRenderer && (spec.custom || spec.items)) {\r\n\t\t\tlet formattedValues = {};\r\n\t\t\tfor(let key in value) {\r\n\t\t\t\tformattedValues[key] = callback(value[key], key);\r\n\t\t\t}\r\n\t\t\treturn formattedValues;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn _.toObject(value, callback);\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\treturn DataTypes.format(value, spec.unit);\r\n\t}\r\n}\r\n\r\nfunction label(key, specs = null) {\r\n\tlet spec;\r\n\tif (_.isObject(specs)) {\r\n\t\tspec = specs[key] || {};\r\n\t}\r\n\telse {\r\n\t\tspec = Fields.metadata[key] || {};\r\n\t}\r\n\tif (_.isObject(spec) && typeof spec.label === 'string') {\r\n\t\tif (typeof spec.explain === 'string') {\r\n\t\t\treturn `<abbr title=\"${_.e(spec.explain)}\">${spec.label}</abbr>`;\r\n\t\t}\r\n\t\telse if (typeof spec.label === 'string') {\r\n\t\t\treturn spec.label;\r\n\t\t}\r\n\t}\r\n\treturn _.formatKey(key);\r\n}\r\n\r\nfunction extension(key) {\r\n\treturn label(key, Fields.extensions);\r\n}\r\n\r\nvar Fields = _.normalizeFields(require('./fields.json'));\r\n\r\nmodule.exports = {\r\n\tformat,\r\n\tlabel,\r\n\textension,\r\n\tformatSummaries,\r\n\tformatItemProperties,\r\n\tFields,\r\n\tRegistry,\r\n\tHelper: _,\r\n\tDataTypes,\r\n\tFormatters\r\n};","\nvar N1 = Math.pow(2,  7)\nvar N2 = Math.pow(2, 14)\nvar N3 = Math.pow(2, 21)\nvar N4 = Math.pow(2, 28)\nvar N5 = Math.pow(2, 35)\nvar N6 = Math.pow(2, 42)\nvar N7 = Math.pow(2, 49)\nvar N8 = Math.pow(2, 56)\nvar N9 = Math.pow(2, 63)\n\nmodule.exports = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n}\n","/**\n * Implementation of the [multibase](https://github.com/multiformats/multibase) specification.\n *\n */\n'use strict'\n\nconst constants = require('./constants')\nconst { encodeText, decodeText, concat } = require('./util')\n\n/** @typedef {import('./base')} Base */\n/** @typedef {import(\"./types\").BaseNameOrCode} BaseNameOrCode */\n/** @typedef {import(\"./types\").BaseCode} BaseCode */\n/** @typedef {import(\"./types\").BaseName} BaseName */\n\n/**\n * Create a new Uint8Array with the multibase varint+code.\n *\n * @param {BaseNameOrCode} nameOrCode - The multibase name or code number.\n * @param {Uint8Array} buf - The data to be prefixed with multibase.\n * @returns {Uint8Array}\n * @throws {Error} Will throw if the encoding is not supported\n */\nfunction multibase (nameOrCode, buf) {\n  if (!buf) {\n    throw new Error('requires an encoded Uint8Array')\n  }\n  const { name, codeBuf } = encoding(nameOrCode)\n  validEncode(name, buf)\n\n  return concat([codeBuf, buf], codeBuf.length + buf.length)\n}\n\n/**\n * Encode data with the specified base and add the multibase prefix.\n *\n * @param {BaseNameOrCode} nameOrCode - The multibase name or code number.\n * @param {Uint8Array} buf - The data to be encoded.\n * @returns {Uint8Array}\n * @throws {Error} Will throw if the encoding is not supported\n *\n */\nfunction encode (nameOrCode, buf) {\n  const enc = encoding(nameOrCode)\n  const data = encodeText(enc.encode(buf))\n\n  return concat([enc.codeBuf, data], enc.codeBuf.length + data.length)\n}\n\n/**\n * Takes a Uint8Array or string encoded with multibase header, decodes it and\n * returns the decoded buffer\n *\n * @param {Uint8Array|string} data\n * @returns {Uint8Array}\n * @throws {Error} Will throw if the encoding is not supported\n *\n */\nfunction decode (data) {\n  if (data instanceof Uint8Array) {\n    data = decodeText(data)\n  }\n  const prefix = data[0]\n\n  // Make all encodings case-insensitive except the ones that include upper and lower chars in the alphabet\n  if (['f', 'F', 'v', 'V', 't', 'T', 'b', 'B', 'c', 'C', 'h', 'k', 'K'].includes(prefix)) {\n    data = data.toLowerCase()\n  }\n  const enc = encoding(/** @type {BaseCode} */(data[0]))\n  return enc.decode(data.substring(1))\n}\n\n/**\n * Is the given data multibase encoded?\n *\n * @param {Uint8Array|string} data\n * @returns {false | string}\n */\nfunction isEncoded (data) {\n  if (data instanceof Uint8Array) {\n    data = decodeText(data)\n  }\n\n  // Ensure bufOrString is a string\n  if (Object.prototype.toString.call(data) !== '[object String]') {\n    return false\n  }\n\n  try {\n    const enc = encoding(/** @type {BaseCode} */(data[0]))\n    return enc.name\n  } catch (err) {\n    return false\n  }\n}\n\n/**\n * Validate encoded data\n *\n * @param {BaseNameOrCode} name\n * @param {Uint8Array} buf\n * @returns {void}\n * @throws {Error} Will throw if the encoding is not supported\n */\nfunction validEncode (name, buf) {\n  const enc = encoding(name)\n  enc.decode(decodeText(buf))\n}\n\n/**\n * Get the encoding by name or code\n *\n * @param {BaseNameOrCode} nameOrCode\n * @returns {Base}\n * @throws {Error} Will throw if the encoding is not supported\n */\nfunction encoding (nameOrCode) {\n  if (constants.names[/** @type {BaseName} */(nameOrCode)]) {\n    return constants.names[/** @type {BaseName} */(nameOrCode)]\n  } else if (constants.codes[/** @type {BaseCode} */(nameOrCode)]) {\n    return constants.codes[/** @type {BaseCode} */(nameOrCode)]\n  } else {\n    throw new Error(`Unsupported encoding: ${nameOrCode}`)\n  }\n}\n\n/**\n * Get encoding from data\n *\n * @param {string|Uint8Array} data\n * @returns {Base}\n * @throws {Error} Will throw if the encoding is not supported\n */\nfunction encodingFromData (data) {\n  if (data instanceof Uint8Array) {\n    data = decodeText(data)\n  }\n\n  return encoding(/** @type {BaseCode} */(data[0]))\n}\n\nexports = module.exports = multibase\nexports.encode = encode\nexports.decode = decode\nexports.isEncoded = isEncoded\nexports.encoding = encoding\nexports.encodingFromData = encodingFromData\nexports.names = Object.freeze(constants.names)\nexports.codes = Object.freeze(constants.codes)\n","'use strict'\n\nconst { encoding: getCodec } = require('multibase')\nconst { TextDecoder } = require('web-encoding')\nconst utf8Decoder = new TextDecoder('utf8')\n\n/**\n * @typedef {import('multibase/src/types').BaseName} BaseName\n */\n\n/**\n * Turns a Uint8Array of bytes into a string with each\n * character being the char code of the corresponding byte\n *\n * @param {Uint8Array} array - The array to turn into a string\n */\nfunction uint8ArrayToAsciiString (array) {\n  let string = ''\n\n  for (let i = 0; i < array.length; i++) {\n    string += String.fromCharCode(array[i])\n  }\n  return string\n}\n\n/**\n * Turns a `Uint8Array` into a string.\n *\n * Supports `utf8`, `utf-8` and any encoding supported by the multibase module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n *\n * @param {Uint8Array} array - The array to turn into a string\n * @param {BaseName | 'utf8' | 'utf-8' | 'ascii'} [encoding=utf8] - The encoding to use\n * @returns {string}\n */\nfunction toString (array, encoding = 'utf8') {\n  if (encoding === 'utf8' || encoding === 'utf-8') {\n    return utf8Decoder.decode(array)\n  }\n\n  if (encoding === 'ascii') {\n    return uint8ArrayToAsciiString(array)\n  }\n\n  return getCodec(encoding).encode(array)\n}\n\nmodule.exports = toString\n","'use strict'\n\nconst { encodeText } = require('./util')\n\n/** @typedef {import('./types').CodecFactory} CodecFactory */\n/** @typedef {import(\"./types\").BaseName} BaseName */\n/** @typedef {import(\"./types\").BaseCode} BaseCode */\n\n/**\n * Class to encode/decode in the supported Bases\n *\n */\nclass Base {\n  /**\n   * @param {BaseName} name\n   * @param {BaseCode} code\n   * @param {CodecFactory} factory\n   * @param {string} alphabet\n   */\n  constructor (name, code, factory, alphabet) {\n    this.name = name\n    this.code = code\n    this.codeBuf = encodeText(this.code)\n    this.alphabet = alphabet\n    this.codec = factory(alphabet)\n  }\n\n  /**\n   * @param {Uint8Array} buf\n   * @returns {string}\n   */\n  encode (buf) {\n    return this.codec.encode(buf)\n  }\n\n  /**\n   * @param {string} string\n   * @returns {Uint8Array}\n   */\n  decode (string) {\n    for (const char of string) {\n      if (this.alphabet && this.alphabet.indexOf(char) < 0) {\n        throw new Error(`invalid character '${char}' in '${string}'`)\n      }\n    }\n    return this.codec.decode(string)\n  }\n}\n\nmodule.exports = Base\n","'use strict'\n\n// @ts-ignore\nconst { TextEncoder, TextDecoder } = require('web-encoding')\n\nconst textDecoder = new TextDecoder()\n/**\n * @param {ArrayBufferView|ArrayBuffer} bytes\n * @returns {string}\n */\nconst decodeText = (bytes) => textDecoder.decode(bytes)\n\nconst textEncoder = new TextEncoder()\n/**\n * @param {string} text\n * @returns {Uint8Array}\n */\nconst encodeText = (text) => textEncoder.encode(text)\n\n/**\n * Returns a new Uint8Array created by concatenating the passed Arrays\n *\n * @param {Array<ArrayLike<number>>} arrs\n * @param {number} length\n * @returns {Uint8Array}\n */\nfunction concat (arrs, length) {\n  const output = new Uint8Array(length)\n  let offset = 0\n\n  for (const arr of arrs) {\n    output.set(arr, offset)\n    offset += arr.length\n  }\n\n  return output\n}\n\nmodule.exports = { decodeText, encodeText, concat }\n","'use strict'\n\nconst baseX = require('@multiformats/base-x')\nconst Base = require('./base.js')\nconst { rfc4648 } = require('./rfc4648')\nconst { decodeText, encodeText } = require('./util')\n\n/** @typedef {import('./types').CodecFactory} CodecFactory */\n/** @typedef {import('./types').Codec} Codec */\n/** @typedef {import('./types').BaseName} BaseName */\n/** @typedef {import('./types').BaseCode} BaseCode */\n\n/** @type {CodecFactory} */\nconst identity = () => {\n  return {\n    encode: decodeText,\n    decode: encodeText\n  }\n}\n\n/**\n *\n * name, code, implementation, alphabet\n *\n * @type {Array<[BaseName, BaseCode, CodecFactory, string]>}\n */\nconst constants = [\n  ['identity', '\\x00', identity, ''],\n  ['base2', '0', rfc4648(1), '01'],\n  ['base8', '7', rfc4648(3), '01234567'],\n  ['base10', '9', baseX, '0123456789'],\n  ['base16', 'f', rfc4648(4), '0123456789abcdef'],\n  ['base16upper', 'F', rfc4648(4), '0123456789ABCDEF'],\n  ['base32hex', 'v', rfc4648(5), '0123456789abcdefghijklmnopqrstuv'],\n  ['base32hexupper', 'V', rfc4648(5), '0123456789ABCDEFGHIJKLMNOPQRSTUV'],\n  ['base32hexpad', 't', rfc4648(5), '0123456789abcdefghijklmnopqrstuv='],\n  ['base32hexpadupper', 'T', rfc4648(5), '0123456789ABCDEFGHIJKLMNOPQRSTUV='],\n  ['base32', 'b', rfc4648(5), 'abcdefghijklmnopqrstuvwxyz234567'],\n  ['base32upper', 'B', rfc4648(5), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'],\n  ['base32pad', 'c', rfc4648(5), 'abcdefghijklmnopqrstuvwxyz234567='],\n  ['base32padupper', 'C', rfc4648(5), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567='],\n  ['base32z', 'h', rfc4648(5), 'ybndrfg8ejkmcpqxot1uwisza345h769'],\n  ['base36', 'k', baseX, '0123456789abcdefghijklmnopqrstuvwxyz'],\n  ['base36upper', 'K', baseX, '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'],\n  ['base58btc', 'z', baseX, '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'],\n  ['base58flickr', 'Z', baseX, '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'],\n  ['base64', 'm', rfc4648(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'],\n  ['base64pad', 'M', rfc4648(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='],\n  ['base64url', 'u', rfc4648(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'],\n  ['base64urlpad', 'U', rfc4648(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=']\n]\n\n/** @type {Record<BaseName,Base>} */\nconst names = constants.reduce((prev, tupple) => {\n  prev[tupple[0]] = new Base(tupple[0], tupple[1], tupple[2], tupple[3])\n  return prev\n}, /** @type {Record<BaseName,Base>} */({}))\n\n/** @type {Record<BaseCode,Base>} */\nconst codes = constants.reduce((prev, tupple) => {\n  prev[tupple[1]] = names[tupple[0]]\n  return prev\n}, /** @type {Record<BaseCode,Base>} */({}))\n\nmodule.exports = {\n  names,\n  codes\n}\n","module.exports = encode\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31)\n\nfunction encode(num, out, offset) {\n  if (Number.MAX_SAFE_INTEGER && num > Number.MAX_SAFE_INTEGER) {\n    encode.bytes = 0\n    throw new RangeError('Could not encode varint')\n  }\n  out = out || []\n  offset = offset || 0\n  var oldOffset = offset\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB\n    num /= 128\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB\n    num >>>= 7\n  }\n  out[offset] = num | 0\n  \n  encode.bytes = offset - oldOffset + 1\n  \n  return out\n}\n","export * from \"-!../../../../mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../vue-loader/lib/loaders/stylePostLoader.js!../../../../postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../cache-loader/dist/cjs.js??ref--0-0!../../../../vue-loader/lib/index.js??vue-loader-options!./StacFields.vue?vue&type=style&index=0&lang=css&\"","'use strict'\n\nconst { encoding: getCodec } = require('multibase')\nconst { TextEncoder } = require('web-encoding')\nconst utf8Encoder = new TextEncoder()\n\n/**\n * @typedef {import('multibase/src/types').BaseName} BaseName\n */\n\n/**\n * Interprets each character in a string as a byte and\n * returns a Uint8Array of those bytes.\n *\n * @param {string} string - The string to turn into an array\n */\nfunction asciiStringToUint8Array (string) {\n  const array = new Uint8Array(string.length)\n\n  for (let i = 0; i < string.length; i++) {\n    array[i] = string.charCodeAt(i)\n  }\n\n  return array\n}\n\n/**\n * Create a `Uint8Array` from the passed string\n *\n * Supports `utf8`, `utf-8` and any encoding supported by the multibase module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n *\n * @param {string} string\n * @param {BaseName | 'utf8' | 'utf-8' | 'ascii'} [encoding=utf8] - utf8, base16, base64, base64urlpad, etc\n * @returns {Uint8Array}\n */\nfunction fromString (string, encoding = 'utf8') {\n  if (encoding === 'utf8' || encoding === 'utf-8') {\n    return utf8Encoder.encode(string)\n  }\n\n  if (encoding === 'ascii') {\n    return asciiStringToUint8Array(string)\n  }\n\n  return getCodec(encoding).decode(string)\n}\n\nmodule.exports = fromString\n","\"use strict\"\n\nexports.TextEncoder = TextEncoder\nexports.TextDecoder = TextDecoder\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) {\n    } else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength)\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source)\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = new Uint8Array(zeroes + (size - it4))\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"vue-component stac stac-fields metadata\"},[_vm._l((_vm.fields),function(group){return [_c(_vm.headingTag,{key:group.extension,tag:\"component\",domProps:{\"innerHTML\":_vm._s(group.label)}}),_vm._l((group.properties),function(prop,field){return _c('div',{key:group.extension + field,staticClass:\"tabular\",class:{wrap: Boolean(prop.custom || prop.items)},attrs:{\"id\":'field_' + field}},[_c('label',{attrs:{\"title\":field},domProps:{\"innerHTML\":_vm._s(_vm.label(field))}}),(prop.items)?_c('div',{staticClass:\"value\"},_vm._l((_vm.normalize(prop.formatted)),function(value,i){return _c('table',{key:i,staticClass:\"table\"},[_c('thead',[_c('tr',[(!Array.isArray(value))?_c('th'):_vm._e(),_vm._l((prop.itemOrder),function(col){return _c('th',{key:col,domProps:{\"innerHTML\":_vm._s(_vm.label(col, prop.items))}})})],2)]),_c('tbody',_vm._l((value),function(row,r){return _c('tr',{key:r},[(!Array.isArray(value))?_c('th',[_vm._v(_vm._s(r))]):_vm._e(),_vm._l((prop.itemOrder),function(col){return _c('td',{key:col,domProps:{\"innerHTML\":_vm._s(row[col])}})})],2)}),0)])}),0):(prop.formatted)?_c('div',{staticClass:\"value\",domProps:{\"innerHTML\":_vm._s(prop.formatted)}}):_c('div',{staticClass:\"value\"},[_vm._v(_vm._s(prop.value))])])})]})],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n\t<section class=\"vue-component stac stac-fields metadata\">\r\n\t\t<template v-for=\"group in fields\">\r\n\t\t\t<component :is=\"headingTag\" v-html=\"group.label\" :key=\"group.extension\" />\r\n\t\t\t<div v-for=\"(prop, field) in group.properties\" :key=\"group.extension + field\" :id=\"'field_' + field\" class=\"tabular\" :class=\"{wrap: Boolean(prop.custom || prop.items)}\">\r\n\t\t\t\t<label :title=\"field\" v-html=\"label(field)\" />\r\n\t\t\t\t<div v-if=\"prop.items\" class=\"value\">\r\n\t\t\t\t\t<table v-for=\"(value, i) in normalize(prop.formatted)\" :key=\"i\" class=\"table\">\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th v-if=\"!Array.isArray(value)\">&nbsp;</th>\r\n\t\t\t\t\t\t\t\t<th v-for=\"col in prop.itemOrder\" :key=\"col\" v-html=\"label(col, prop.items)\"></th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t<tr v-for=\"(row, r) in value\" :key=\"r\">\r\n\t\t\t\t\t\t\t\t<th v-if=\"!Array.isArray(value)\">{{ r }}</th>\r\n\t\t\t\t\t\t\t\t<td v-for=\"col in prop.itemOrder\" :key=\"col\" v-html=\"row[col]\" />\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div v-else-if=\"prop.formatted\" class=\"value\" v-html=\"prop.formatted\" />\r\n\t\t\t\t<div class=\"value\" v-else>{{ prop.value }}</div>\r\n\t\t\t</div>\r\n\t\t</template>\r\n\t</section>\r\n</template>\r\n\r\n<script>\r\nimport StacFields from '@radiantearth/stac-fields';\r\n\r\nStacFields.Registry.externalRenderer = true;\r\nStacFields.Registry.addMetadataFields({\r\n\t\"eo:platform\": {\r\n\t\talias: \"platform\"\r\n\t},\r\n\t\"eo:instrument\": {\r\n\t\talias: \"instruments\"\r\n\t},\r\n\t\"gee:type\": {\r\n\t\tlabel: \"Collection Type\",\r\n\t\tformatter: StacFields.label\r\n\t}\r\n});\r\n\r\nexport default {\r\n\tname: 'StacFields',\r\n\tprops: {\r\n\t\tmetadata: {\r\n\t\t\ttype: Object,\r\n\t\t\tdefault: () => ({})\r\n\t\t},\r\n\t\theadingTag: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: 'h3'\r\n\t\t},\r\n\t\tignore: {\r\n\t\t\ttype: Array,\r\n\t\t\tdefault: () => ([])\r\n\t\t}\r\n\t},\r\n\tcomputed: {\r\n\t\tignoreFn() {\r\n\t\t\tif (this.ignore.length > 0) {\r\n\t\t\t\treturn key => !this.ignore.includes(key);\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tisCollection() {\r\n\t\t\treturn (this.metadata.type !== 'Feature');\r\n\r\n\t\t},\r\n\t\tfields() {\r\n\t\t\tif (this.isCollection) {\r\n\t\t\t\tlet summaries = Object.assign({}, this.metadata.summaries);\r\n\r\n\t\t\t\tfor(let key in this.metadata) {\r\n\t\t\t\t\t// Move all custom top-level fields to summaries for easier visualization\r\n\t\t\t\t\tif (key === 'version' || (key !== 'cube:dimensions' && key.includes(':'))) {\r\n\t\t\t\t\t\tsummaries[key] = [this.metadata[key]];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet collection = Object.assign({}, this.metadata, {summaries});\r\n\t\t\t\treturn StacFields.formatSummaries(collection, this.ignoreFn);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn StacFields.formatItemProperties(this.metadata, this.ignoreFn);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tmethods: {\r\n\t\tnormalize(data) {\r\n\t\t\tif (this.isCollection) {\r\n\t\t\t\treturn data;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn [data];\r\n\t\t\t}\r\n\t\t},\r\n\t\tlabel(key, specs = {}) {\r\n\t\t\treturn StacFields.label(key, specs);\r\n\t\t}\r\n\t}\r\n}\r\n</script>\r\n\r\n<style>\r\n@import url('../base.css');\r\n\r\n.vue-component.stac-fields .table .unit {\r\n\topacity: 0.6;\r\n}\r\n.vue-component.stac-fields .table {\r\n\twidth: 100%;\r\n\tborder-collapse: collapse;\r\n\tfont-size: 0.9em;\r\n}\r\n.vue-component.stac-fields .table th {\r\n\ttext-align: left;\r\n\tbackground-color: rgba(0, 0, 0, 0.05);\r\n}\r\n.vue-component.stac-fields .table td,\r\n.vue-component.stac-fields .table th {\r\n\tborder: 1px solid rgba(0, 0, 0, 0.2);\r\n\tpadding: 3px;\r\n}\r\n.vue-component.stac-fields .table td {\r\n\tvertical-align: top;\r\n}\r\n.vue-component.stac-fields .descrption p:first-of-type {\r\n\tmargin-top: 0;\r\n}\r\n.vue-component.stac-fields .descrption p:last-of-type {\r\n\tmargin-bottom: 0;\r\n}\r\n.vue-component.stac-fields .table tr:hover, .vue-component.stac-fields .table tr:hover th {\r\n\tbackground-color: rgba(0, 0, 0, 0.1);\r\n}\r\n</style>","import mod from \"-!../../../../cache-loader/dist/cjs.js??ref--12-0!../../../../thread-loader/dist/cjs.js!../../../../babel-loader/lib/index.js!../../../../cache-loader/dist/cjs.js??ref--0-0!../../../../vue-loader/lib/index.js??vue-loader-options!./StacFields.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../cache-loader/dist/cjs.js??ref--12-0!../../../../thread-loader/dist/cjs.js!../../../../babel-loader/lib/index.js!../../../../cache-loader/dist/cjs.js??ref--0-0!../../../../vue-loader/lib/index.js??vue-loader-options!./StacFields.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./StacFields.vue?vue&type=template&id=569b77cf&\"\nimport script from \"./StacFields.vue?vue&type=script&lang=js&\"\nexport * from \"./StacFields.vue?vue&type=script&lang=js&\"\nimport style0 from \"./StacFields.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","'use strict'\n\n/**\n * Returns a new Uint8Array created by concatenating the passed ArrayLikes\n *\n * @param {Array<ArrayLike<number>>} arrays\n * @param {number} [length]\n */\nfunction concat (arrays, length) {\n  if (!length) {\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0)\n  }\n\n  const output = new Uint8Array(length)\n  let offset = 0\n\n  for (const arr of arrays) {\n    output.set(arr, offset)\n    offset += arr.length\n  }\n\n  return output\n}\n\nmodule.exports = concat\n","module.exports = read\n\nvar MSB = 0x80\n  , REST = 0x7F\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length\n\n  do {\n    if (counter >= l || shift > 49) {\n      read.bytes = 0\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++]\n    res += shift < 28\n      ? (b & REST) << shift\n      : (b & REST) * Math.pow(2, shift)\n    shift += 7\n  } while (b >= MSB)\n\n  read.bytes = counter - offset\n\n  return res\n}\n"],"sourceRoot":""}