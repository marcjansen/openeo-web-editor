{"version":3,"sources":["webpack:///./node_modules/ol/geom/flat/textpath.js","webpack:///./node_modules/ol/events/EventType.js","webpack:///./node_modules/ol/extent/Relationship.js","webpack:///./node_modules/ol/geom/LinearRing.js","webpack:///./node_modules/ol/layer/VectorRenderType.js","webpack:///./node_modules/ol/events/condition.js","webpack:///./node_modules/ol/dom.js","webpack:///./node_modules/ol/geom/flat/interiorpoint.js","webpack:///./node_modules/ol/layer/VectorTileRenderType.js","webpack:///./node_modules/ol/extent.js","webpack:///./node_modules/ol/events/Target.js","webpack:///./node_modules/ol/layer/Layer.js","webpack:///./node_modules/ol/geom/flat/simplify.js","webpack:///./node_modules/ol/events.js","webpack:///./node_modules/ol/format/FormatType.js","webpack:///./node_modules/ol/geom/flat/contains.js","webpack:///./node_modules/ol/interaction/Select.js","webpack:///./node_modules/ol/extent/Corner.js","webpack:///./node_modules/ol/obj.js","webpack:///./node_modules/ol/control/Control.js","webpack:///./node_modules/ol/interaction/DoubleClickZoom.js","webpack:///./node_modules/ol/interaction/DragPan.js","webpack:///./node_modules/ol/interaction/DragRotate.js","webpack:///./node_modules/ol/interaction/DragBox.js","webpack:///./node_modules/ol/interaction/DragZoom.js","webpack:///./node_modules/ol/events/KeyCode.js","webpack:///./node_modules/ol/interaction/KeyboardPan.js","webpack:///./node_modules/ol/interaction/KeyboardZoom.js","webpack:///./node_modules/ol/interaction/MouseWheelZoom.js","webpack:///./node_modules/ol/interaction/PinchRotate.js","webpack:///./node_modules/ol/interaction/PinchZoom.js","webpack:///./node_modules/ol/interaction.js","webpack:///./node_modules/ol/layer/Vector.js","webpack:///./node_modules/ol/interaction/Pointer.js","webpack:///./node_modules/ol/interaction/Interaction.js","webpack:///./node_modules/ol/layer/Heatmap.js","webpack:///./node_modules/ol/geom/MultiLineString.js","webpack:///./node_modules/ol/layer/Tile.js","webpack:///./node_modules/ol/geom/flat/reverse.js","webpack:///./node_modules/ol/geom/flat/orient.js","webpack:///./node_modules/ol/geom/GeometryLayout.js","webpack:///./node_modules/ol/layer/Base.js","webpack:///./node_modules/ol/functions.js","webpack:///./node_modules/ol/geom/flat/length.js","webpack:///./node_modules/ol/geom/Polygon.js","webpack:///./node_modules/ol/color.js","webpack:///./node_modules/ol/has.js","webpack:///./node_modules/ol/centerconstraint.js","webpack:///./node_modules/ol/featureloader.js","webpack:///./node_modules/ol/loadingstrategy.js","webpack:///./node_modules/ol/geom/LineString.js","webpack:///./node_modules/ol/math.js","webpack:///./node_modules/ol/geom/flat/straightchunk.js","webpack:///./node_modules/ol/geom/flat/center.js","webpack:///./node_modules/ol/geom/MultiPolygon.js","webpack:///./node_modules/ol/geom/Geometry.js","webpack:///./node_modules/ol/control/Attribution.js","webpack:///./node_modules/ol/control/Rotate.js","webpack:///./node_modules/ol/control/Zoom.js","webpack:///./node_modules/ol/control/util.js","webpack:///./node_modules/ol/asserts.js","webpack:///./node_modules/ol/geom/flat/closest.js","webpack:///./node_modules/ol/layer/VectorTile.js","webpack:///./node_modules/ol/geom/MultiPoint.js","webpack:///./node_modules/ol/geom/SimpleGeometry.js","webpack:///./node_modules/ol/layer/Group.js","webpack:///./node_modules/ol/control/ScaleLine.js","webpack:///./node_modules/ol/array.js","webpack:///./node_modules/ol/layer/TileProperty.js","webpack:///./node_modules/ol/format/Feature.js","webpack:///./node_modules/ol/format/JSONFeature.js","webpack:///./node_modules/ol/geom/GeometryCollection.js","webpack:///./node_modules/ol/format/GeoJSON.js","webpack:///./node_modules/ol/coordinate.js","webpack:///./node_modules/ol/geom/flat/deflate.js","webpack:///./node_modules/ol/interaction/Draw.js","webpack:///./node_modules/ol/geom/flat/interpolate.js","webpack:///./node_modules/ol/interaction/Snap.js","webpack:///./node_modules/ol/geom/flat/area.js","webpack:///./node_modules/ol/geom/flat/inflate.js","webpack:///./node_modules/ol/geom/flat/transform.js","webpack:///./node_modules/ol/interaction/Property.js","webpack:///./node_modules/ol/control/FullScreen.js","webpack:///./node_modules/ol/geom/flat/intersectsextent.js","webpack:///./node_modules/ol/layer/Image.js","webpack:///./node_modules/ol/easing.js","webpack:///./node_modules/ol/css.js","webpack:///./node_modules/ol/events/Event.js","webpack:///./node_modules/ol/layer/Property.js","webpack:///./node_modules/ol/net.js","webpack:///./node_modules/ol/colorlike.js","webpack:///./node_modules/ol/geom/Point.js","webpack:///./node_modules/ol/geom/GeometryType.js","webpack:///./node_modules/ol/geom/Circle.js","webpack:///./node_modules/ol/geom/flat/segments.js"],"names":["drawTextOnPath","flatCoordinates","offset","end","stride","text","measure","startM","maxAngle","result","reverse","numChars","length","x1","y1","data","index","previousAngle","x2","y2","segmentM","segmentLength","Math","sqrt","pow","chunk","chunkLength","i","char","charAt","charLength","charM","segmentPos","angle","atan2","PI","undefined","delta","abs","interpolate","x","y","unshift","push","CHANGE","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","ERROR","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","LinearRing","SimpleGeometry","coordinates","opt_layout","call","this","maxDelta_","maxDeltaRevision_","Array","isArray","setCoordinates","setFlatCoordinates","__proto__","prototype","Object","create","constructor","clone","slice","layout","closestPointXY","closestPoint","minSquaredDistance","getExtent","getRevision","getArea","getCoordinates","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","XY","getType","LINEAR_RING","intersectsExtent","extent","setLayout","changed","IMAGE","VECTOR","altKeyOnly","mapBrowserEvent","originalEvent","altKey","metaKey","ctrlKey","shiftKey","altShiftKeysOnly","focus","event","target","getTargetElement","document","activeElement","always","click","type","mouseActionButton","button","never","pointerMove","singleClick","SINGLECLICK","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","pointerEvent","pointerType","primaryAction","isPrimary","createCanvasContext2D","opt_width","opt_height","canvas","createElement","width","height","getContext","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChild","removeChildren","lastChild","getInteriorPointOfArray","ends","flatCenters","flatCentersOffset","opt_dest","ii","intersections","r","rr","pointX","NaN","maxSegmentLength","Infinity","sort","isNaN","getInteriorPointsOfMultiArray","endss","interiorPoints","HYBRID","boundingExtent","createEmpty","extendCoordinate","_boundingExtentXYs","xs","ys","opt_extent","minX","min","apply","minY","maxX","max","maxY","createOrUpdate","buffer","value","closestSquaredDistanceXY","dx","dy","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","extendCoordinates","createOrUpdateFromFlatCoordinates","extendFlatCoordinates","equals","extend","extendXY","forEachCorner","callback","opt_this","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","area","isEmpty","getWidth","getHeight","getCenter","getCorner","corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","getForViewAndSize","center","resolution","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x3","y0","y3","getIntersection","intersection","intersects","returnOrUpdate","scaleFromCenter","deltaX","deltaY","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","Target","Disposable","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","indexOf","dispatchEvent","evt","propagate","propagationStopped","pendingRemovals","removeEventListener","disposeInternal","getListeners","hasListener","opt_type","keys","splice","Layer","BaseLayer","options","baseOptions","source","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","map","setMap","SOURCE","handleSourcePropertyChange_","setSource","getLayersArray","opt_array","array","getLayerStatesArray","opt_states","states","getLayerState","getSource","get","getSourceState","getState","UNDEFINED","handleSourceChange_","PRECOMPOSE","renderEvent","layerState","managed","getZIndex","zIndex","frameState","layerStatesArray","layerStates","render","set","visibleAtResolution","visible","minResolution","maxResolution","douglasPeucker","simplifiedOffset","n","markers","stack","last","pop","first","maxSquaredDistance","squaredDistance","i$1","douglasPeuckerArray","simplifiedEnds","snap","tolerance","round","quantize","dx1","dy1","dx2","dy2","quantizeArray","quantizeMultiArray","simplifiedEndss","bindListener","listenerObj","boundListener","bindTo","callOnce","unlistenByKey","findListener","opt_setDeleteIndex","deleteIndex","listenerMap","getListenerMap","opt_create","ol_lm","removeListenerMap","removeListeners","listen","opt_once","listenOnce","unlisten","key","unlistenAll","ARRAY_BUFFER","JSON","TEXT","XML","linearRingContainsExtent","outside","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","SelectEventType","SELECT","SelectEvent","Event","selected","deselected","Select","Interaction","opt_options","handleEvent","condition_","condition","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","filter","hitTolerance_","hitTolerance","layerFilter","featureOverlay","useSpatialIndex","features","wrapX","style","getDefaultStyleFunction","updateWhileAnimating","updateWhileInteracting","featureOverlay_","layers","layer","layerFilter_","featureLayerAssociation_","getFeatures","ADD","addFeature_","REMOVE","removeFeature_","addFeatureLayerAssociation_","feature","getFeaturesCollection","getHitTolerance","getLayer","getOverlay","setHitTolerance","currentMap","getMap","selectedFeatures","forEach","unskipFeature","bind","skipFeature","removeFeatureLayerAssociation_","add","remove","toggle","forEachFeatureAtPixel","pixel","getLength","item","getArray","j","styles","POLYGON","LINE_STRING","GEOMETRY_COLLECTION","getGeometry","assign","var_sources","arguments$1","arguments","TypeError","output","hasOwnProperty","clear","object","property","getValues","values","Control","BaseObject","element","target_","map_","listenerKeys","setTarget","getOverlayContainerStopEvent","appendChild","POSTRENDER","getElementById","DoubleClickZoom","delta_","duration_","duration","stopEvent","MapBrowserEventType","browserEvent","anchor","view","getView","preventDefault","PointerInteraction","DragPan","stopDown","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","noKinetic_","handleDragEvent","setHint","ViewHint","INTERACTING","targetPointers","centroid","update","getResolution","getRotation","constrainCenter","setCenter","begin","handleUpEvent","distance","getDistance","getAngle","centerpx","getPixelFromCoordinate","dest","getCoordinateFromPixel","animate","easing","handleDownEvent","getAnimating","viewState","Pointer","DragRotate","lastAngle_","getConstraints","getSize","theta","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","DragBoxEvent","DragBox","box_","className","minArea_","minArea","onBoxEnd_","onBoxEnd","startPixel_","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","startPixel","endPixel","setPixels","DragZoom","out_","out","mapExtent","calculateExtent","boxPixelExtent","factor","getResolutionForExtent","constrainResolution","UP","DOWN","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","EventType","keyEvent","keyCode","KeyCode","mapUnitsDelta","KeyboardZoom","charCode","charCodeAt","MAX_DELTA","Mode","TRACKPAD","MouseWheelZoom","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","trackpadZoomBuffer_","decrementInteractingHint_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","now","Date","clearTimeout","setTimeout","getMinResolution","getMaxResolution","rebound","calculateCenterZoom","setResolution","timeLeft","handleWheelZoom_","cancelAnimations","maxDelta","setMouseAnchor","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","clientY","clientX","viewportPosition","getViewport","getBoundingClientRect","left","top","handlingDownUpSequence","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","newResolution","direction","defaults","interactions","Collection","Kinetic","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","Property","RENDER_ORDER","VectorLayer","renderBuffer","declutter_","declutter","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","renderMode_","renderMode","getDeclutter","setDeclutter","getRenderBuffer","getRenderOrder","getStyle","getStyleFunction","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","getRenderMode","handleMoveEvent","trackedPointers_","updateTrackedPointers_","POINTERDRAG","POINTERUP","handledUp","POINTERDOWN","handled","POINTERMOVE","isPointerDraggingEvent","id","pointerId","toString","pointerEvents","setActive","getActive","ACTIVE","active","pan","opt_duration","currentCenter","rotate","opt_anchor","constrainRotation","rotateWithoutConstraints","currentRotation","zoom","opt_direction","zoomWithoutConstraints","zoomByDelta","currentResolution","resolutions","getResolutions","BLUR","GRADIENT","RADIUS","DEFAULT_GRADIENT","Heatmap","gradient","radius","blur","shadow","weight","gradient_","shadow_","circleImage_","styleCache_","handleGradientChanged_","setGradient","setBlur","setRadius","handleStyleChanged_","weightFunction","opacity","image","src","RENDER","handleRender_","createCircle_","getRadius","getBlur","halfSize","context","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","beginPath","arc","fill","toDataURL","getGradient","createGradient","getImageData","view8","alpha","putImageData","colors","createLinearGradient","step","addColorStop","fillStyle","fillRect","MultiLineString","opt_ends","ends_","getLayout","lineStrings","lineString","getFlatCoordinates","appendLineString","getCoordinateAtM","m","opt_extrapolate","opt_interpolate","XYM","XYZM","extrapolate","getEnds","getLineString","getLineStrings","getFlatMidpoints","midpoints","midpoint","MULTI_LINE_STRING","TileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","TILE","getPreload","PRELOAD","getUseInterimTilesOnError","USE_INTERIM_TILES_ON_ERROR","tmp","linearRingIsClockwise","edge","linearRingIsOriented","opt_right","right","isClockwise","linearRingsAreOriented","orientLinearRings","orientLinearRingsArray","XYZ","properties","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","setProperties","state_","state","getOpacity","sourceState","getVisible","EXTENT","setExtent","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","TRUE","FALSE","VOID","lineStringLength","Polygon","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","getOrientedFlatCoordinates","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","fromExtent","fromCircle","circle","opt_sides","opt_angle","sides","getStride","arrayLength","polygon","makeRegular","startAngle","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","fromNamed","el","body","rgb","getComputedStyle","fromString","MAX_CACHE_SIZE","cache","cacheSize","s","fromStringInternal_","asArray","g","b","a","exec","d","hasAlpha","parseInt","substr","split","Number","normalize","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","window","devicePixelRatio","CANVAS_LINE_DASH","has","setLineDash","e","TOUCH","POINTER","MSPOINTER","createExtent","none","loadFeaturesXhr","url","format","success","failure","projection","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","getLastExtent","onerror","send","dataProjection","sourceOrTile","addFeatures","all","LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","forEachSegment","getCoordinateAt","fraction","getFlatMidpoint","clamp","cosh","exp","squaredSegmentDistance","t","solveLinearSystem","mat","maxRow","maxEl","absValue","coef","k","l","toDegrees","angleInRadians","toRadians","angleInDegrees","modulo","lerp","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","linearRingss","MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","jj","appendPolygon","len","newEndss","orient","inflate","getEndss","getFlatInteriorPoints","getInteriorPoints","MultiPoint","GeometryLayout","getPolygon","prevEnds","getPolygons","GeometryType","MULTI_POLYGON","deflate","lastEnds","tmpTransform","Geometry","extent_","extentRevision_","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","getClosestPoint","point","opt_closestPoint","intersectsCoordinate","computeExtent","scale","sx","opt_sy","simplify","getSimplifiedGeometry","translate","transform","destination","sourceProj","getUnits","TILE_PIXELS","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getWorldExtent","Attribution","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","tipLabel","collapseLabel","collapseLabel_","textContent","label","label_","activeLabel","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","display","innerHTML","handleToggle_","classList","getCollapsible","setCollapsed","getCollapsed","mapEvent","Rotate","callResetNorth_","resetNorth","autoHide_","autoHide","rotation_","resetNorth_","setRotation","contains","msTransform","webkitTransform","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","controls","zoomControl","zoomOptions","rotateControl","rotateOptions","attributionControl","attribution","attributionOptions","assert","assertion","errorCode","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","multiArrayMaxSquaredDelta","assignClosestPoint","isRing","opt_tmpPoint","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","VectorTileLayer","VECTOR_TILE","appendPoint","multiPoint","getPoint","getPoints","points","MULTI_POINT","getFirstCoordinate","getLastCoordinate","simplifiedGeometry","getStrideForLayout","nesting","getLayoutForStride","sy","transformGeom2D","simpleGeometry","LAYERS","LayerGroup","layersListenerKeys_","listenerKeys_","handleLayersChanged_","unique","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","PROPERTYCHANGE","collectionEvent","pos","ownLayerState","READY","UNITS_PROP","Units","DEGREES","IMPERIAL","NAUTICAL","METRIC","US","LEADING_DIGITS","ScaleLine","innerElement_","viewState_","minWidth_","minWidth","renderedWidth_","renderedHTML_","handleUnitsChanged_","setUnits","units","pointResolutionUnits","METERS","pointResolution","getMetersPerUnit","nominalCount","suffix","metersPerDegree","count","floor","log","html","binarySearch","haystack","needle","opt_comparator","mid","cmp","comparator","numberSafeCompareFunction","low","high","found","includes","arr","obj","linearFindNearest","reverseSubArray","extension","arr1","arr2","len1","stableSort","compareFnc","isSorted","opt_func","opt_strict","compare","every","currentVal","res","defaultFeatureProjection","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","geometry","transformWithOptions","write","transformed","decimals","power","FeatureFormat","JSONFeature","FormatType","readFeatureFromObject","getObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","parse","GeometryCollection","opt_geometries","geometries_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","geometries","getGeometries","cloneGeometries","getGeometriesArray","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","clonedGeometries","GeoJSON","geometryName_","geometryName","extractGeometryName_","extractGeometryName","geoJSONFeature","Feature","setGeometryName","setGeometry","setId","geoJSONObject","geoJSONFeatureCollection","geoJSONFeatures","crs","getId","getProperties","getGeometryName","objects","POINT","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","Error","Point","geoJSON","writePointGeometry","writeLineStringGeometry","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","CIRCLE","rightHanded","closestOnCircle","closestOnSegment","segment","along","coordinate1","coordinate2","cosAngle","sinAngle","coord1","coord2","squaredDistanceToSegment","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","DrawEventType","DRAWSTART","DRAWEND","DrawEvent","Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","source_","features_","snapTolerance_","snapTolerance","type_","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryFunction","opt_geometry","squaredLength","setCenterAndRadius","Constructor","mode","concat","geometryFunction_","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","freehandCondition_","freehand","freehandCondition","updateState_","move","pass","addToDrawing_","handlePointerMove_","startDrawing_","circleMode","finishDrawing","atFinish_","abortDrawing_","stopPropagation","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","sketchPointGeom","updateSketchFeatures_","sketchLineGeom","ring","done","removeLastPoint","sketchFeature","addFeature","sketchFeatures","overlaySource","interpolatePoint","pointY","cumulativeLengths","o","lineStringCoordinateAtM","lo","hi","m0","m1","lineStringsCoordinateAtM","getFeatureFromEvent","Snap","vertex_","vertex","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","pixelTolerance_","pixelTolerance","sortByDistance_","sortByDistance","rBush_","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeGeometryCollectionGeometry_","writeCircleGeometry_","opt_listen","register","feature_uid","segmentWriter","handleFeatureChange_","forEachFeatureAdd_","forEachFeatureRemove_","removeFeature","getFeatures_","snapTo","snapped","vertexPixel","handleFeatureAdd_","handleFeatureRemove_","uid","updateFeature_","featuresToUpdate","opt_unlisten","unregister","rBush","nodesToRemove","forEachInExtent","ADDFEATURE","REMOVEFEATURE","pixelCoordinate","lowerLeft","upperRight","box","segments","getInExtent","dist","pixel1","pixel2","squaredDist1","squaredDist2","snappedToVertex","closestSegment","isCircle","segmentData","insert","lines","kk","rings","deltaA","deltaB","twiceArea","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","opt_coordinatesss","transform2D","anchorX","anchorY","getChangeType","changeType","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","requestFullscreen","FullScreen","cssClassName_","labelNode_","labelActive","labelActiveNode_","button_","setClassName_","isFullScreen","isFullScreenSupported","keys_","handleFullScreen_","exitFullScreen","requestFullScreenWithKeys","requestFullScreen","handleFullScreenChange_","updateSize","fullscreen","activeClassName","inactiveClassName","nextClassName","mozFullScreenEnabled","msFullscreenEnabled","fullscreenEnabled","webkitIsFullScreen","mozFullScreen","msFullscreenElement","fullscreenElement","mozRequestFullScreenWithKeys","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","intersectsLineString","coordinatesExtent","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","ImageLayer","easeIn","easeOut","inAndOut","linear","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","getFontFamilies","font","family","fontFamily","jsonp","opt_errback","opt_callbackParam","script","cleanup","async","timer","getElementsByTagName","asColorLike","Circle","opt_radius","getRadiusSquared_","circleExtent","ret"],"mappings":"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","file":"js/chunk-533fa241.5e1d9401.js","sourcesContent":["/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {function(string):number} measure Measure function returning the\n * width of the character passed as 1st argument.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @return {Array<Array<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates, offset, end, stride, text, measure, startM, maxAngle) {\n  var result = [];\n\n  // Keep text upright\n  var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n\n  var numChars = text.length;\n\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  offset += stride;\n  var x2 = flatCoordinates[offset];\n  var y2 = flatCoordinates[offset + 1];\n  var segmentM = 0;\n  var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n  var chunk = '';\n  var chunkLength = 0;\n  var data, index, previousAngle;\n  for (var i = 0; i < numChars; ++i) {\n    index = reverse ? numChars - i - 1 : i;\n    var char = text.charAt(index);\n    chunk = reverse ? char + chunk : chunk + char;\n    var charLength = measure(chunk) - chunkLength;\n    chunkLength += charLength;\n    var charM = startM + charLength / 2;\n    while (offset < end - stride && segmentM + segmentLength < charM) {\n      x1 = x2;\n      y1 = y2;\n      offset += stride;\n      x2 = flatCoordinates[offset];\n      y2 = flatCoordinates[offset + 1];\n      segmentM += segmentLength;\n      segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    }\n    var segmentPos = charM - segmentM;\n    var angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -Math.PI : Math.PI;\n    }\n    if (previousAngle !== undefined) {\n      var delta = angle - previousAngle;\n      delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    var interpolate = segmentPos / segmentLength;\n    var x = lerp(x1, x2, interpolate);\n    var y = lerp(y1, y2, interpolate);\n    if (previousAngle == angle) {\n      if (reverse) {\n        data[0] = x;\n        data[1] = y;\n        data[2] = charLength / 2;\n      }\n      data[4] = chunk;\n    } else {\n      chunk = char;\n      chunkLength = charLength;\n      data = [x, y, charLength / 2, angle, chunk];\n      if (reverse) {\n        result.unshift(data);\n      } else {\n        result.push(data);\n      }\n      previousAngle = angle;\n    }\n    startM += charLength;\n  }\n  return result;\n}\n\n//# sourceMappingURL=textpath.js.map","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~Event#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  ERROR: 'error',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  MOUSEDOWN: 'mousedown',\n  MOUSEMOVE: 'mousemove',\n  MOUSEOUT: 'mouseout',\n  MOUSEUP: 'mouseup',\n  MOUSEWHEEL: 'mousewheel',\n  MSPOINTERDOWN: 'MSPointerDown',\n  RESIZE: 'resize',\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  WHEEL: 'wheel'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16\n};\n\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /*@__PURE__*/(function (SimpleGeometry) {\n  function LinearRing(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LinearRing.__proto__ = SimpleGeometry;\n  LinearRing.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LinearRing.prototype.constructor = LinearRing;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.clone = function clone () {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  LinearRing.prototype.getArea = function getArea () {\n    return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LinearRing.prototype.getType = function getType () {\n    return GeometryType.LINEAR_RING;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return false;\n  };\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LinearRing;\n}(SimpleGeometry));\n\n\nexport default LinearRing;\n\n//# sourceMappingURL=LinearRing.js.map","/**\n * @module ol/layer/VectorRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorRenderType.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {assert} from '../asserts.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport {WEBKIT, MAC} from '../has.js';\n\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function(event) {\n  return event.target.getTargetElement() === document.activeElement;\n};\n\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function(mapBrowserEvent) {\n  var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n  return originalEvent.button == 0 &&\n      !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey;\n};\n\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function(mapBrowserEvent) {\n  var target = mapBrowserEvent.originalEvent.target;\n  var tagName = /** @type {Element} */ (target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n      tagName !== 'SELECT' &&\n      tagName !== 'TEXTAREA');\n};\n\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function(mapBrowserEvent) {\n  var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function(mapBrowserEvent) {\n  var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n\n//# sourceMappingURL=condition.js.map","/**\n * @module ol/dom\n */\n\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n  var canvas = /** @type {HTMLCanvasElement} */ (document.createElement('canvas'));\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  var width = element.offsetWidth;\n  var style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  var height = element.offsetHeight;\n  var style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  var parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset,\n  ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  var i, ii, x, x1, x2, y1, y2;\n  var y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  var intersections = [];\n  // Calculate intersections with the horizontal line\n  for (var r = 0, rr = ends.length; r < rr; ++r) {\n    var end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  var pointX = NaN;\n  var maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    var segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n  var interiorPoints = [];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(flatCoordinates,\n      offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/layer/VectorTileRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorTileRenderType.js.map","/**\n * @module ol/extent\n */\nimport {assert} from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  var extent = createEmpty();\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  var minX = Math.min.apply(null, xs);\n  var minY = Math.min.apply(null, ys);\n  var maxX = Math.max.apply(null, xs);\n  var maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value\n    ];\n  }\n}\n\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  var dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var x = coordinate[0];\n  var y = coordinate[1];\n  var relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(\n    Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (var i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(this:T, import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\n * @return {S|boolean} Value.\n * @template S, T\n */\nexport function forEachCorner(extent, callback, opt_this) {\n  var val;\n  val = callback.call(opt_this, getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  var area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  var coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  var minX = Math.min(extent1[0], extent2[0]);\n  var minY = Math.min(extent1[1], extent2[1]);\n  var maxX = Math.max(extent1[2], extent2[2]);\n  var maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n  var dx = resolution * size[0] / 2;\n  var dy = resolution * size[1] / 2;\n  var cosRotation = Math.cos(rotation);\n  var sinRotation = Math.sin(rotation);\n  var xCos = dx * cosRotation;\n  var xSin = dx * sinRotation;\n  var yCos = dy * cosRotation;\n  var ySin = dy * sinRotation;\n  var x = center[0];\n  var y = center[1];\n  var x0 = x - xCos + ySin;\n  var x1 = x - xCos - ySin;\n  var x2 = x + xCos - ySin;\n  var x3 = x + xCos + ySin;\n  var y0 = y - xSin - yCos;\n  var y1 = y - xSin + yCos;\n  var y2 = y + xSin + yCos;\n  var y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n    opt_extent);\n}\n\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  var intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  var intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return extent1[0] <= extent2[2] &&\n      extent1[2] >= extent2[0] &&\n      extent1[1] <= extent2[3] &&\n      extent1[3] >= extent2[1];\n}\n\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  var intersects = false;\n  var startRel = coordinateRelationship(extent, start);\n  var endRel = coordinateRelationship(extent, end);\n  if (startRel === Relationship.INTERSECTING ||\n      endRel === Relationship.INTERSECTING) {\n    intersects = true;\n  } else {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var startX = start[0];\n    var startY = start[1];\n    var endX = end[0];\n    var endY = end[1];\n    var slope = (endY - startY) / (endX - startX);\n    var x, y;\n    if (!!(endRel & Relationship.ABOVE) &&\n        !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - ((endY - maxY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.RIGHT) &&\n        !(startRel & Relationship.RIGHT)) {\n      // potentially intersects right\n      y = endY - ((endX - maxX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n    if (!intersects && !!(endRel & Relationship.BELOW) &&\n        !(startRel & Relationship.BELOW)) {\n      // potentially intersects bottom\n      x = endX - ((endY - minY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.LEFT) &&\n        !(startRel & Relationship.LEFT)) {\n      // potentially intersects left\n      y = endY - ((endX - minX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n\n  }\n  return intersects;\n}\n\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n  var coordinates = [\n    extent[0], extent[1],\n    extent[0], extent[3],\n    extent[2], extent[1],\n    extent[2], extent[3]\n  ];\n  transformFn(coordinates, coordinates, 2);\n  var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n  var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {unlistenAll} from '../events.js';\nimport {VOID} from '../functions.js';\nimport Event from './Event.js';\n\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /*@__PURE__*/(function (Disposable) {\n  function Target() {\n\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.pendingRemovals_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.dispatching_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\n     */\n    this.listeners_ = {};\n\n  }\n\n  if ( Disposable ) Target.__proto__ = Disposable;\n  Target.prototype = Object.create( Disposable && Disposable.prototype );\n  Target.prototype.constructor = Target;\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  Target.prototype.addEventListener = function addEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (!listeners) {\n      listeners = this.listeners_[type] = [];\n    }\n    if (listeners.indexOf(listener) === -1) {\n      listeners.push(listener);\n    }\n  };\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {{type: string,\n   *     target: (EventTargetLike|undefined),\n   *     propagationStopped: (boolean|undefined)}|\n   *     import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  Target.prototype.dispatchEvent = function dispatchEvent (event) {\n    var evt = typeof event === 'string' ? new Event(event) : event;\n    var type = evt.type;\n    evt.target = this;\n    var listeners = this.listeners_[type];\n    var propagate;\n    if (listeners) {\n      if (!(type in this.dispatching_)) {\n        this.dispatching_[type] = 0;\n        this.pendingRemovals_[type] = 0;\n      }\n      ++this.dispatching_[type];\n      for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --this.dispatching_[type];\n      if (this.dispatching_[type] === 0) {\n        var pendingRemovals = this.pendingRemovals_[type];\n        delete this.pendingRemovals_[type];\n        while (pendingRemovals--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete this.dispatching_[type];\n      }\n      return propagate;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Target.prototype.disposeInternal = function disposeInternal () {\n    unlistenAll(this);\n  };\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\n   */\n  Target.prototype.getListeners = function getListeners (type) {\n    return this.listeners_[type];\n  };\n\n  /**\n   * @param {string=} opt_type Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  Target.prototype.hasListener = function hasListener (opt_type) {\n    return opt_type ?\n      opt_type in this.listeners_ :\n      Object.keys(this.listeners_).length > 0;\n  };\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  Target.prototype.removeEventListener = function removeEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (listeners) {\n      var index = listeners.indexOf(listener);\n      if (type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  };\n\n  return Target;\n}(Disposable));\n\n\nexport default Target;\n\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/layer/Layer\n */\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {getChangeEventType} from '../Object.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Base.js\").default} layer\n * @property {number} opacity\n * @property {SourceState} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n */\nvar Layer = /*@__PURE__*/(function (BaseLayer) {\n  function Layer(options) {\n\n    var baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    listen(this,\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_, this);\n\n    var source = options.source ? options.source : null;\n    this.setSource(source);\n  }\n\n  if ( BaseLayer ) Layer.__proto__ = BaseLayer;\n  Layer.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  Layer.prototype.constructor = Layer;\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  };\n\n  /**\n   * Get the layer source.\n   * @return {import(\"../source/Source.js\").default} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  Layer.prototype.getSource = function getSource () {\n    var source = this.get(LayerProperty.SOURCE);\n    return (\n      /** @type {import(\"../source/Source.js\").default} */ (source) || null\n    );\n  };\n\n  /**\n    * @inheritDoc\n    */\n  Layer.prototype.getSourceState = function getSourceState () {\n    var source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourceChange_ = function handleSourceChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourcePropertyChange_ = function handleSourcePropertyChange_ () {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    var source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(source,\n        EventType.CHANGE, this.handleSourceChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  Layer.prototype.setMap = function setMap (map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function(evt) {\n        var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n        var layerState = this.getLayerState();\n        layerState.managed = false;\n        if (this.getZIndex() === undefined) {\n          layerState.zIndex = Infinity;\n        }\n        renderEvent.frameState.layerStatesArray.push(layerState);\n        renderEvent.frameState.layerStates[getUid(this)] = layerState;\n      }, this);\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the layer source.\n   * @param {import(\"../source/Source.js\").default} source The layer source.\n   * @observable\n   * @api\n   */\n  Layer.prototype.setSource = function setSource (source) {\n    this.set(LayerProperty.SOURCE, source);\n  };\n\n  return Layer;\n}(BaseLayer));\n\n\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n  return layerState.visible && resolution >= layerState.minResolution &&\n      resolution < layerState.maxResolution;\n}\n\n\nexport default Layer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredSegmentDistance, squaredDistance} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end,\n  stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n  var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n    opt_simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(flatCoordinates, offset, end,\n      stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0);\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates, offset, end, stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0);\n  return simplifiedFlatCoordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  var n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  var markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  var stack = [offset, end - stride];\n  var index = 0;\n  while (stack.length > 0) {\n    var last = stack.pop();\n    var first = stack.pop();\n    var maxSquaredDistance = 0;\n    var x1 = flatCoordinates[first];\n    var y1 = flatCoordinates[first + 1];\n    var x2 = flatCoordinates[last];\n    var y2 = flatCoordinates[last + 1];\n    for (var i = first + stride; i < last; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      var squaredDistance = squaredSegmentDistance(\n        x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (var i$1 = 0; i$1 < n; ++i$1) {\n    if (markers[i$1]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset,\n  ends, stride, squaredTolerance, simplifiedFlatCoordinates,\n  simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates, offset, end, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates, offset, endss, stride, squaredTolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates, offset, ends, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  var x2 = x1;\n  var y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride,\n  tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  var x1 = snap(flatCoordinates[offset], tolerance);\n  var y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  var x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    var x3 = snap(flatCoordinates[offset], tolerance);\n    var y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    var dx1 = x2 - x1;\n    var dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    var dx2 = x3 - x1;\n    var dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if ((dx1 * dy2 == dy1 * dx2) &&\n        ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n        ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates, offset, ends, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates, offset, end, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates, offset, endss, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates, offset, ends, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n//# sourceMappingURL=simplify.js.map","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n\n/**\n * @param {EventsKey} listenerObj Listener object.\n * @return {ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n  var boundListener = function(evt) {\n    var listener = listenerObj.listener;\n    var bindTo = listenerObj.bindTo || listenerObj.target;\n    if (listenerObj.callOnce) {\n      unlistenByKey(listenerObj);\n    }\n    return listener.call(bindTo, evt);\n  };\n  listenerObj.boundListener = boundListener;\n  return boundListener;\n}\n\n\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n  var listenerObj;\n  for (var i = 0, ii = listeners.length; i < ii; ++i) {\n    listenerObj = listeners[i];\n    if (listenerObj.listener === listener &&\n        listenerObj.bindTo === opt_this) {\n      if (opt_setDeleteIndex) {\n        listenerObj.deleteIndex = i;\n      }\n      return listenerObj;\n    }\n  }\n  return undefined;\n}\n\n\n/**\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array<EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n  var listenerMap = getListenerMap(target);\n  return listenerMap ? listenerMap[type] : undefined;\n}\n\n\n/**\n * Get the lookup of listeners.\n * @param {Object} target Target.\n * @param {boolean=} opt_create If a map should be created if it doesn't exist.\n * @return {!Object<string, Array<EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target, opt_create) {\n  var listenerMap = target.ol_lm;\n  if (!listenerMap && opt_create) {\n    listenerMap = target.ol_lm = {};\n  }\n  return listenerMap;\n}\n\n\n/**\n * Remove the listener map from a target.\n * @param {Object} target Target.\n */\nfunction removeListenerMap(target) {\n  delete target.ol_lm;\n}\n\n\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n      /** @type {import(\"./events/Target.js\").default} */ (target).\n        removeEventListener(type, listeners[i].boundListener);\n      clear(listeners[i]);\n    }\n    listeners.length = 0;\n    var listenerMap = getListenerMap(target);\n    if (listenerMap) {\n      delete listenerMap[type];\n      if (Object.keys(listenerMap).length === 0) {\n        removeListenerMap(target);\n      }\n    }\n  }\n}\n\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  var listenerMap = getListenerMap(target, true);\n  var listeners = listenerMap[type];\n  if (!listeners) {\n    listeners = listenerMap[type] = [];\n  }\n  var listenerObj = findListener(listeners, listener, opt_this, false);\n  if (listenerObj) {\n    if (!opt_once) {\n      // Turn one-off listener into a permanent one.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = /** @type {EventsKey} */ ({\n      bindTo: opt_this,\n      callOnce: !!opt_once,\n      listener: listener,\n      target: target,\n      type: type\n    });\n    /** @type {import(\"./events/Target.js\").default} */ (target).\n      addEventListener(type, bindListener(listenerObj));\n    listeners.push(listenerObj);\n  }\n\n  return listenerObj;\n}\n\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n\n/**\n * Unregisters an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    var listenerObj = findListener(listeners, listener, opt_this, true);\n    if (listenerObj) {\n      unlistenByKey(listenerObj);\n    }\n  }\n}\n\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    /** @type {import(\"./events/Target.js\").default} */ (key.target).\n      removeEventListener(key.type, key.boundListener);\n    var listeners = getListeners(key.target, key.type);\n    if (listeners) {\n      var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n      if (i !== -1) {\n        listeners.splice(i, 1);\n      }\n      if (listeners.length === 0) {\n        removeListeners(key.target, key.type);\n      }\n    }\n    clear(key);\n  }\n}\n\n\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n  var listenerMap = getListenerMap(target);\n  if (listenerMap) {\n    for (var type in listenerMap) {\n      removeListeners(target, type);\n    }\n  }\n}\n\n//# sourceMappingURL=events.js.map","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml'\n};\n\n//# sourceMappingURL=FormatType.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  var outside = forEachCorner(extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function(coordinate) {\n      return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n  return !outside;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  var wn = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/interaction/Select\n */\nimport {getUid} from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {extend, includes} from '../array.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {singleClick, never, shiftKeyOnly, pointerMove} from '../events/condition.js';\nimport {TRUE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from './Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {clear} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @enum {string}\n */\nvar SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select'\n};\n\n\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default):boolean} FilterFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}).\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the selection\n * overlay.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nvar SelectEvent = /*@__PURE__*/(function (Event) {\n  function SelectEvent(type, selected, deselected, mapBrowserEvent) {\n    Event.call(this, type);\n\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n  if ( Event ) SelectEvent.__proto__ = Event;\n  SelectEvent.prototype = Object.create( Event && Event.prototype );\n  SelectEvent.prototype.constructor = SelectEvent;\n\n  return SelectEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * Selected features are added to an internal unmanaged layer.\n *\n * @fires SelectEvent\n * @api\n */\nvar Select = /*@__PURE__*/(function (Interaction) {\n  function Select(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.removeCondition_ = options.removeCondition ? options.removeCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition ? options.toggleCondition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    var featureOverlay = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        features: options.features,\n        wrapX: options.wrapX\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    /**\n     * @private\n     * @type {VectorLayer}\n     */\n    this.featureOverlay_ = featureOverlay;\n\n    /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n    var layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        var layers = options.layers;\n        layerFilter = function(layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n    this.featureLayerAssociation_ = {};\n\n    var features = this.getFeatures();\n    listen(features, CollectionEventType.ADD,\n      this.addFeature_, this);\n    listen(features, CollectionEventType.REMOVE,\n      this.removeFeature_, this);\n  }\n\n  if ( Interaction ) Select.__proto__ = Interaction;\n  Select.prototype = Object.create( Interaction && Interaction.prototype );\n  Select.prototype.constructor = Select;\n\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n  Select.prototype.addFeatureLayerAssociation_ = function addFeatureLayerAssociation_ (feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  };\n\n  /**\n   * Get the selected features.\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} Features collection.\n   * @api\n   */\n  Select.prototype.getFeatures = function getFeatures () {\n    return /** @type {VectorSource} */ (this.featureOverlay_.getSource()).getFeaturesCollection();\n  };\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @returns {number} Hit tolerance in pixels.\n   * @api\n   */\n  Select.prototype.getHitTolerance = function getHitTolerance () {\n    return this.hitTolerance_;\n  };\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n   * the (last) selected feature. Note that this will not work with any\n   * programmatic method like pushing features to\n   * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature\n   * @return {VectorLayer} Layer.\n   * @api\n   */\n  Select.prototype.getLayer = function getLayer (feature) {\n    return (\n      /** @type {VectorLayer} */ (this.featureLayerAssociation_[getUid(feature)])\n    );\n  };\n\n  /**\n   * Get the overlay layer that this interaction renders selected features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  Select.prototype.getOverlay = function getOverlay () {\n    return this.featureOverlay_;\n  };\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features. This only works for the canvas renderer and\n   * not for WebGL.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  Select.prototype.setHitTolerance = function setHitTolerance (hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  };\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @override\n   * @api\n   */\n  Select.prototype.setMap = function setMap (map) {\n    var currentMap = this.getMap();\n    var selectedFeatures = this.getFeatures();\n    if (currentMap) {\n      selectedFeatures.forEach(currentMap.unskipFeature.bind(currentMap));\n    }\n    Interaction.prototype.setMap.call(this, map);\n    this.featureOverlay_.setMap(map);\n    if (map) {\n      selectedFeatures.forEach(map.skipFeature.bind(map));\n    }\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Select.prototype.addFeature_ = function addFeature_ (evt) {\n    var map = this.getMap();\n    if (map) {\n      map.skipFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n    }\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Select.prototype.removeFeature_ = function removeFeature_ (evt) {\n    var map = this.getMap();\n    if (map) {\n      map.unskipFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @private\n   */\n  Select.prototype.removeFeatureLayerAssociation_ = function removeFeatureLayerAssociation_ (feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  };\n\n  return Select;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n * selected state of features.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {Select}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!this.condition_(mapBrowserEvent)) {\n    return true;\n  }\n  var add = this.addCondition_(mapBrowserEvent);\n  var remove = this.removeCondition_(mapBrowserEvent);\n  var toggle = this.toggleCondition_(mapBrowserEvent);\n  var set = !add && !remove && !toggle;\n  var map = mapBrowserEvent.map;\n  var features = this.getFeatures();\n  var deselected = [];\n  var selected = [];\n  if (set) {\n    // Replace the currently selected feature(s) with the feature(s) at the\n    // pixel, or clear the selected feature(s) if there is no feature at\n    // the pixel.\n    clear(this.featureLayerAssociation_);\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            selected.push(feature);\n            this.addFeatureLayerAssociation_(feature, layer);\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (var i = features.getLength() - 1; i >= 0; --i) {\n      var feature = features.item(i);\n      var index = selected.indexOf(feature);\n      if (index > -1) {\n        // feature is already selected\n        selected.splice(index, 1);\n      } else {\n        features.remove(feature);\n        deselected.push(feature);\n      }\n    }\n    if (selected.length !== 0) {\n      features.extend(selected);\n    }\n  } else {\n    // Modify the currently selected feature(s).\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            if ((add || toggle) && !includes(features.getArray(), feature)) {\n              selected.push(feature);\n              this.addFeatureLayerAssociation_(feature, layer);\n            } else if ((remove || toggle) && includes(features.getArray(), feature)) {\n              deselected.push(feature);\n              this.removeFeatureLayerAssociation_(feature);\n            }\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (var j = deselected.length - 1; j >= 0; --j) {\n      features.remove(deselected[j]);\n    }\n    features.extend(selected);\n  }\n  if (selected.length > 0 || deselected.length > 0) {\n    this.dispatchEvent(\n      new SelectEvent(SelectEventType.SELECT,\n        selected, deselected, mapBrowserEvent));\n  }\n  return pointerMove(mapBrowserEvent);\n}\n\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  var styles = createEditingStyle();\n  extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n  extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\n\n  return function(feature, resolution) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\nexport default Select;\n\n//# sourceMappingURL=Select.js.map","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/obj\n */\n\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  var arguments$1 = arguments;\n\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  for (var i = 1, ii = arguments.length; i < ii; ++i) {\n    var source = arguments$1[i];\n    if (source !== undefined && source !== null) {\n      for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (var property in object) {\n    delete object[property];\n  }\n}\n\n\n/**\n * Get an array of property values from an object.\n * @param {Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport function getValues(object) {\n  var values = [];\n  for (var property in object) {\n    values.push(object[property]);\n  }\n  return values;\n}\n\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  var property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/control/Control\n */\nimport {VOID} from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {removeNode} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /*@__PURE__*/(function (BaseObject) {\n  function Control(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = options.element ? options.element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    /**\n     * @type {function(import(\"../MapEvent.js\").default)}\n     */\n    this.render = options.render ? options.render : VOID;\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n\n  }\n\n  if ( BaseObject ) Control.__proto__ = BaseObject;\n  Control.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Control.prototype.constructor = Control;\n\n  /**\n   * @inheritDoc\n   */\n  Control.prototype.disposeInternal = function disposeInternal () {\n    removeNode(this.element);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  Control.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  Control.prototype.setMap = function setMap (map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      var target = this.target_ ?\n        this.target_ : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(listen(map,\n          MapEventType.POSTRENDER, this.render, this));\n      }\n      map.render();\n    }\n  };\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  Control.prototype.setTarget = function setTarget (target) {\n    this.target_ = typeof target === 'string' ?\n      document.getElementById(target) :\n      target;\n  };\n\n  return Control;\n}(BaseObject));\n\n\nexport default Control;\n\n//# sourceMappingURL=Control.js.map","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /*@__PURE__*/(function (Interaction) {\n  function DoubleClickZoom(opt_options) {\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Interaction ) DoubleClickZoom.__proto__ = Interaction;\n  DoubleClickZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  DoubleClickZoom.prototype.constructor = DoubleClickZoom;\n\n  return DoubleClickZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n    var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    var map = mapBrowserEvent.map;\n    var anchor = mapBrowserEvent.coordinate;\n    var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    var view = map.getView();\n    zoomByDelta(view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n}\n\nexport default DoubleClickZoom;\n\n//# sourceMappingURL=DoubleClickZoom.js.map","/**\n * @module ol/interaction/DragPan\n */\nimport ViewHint from '../ViewHint.js';\nimport {scale as scaleCoordinate, rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {noModifierKeys} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /*@__PURE__*/(function (PointerInteraction) {\n  function DragPan(opt_options) {\n\n    PointerInteraction.call(this, {\n      stopDown: FALSE\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n\n  }\n\n  if ( PointerInteraction ) DragPan.__proto__ = PointerInteraction;\n  DragPan.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragPan.prototype.constructor = DragPan;\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    var targetPointers = this.targetPointers;\n    var centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        var deltaX = this.lastCentroid[0] - centroid[0];\n        var deltaY = centroid[1] - this.lastCentroid[1];\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        var center = [deltaX, deltaY];\n        scaleCoordinate(center, view.getResolution());\n        rotateCoordinate(center, view.getRotation());\n        addCoordinate(center, view.getCenter());\n        center = view.constrainCenter(center);\n        view.setCenter(center);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        var distance = this.kinetic_.getDistance();\n        var angle = this.kinetic_.getAngle();\n        var center = /** @type {!import(\"../coordinate.js\").Coordinate} */ (view.getCenter());\n        var centerpx = map.getPixelFromCoordinate(center);\n        var dest = map.getCoordinateFromPixel([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle)\n        ]);\n        view.animate({\n          center: view.constrainCenter(dest),\n          duration: 500,\n          easing: easeOut\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.setHint(ViewHint.INTERACTING, -1);\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.setCenter(mapBrowserEvent.frameState.viewState.center);\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragPan;\n}(PointerInteraction));\n\nexport default DragPan;\n\n//# sourceMappingURL=DragPan.js.map","/**\n * @module ol/interaction/DragRotate\n */\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {altShiftKeysOnly, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from './Interaction.js';\nimport PointerInteraction from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /*@__PURE__*/(function (PointerInteraction) {\n  function DragRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    PointerInteraction.call(this, {\n      stopDown: FALSE\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) DragRotate.__proto__ = PointerInteraction;\n  DragRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragRotate.prototype.constructor = DragRotate;\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    var size = map.getSize();\n    var offset = mapBrowserEvent.pixel;\n    var theta =\n        Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      var delta = theta - this.lastAngle_;\n      var rotation = view.getRotation();\n      rotateWithoutConstraints(view, rotation - delta);\n    }\n    this.lastAngle_ = theta;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    var rotation = view.getRotation();\n    rotate(view, rotation, undefined, this.duration_);\n    return false;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n      var map = mapBrowserEvent.map;\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragRotate;\n}(PointerInteraction));\n\nexport default DragRotate;\n\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {always, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {VOID} from '../functions.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\n\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)} onBoxEnd Code to execute just\n * before `boxend` is fired.\n */\n\n\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /*@__PURE__*/(function (Event) {\n  function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n    Event.call(this, type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n  if ( Event ) DragBoxEvent.__proto__ = Event;\n  DragBoxEvent.prototype = Object.create( Event && Event.prototype );\n  DragBoxEvent.prototype.constructor = DragBoxEvent;\n\n  return DragBoxEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /*@__PURE__*/(function (PointerInteraction) {\n  function DragBox(opt_options) {\n\n    PointerInteraction.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n    * @type {import(\"../render/Box.js\").default}\n    * @private\n    */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @type {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)}\n     * @private\n     */\n    this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\n\n    /**\n    * @type {import(\"../pixel.js\").Pixel}\n    * @private\n    */\n    this.startPixel_ = null;\n\n    /**\n    * @private\n    * @type {import(\"../events/condition.js\").Condition}\n    */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n    * @private\n    * @type {EndCondition}\n    */\n    this.boxEndCondition_ = options.boxEndCondition ?\n      options.boxEndCondition : this.defaultBoxEndCondition;\n  }\n\n  if ( PointerInteraction ) DragBox.__proto__ = PointerInteraction;\n  DragBox.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragBox.prototype.constructor = DragBox;\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  DragBox.prototype.defaultBoxEndCondition = function defaultBoxEndCondition (mapBrowserEvent, startPixel, endPixel) {\n    var width = endPixel[0] - startPixel[0];\n    var height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  };\n\n  /**\n  * Returns geometry of last drawn box.\n  * @return {import(\"../geom/Polygon.js\").default} Geometry.\n  * @api\n  */\n  DragBox.prototype.getGeometry = function getGeometry () {\n    return this.box_.getGeometry();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    this.box_.setMap(null);\n\n    if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n      this.onBoxEnd_(mapBrowserEvent);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) &&\n        this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragBox;\n}(PointerInteraction));\n\n\nexport default DragBox;\n\n//# sourceMappingURL=DragBox.js.map","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport {createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter} from '../extent.js';\nimport DragBox from './DragBox.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /*@__PURE__*/(function (DragBox) {\n  function DragZoom(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var condition = options.condition ? options.condition : shiftKeyOnly;\n\n    DragBox.call(this, {\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      onBoxEnd: onBoxEnd\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  if ( DragBox ) DragZoom.__proto__ = DragBox;\n  DragZoom.prototype = Object.create( DragBox && DragBox.prototype );\n  DragZoom.prototype.constructor = DragZoom;\n\n  return DragZoom;\n}(DragBox));\n\n\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n  var map = this.getMap();\n  var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n  var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n  var extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    var mapExtent = view.calculateExtent(size);\n    var boxPixelExtent = createOrUpdateFromCoordinates([\n      map.getPixelFromCoordinate(getBottomLeft(extent)),\n      map.getPixelFromCoordinate(getTopRight(extent))]);\n    var factor = view.getResolutionForExtent(boxPixelExtent, size);\n\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  var resolution = view.constrainResolution(\n    view.getResolutionForExtent(extent, size));\n\n  var center = getCenter(extent);\n  center = view.constrainCenter(center);\n\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n}\n\n\nexport default DragZoom;\n\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\n\n//# sourceMappingURL=KeyCode.js.map","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /*@__PURE__*/(function (Interaction) {\n  function KeyboardPan(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function(mapBrowserEvent) {\n      return noModifierKeys(mapBrowserEvent) &&\n        targetNotEditable(mapBrowserEvent);\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition !== undefined ?\n      options.condition : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ = options.pixelDelta !== undefined ?\n      options.pixelDelta : 128;\n\n  }\n\n  if ( Interaction ) KeyboardPan.__proto__ = Interaction;\n  KeyboardPan.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardPan.prototype.constructor = KeyboardPan;\n\n  return KeyboardPan;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN) {\n    var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    var keyCode = keyEvent.keyCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n        keyCode == KeyCode.LEFT ||\n        keyCode == KeyCode.RIGHT ||\n        keyCode == KeyCode.UP)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n      var deltaX = 0, deltaY = 0;\n      if (keyCode == KeyCode.DOWN) {\n        deltaY = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.LEFT) {\n        deltaX = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.RIGHT) {\n        deltaX = mapUnitsDelta;\n      } else {\n        deltaY = mapUnitsDelta;\n      }\n      var delta = [deltaX, deltaY];\n      rotateCoordinate(delta, view.getRotation());\n      pan(view, delta, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardPan;\n\n//# sourceMappingURL=KeyboardPan.js.map","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /*@__PURE__*/(function (Interaction) {\n  function KeyboardZoom(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n  }\n\n  if ( Interaction ) KeyboardZoom.__proto__ = Interaction;\n  KeyboardZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardZoom.prototype.constructor = KeyboardZoom;\n\n  return KeyboardZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS) {\n    var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    var charCode = keyEvent.charCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n      var map = mapBrowserEvent.map;\n      var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n      var view = map.getView();\n      zoomByDelta(view, delta, undefined, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardZoom;\n\n//# sourceMappingURL=KeyboardZoom.js.map","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {always} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX, SAFARI} from '../has.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Maximum mouse wheel delta.\n * @type {number}\n */\nvar MAX_DELTA = 1;\n\n\n/**\n * @enum {string}\n */\nexport var Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [constrainResolution=false] When using a trackpad or\n * magic mouse, zoom to the closest integer zoom level after the scroll gesture\n * ends.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /*@__PURE__*/(function (Interaction) {\n  function MouseWheelZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(/** @type {import(\"./Interaction.js\").InteractionOptions} */ this, (options));\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.trackpadDeltaPerZoom_ = 300;\n\n    /**\n     * The zoom factor by which scroll zooming is allowed to exceed the limits.\n     * @private\n     * @type {number}\n     */\n    this.trackpadZoomBuffer_ = 1.5;\n\n  }\n\n  if ( Interaction ) MouseWheelZoom.__proto__ = Interaction;\n  MouseWheelZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  MouseWheelZoom.prototype.constructor = MouseWheelZoom;\n\n  /**\n   * @private\n   */\n  MouseWheelZoom.prototype.decrementInteractingHint_ = function decrementInteractingHint_ () {\n    this.trackpadTimeoutId_ = undefined;\n    var view = this.getMap().getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @override\n   */\n  MouseWheelZoom.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    var type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n      return true;\n    }\n\n    mapBrowserEvent.preventDefault();\n\n    var map = mapBrowserEvent.map;\n    var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    var delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX &&\n          wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    } else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n      delta = -wheelEvent.wheelDeltaY;\n      if (SAFARI) {\n        delta /= 3;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n\n    var now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ?\n        Mode.TRACKPAD :\n        Mode.WHEEL;\n    }\n\n    if (this.mode_ === Mode.TRACKPAD) {\n      var view = map.getView();\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        view.setHint(ViewHint.INTERACTING, 1);\n      }\n      this.trackpadTimeoutId_ = setTimeout(this.decrementInteractingHint_.bind(this), this.trackpadEventGap_);\n      var resolution = view.getResolution() * Math.pow(2, delta / this.trackpadDeltaPerZoom_);\n      var minResolution = view.getMinResolution();\n      var maxResolution = view.getMaxResolution();\n      var rebound = 0;\n      if (resolution < minResolution) {\n        resolution = Math.max(resolution, minResolution / this.trackpadZoomBuffer_);\n        rebound = 1;\n      } else if (resolution > maxResolution) {\n        resolution = Math.min(resolution, maxResolution * this.trackpadZoomBuffer_);\n        rebound = -1;\n      }\n      if (this.lastAnchor_) {\n        var center = view.calculateCenterZoom(resolution, this.lastAnchor_);\n        view.setCenter(view.constrainCenter(center));\n      }\n      view.setResolution(resolution);\n\n      if (rebound === 0 && this.constrainResolution_) {\n        view.animate({\n          resolution: view.constrainResolution(resolution, delta > 0 ? -1 : 1),\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: this.duration_\n        });\n      }\n\n      if (rebound > 0) {\n        view.animate({\n          resolution: minResolution,\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: 500\n        });\n      } else if (rebound < 0) {\n        view.animate({\n          resolution: maxResolution,\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: 500\n        });\n      }\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.delta_ += delta;\n\n    var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n\n    return false;\n  };\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  MouseWheelZoom.prototype.handleWheelZoom_ = function handleWheelZoom_ (map) {\n    var view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    var maxDelta = MAX_DELTA;\n    var delta = clamp(this.delta_, -maxDelta, maxDelta);\n    zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n    this.mode_ = undefined;\n    this.delta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  };\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  MouseWheelZoom.prototype.setMouseAnchor = function setMouseAnchor (useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  };\n\n  return MouseWheelZoom;\n}(Interaction));\n\nexport default MouseWheelZoom;\n\n//# sourceMappingURL=MouseWheelZoom.js.map","/**\n * @module ol/interaction/PinchRotate\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from './Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\nimport {disable} from '../rotationconstraint.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /*@__PURE__*/(function (PointerInteraction) {\n  function PinchRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) PinchRotate.__proto__ = PointerInteraction;\n  PinchRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchRotate.prototype.constructor = PinchRotate;\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    var rotationDelta = 0.0;\n\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n\n    // angle between touches\n    var angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX);\n\n    if (this.lastAngle_ !== undefined) {\n      var delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ &&\n          Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      var rotation = view.getRotation();\n      map.render();\n      rotateWithoutConstraints(view, rotation + rotationDelta, this.anchor_);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n      if (this.rotating_) {\n        var rotation = view.getRotation();\n        rotate(view, rotation, this.anchor_, this.duration_);\n      }\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().setHint(ViewHint.INTERACTING, 1);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return PinchRotate;\n}(PointerInteraction));\n\nexport default PinchRotate;\n\n//# sourceMappingURL=PinchRotate.js.map","/**\n * @module ol/interaction/PinchZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {zoom, zoomWithoutConstraints} from './Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the pinch gesture ends.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /*@__PURE__*/(function (PointerInteraction) {\n  function PinchZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n\n  }\n\n  if ( PointerInteraction ) PinchZoom.__proto__ = PointerInteraction;\n  PinchZoom.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchZoom.prototype.constructor = PinchZoom;\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    var scaleDelta = 1.0;\n\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n    var dx = touch0.clientX - touch1.clientX;\n    var dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    var distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    var resolution = view.getResolution();\n    var maxResolution = view.getMaxResolution();\n    var minResolution = view.getMinResolution();\n    var newResolution = resolution * scaleDelta;\n    if (newResolution > maxResolution) {\n      scaleDelta = maxResolution / resolution;\n      newResolution = maxResolution;\n    } else if (newResolution < minResolution) {\n      scaleDelta = minResolution / resolution;\n      newResolution = minResolution;\n    }\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    zoomWithoutConstraints(view, newResolution, this.anchor_);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n      var resolution = view.getResolution();\n      if (this.constrainResolution_ ||\n          resolution < view.getMinResolution() ||\n          resolution > view.getMaxResolution()) {\n        // Zoom to final resolution, with an animation, and provide a\n        // direction not to zoom out/in if user was pinching in/out.\n        // Direction is > 0 if pinching out, and < 0 if pinching in.\n        var direction = this.lastScaleDelta_ - 1;\n        zoom(view, resolution, this.anchor_, this.duration_, direction);\n      }\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().setHint(ViewHint.INTERACTING, 1);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return PinchZoom;\n}(PointerInteraction));\n\nexport default PinchZoom;\n\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nimport {focus} from './events/condition.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the wheel/trackpad or pinch gesture ends.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or\n * mousewheel zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. The default set of\n * interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var interactions = new Collection();\n\n  var kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n    options.altShiftDragRotate : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  var doubleClickZoom = options.doubleClickZoom !== undefined ?\n    options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(new DoubleClickZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(new DragPan({\n      condition: options.onFocusOnly ? focus : undefined,\n      kinetic: kinetic\n    }));\n  }\n\n  var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n    true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(new PinchZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(new KeyboardZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n    options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(new MouseWheelZoom({\n      condition: options.onFocusOnly ? focus : undefined,\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var shiftDragZoom = options.shiftDragZoom !== undefined ?\n    options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(new DragZoom({\n      duration: options.zoomDuration\n    }));\n  }\n\n  return interactions;\n\n}\n\n//# sourceMappingURL=interaction.js.map","/**\n * @module ol/layer/Vector\n */\nimport LayerType from '../LayerType.js';\nimport Layer from './Layer.js';\nimport VectorRenderType from './VectorRenderType.js';\nimport {assign} from '../obj.js';\nimport {createDefaultStyle, toFunction as toStyleFunction} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"./VectorRenderType.js\").default|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during animations. This means that no\n * vectors will be shown clipped, but the setting will have a performance impact for large\n * amounts of vector data. When set to `false`, batches will be recreated when no animation\n * is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during interactions. See also\n * `updateWhileAnimating`.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  RENDER_ORDER: 'renderOrder'\n};\n\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar VectorLayer = /*@__PURE__*/(function (Layer) {\n  function VectorLayer(opt_options) {\n    var options = opt_options ?\n      opt_options : /** @type {Options} */ ({});\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    Layer.call(this, baseOptions);\n\n    /**\n    * @private\n    * @type {boolean}\n    */\n    this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.renderBuffer_ = options.renderBuffer !== undefined ?\n      options.renderBuffer : 100;\n\n    /**\n    * User provided style.\n    * @type {import(\"../style/Style.js\").StyleLike}\n    * @private\n    */\n    this.style_ = null;\n\n    /**\n    * Style function for use within the library.\n    * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n    * @private\n    */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n      options.updateWhileAnimating : false;\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n      options.updateWhileInteracting : false;\n\n    /**\n    * @private\n    * @type {import(\"./VectorTileRenderType.js\").default|string}\n    */\n    this.renderMode_ = options.renderMode || VectorRenderType.VECTOR;\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {import(\"../LayerType.js\").default}\n    */\n    this.type = LayerType.VECTOR;\n\n  }\n\n  if ( Layer ) VectorLayer.__proto__ = Layer;\n  VectorLayer.prototype = Object.create( Layer && Layer.prototype );\n  VectorLayer.prototype.constructor = VectorLayer;\n\n  /**\n  * @return {boolean} Declutter.\n  */\n  VectorLayer.prototype.getDeclutter = function getDeclutter () {\n    return this.declutter_;\n  };\n\n  /**\n  * @param {boolean} declutter Declutter.\n  */\n  VectorLayer.prototype.setDeclutter = function setDeclutter (declutter) {\n    this.declutter_ = declutter;\n  };\n\n  /**\n  * @return {number|undefined} Render buffer.\n  */\n  VectorLayer.prototype.getRenderBuffer = function getRenderBuffer () {\n    return this.renderBuffer_;\n  };\n\n  /**\n  * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n  *     order.\n  */\n  VectorLayer.prototype.getRenderOrder = function getRenderOrder () {\n    return (\n    /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER))\n    );\n  };\n\n  /**\n  * Get the style for features.  This returns whatever was passed to the `style`\n  * option at construction or to the `setStyle` method.\n  * @return {import(\"../style/Style.js\").StyleLike}\n  *     Layer style.\n  * @api\n  */\n  VectorLayer.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n  /**\n  * Get the style function.\n  * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n  * @api\n  */\n  VectorLayer.prototype.getStyleFunction = function getStyleFunction () {\n    return this.styleFunction_;\n  };\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     animating.\n  */\n  VectorLayer.prototype.getUpdateWhileAnimating = function getUpdateWhileAnimating () {\n    return this.updateWhileAnimating_;\n  };\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     interacting.\n  */\n  VectorLayer.prototype.getUpdateWhileInteracting = function getUpdateWhileInteracting () {\n    return this.updateWhileInteracting_;\n  };\n\n  /**\n  * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n  *     Render order.\n  */\n  VectorLayer.prototype.setRenderOrder = function setRenderOrder (renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  };\n\n  /**\n  * Set the style for features.  This can be a single style object, an array\n  * of styles, or a function that takes a feature and resolution and returns\n  * an array of styles. If it is `undefined` the default style is used. If\n  * it is `null` the layer has no style (a `null` style), so only features\n  * that have their own styles will be rendered in the layer. See\n  * {@link module:ol/style} for information on the default style.\n  * @param {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null|undefined} style Layer style.\n  * @api\n  */\n  VectorLayer.prototype.setStyle = function setStyle (style) {\n    this.style_ = style !== undefined ? style : createDefaultStyle;\n    this.styleFunction_ = style === null ?\n      undefined : toStyleFunction(this.style_);\n    this.changed();\n  };\n\n  /**\n  * @return {import(\"./VectorRenderType.js\").default|string} The render mode.\n  */\n  VectorLayer.prototype.getRenderMode = function getRenderMode () {\n    return this.renderMode_;\n  };\n\n  return VectorLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Vector vectorsource} of the layer.\n * @function\n * @return {import(\"../source/Vector.js\").default} Source.\n * @api\n */\nVectorLayer.prototype.getSource;\n\n\nexport default VectorLayer;\n\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\nimport {getValues} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /*@__PURE__*/(function (Interaction) {\n  function PointerInteraction(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(/** @type {import(\"./Interaction.js\").InteractionOptions} */ this, (options));\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, import(\"../pointer/PointerEvent.js\").default>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<import(\"../pointer/PointerEvent.js\").default>}\n     * @protected\n     */\n    this.targetPointers = [];\n\n  }\n\n  if ( Interaction ) PointerInteraction.__proto__ = Interaction;\n  PointerInteraction.prototype = Object.create( Interaction && Interaction.prototype );\n  PointerInteraction.prototype.constructor = PointerInteraction;\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  PointerInteraction.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    return false;\n  };\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  PointerInteraction.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {};\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @override\n   * @api\n   */\n  PointerInteraction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!(/** @type {import(\"../MapBrowserPointerEvent.js\").default} */ (mapBrowserEvent).pointerEvent)) {\n      return true;\n    }\n\n    var stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        var handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        var handled = this.handleDownEvent(mapBrowserEvent);\n        if (handled) {\n          mapBrowserEvent.preventDefault();\n        }\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  };\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  PointerInteraction.prototype.handleMoveEvent = function handleMoveEvent (mapBrowserEvent) {};\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  PointerInteraction.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    return false;\n  };\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  PointerInteraction.prototype.stopDown = function stopDown (handled) {\n    return handled;\n  };\n\n  /**\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  PointerInteraction.prototype.updateTrackedPointers_ = function updateTrackedPointers_ (mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      var event = mapBrowserEvent.pointerEvent;\n\n      var id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type ==\n          MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  };\n\n  return PointerInteraction;\n}(Interaction));\n\n\n/**\n * @param {Array<import(\"../pointer/PointerEvent.js\").default>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  var length = pointerEvents.length;\n  var clientX = 0;\n  var clientY = 0;\n  for (var i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  var type = mapBrowserEvent.type;\n  return type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP;\n}\n\n\nexport default PointerInteraction;\n\n//# sourceMappingURL=Pointer.js.map","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from './Property.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return).\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /*@__PURE__*/(function (BaseObject) {\n  function Interaction(options) {\n    BaseObject.call(this);\n\n    if (options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  if ( BaseObject ) Interaction.__proto__ = BaseObject;\n  Interaction.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Interaction.prototype.constructor = Interaction;\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.getActive = function getActive () {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  };\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  Interaction.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  Interaction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    return true;\n  };\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.setActive = function setActive (active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  };\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  Interaction.prototype.setMap = function setMap (map) {\n    this.map_ = map;\n  };\n\n  return Interaction;\n}(BaseObject));\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  var currentCenter = view.getCenter();\n  if (currentCenter) {\n    var center = view.constrainCenter(\n      [currentCenter[0] + delta[0], currentCenter[1] + delta[1]]);\n    if (opt_duration) {\n      view.animate({\n        duration: opt_duration,\n        easing: linear,\n        center: center\n      });\n    } else {\n      view.setCenter(center);\n    }\n  }\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotate(view, rotation, opt_anchor, opt_duration) {\n  rotation = view.constrainRotation(rotation, 0);\n  rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration) {\n  if (rotation !== undefined) {\n    var currentRotation = view.getRotation();\n    var currentCenter = view.getCenter();\n    if (currentRotation !== undefined && currentCenter && opt_duration > 0) {\n      view.animate({\n        rotation: rotation,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      view.rotate(rotation, opt_anchor);\n    }\n  }\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n * @param {number=} opt_direction Zooming direction; > 0 indicates\n *     zooming out, in which case the constraints system will select\n *     the largest nearest resolution; < 0 indicates zooming in, in\n *     which case the constraints system will select the smallest\n *     nearest resolution; == 0 indicates that the zooming direction\n *     is unknown/not relevant, in which case the constraints system\n *     will select the nearest resolution. If not defined 0 is\n *     assumed.\n */\nexport function zoom(view, resolution, opt_anchor, opt_duration, opt_direction) {\n  resolution = view.constrainResolution(resolution, 0, opt_direction);\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  var currentResolution = view.getResolution();\n  var resolution = view.constrainResolution(currentResolution, delta, 0);\n\n  if (resolution !== undefined) {\n    var resolutions = view.getResolutions();\n    resolution = clamp(\n      resolution,\n      view.getMinResolution() || resolutions[resolutions.length - 1],\n      view.getMaxResolution() || resolutions[0]);\n  }\n\n  // If we have a constraint on center, we need to change the anchor so that the\n  // new center is within the extent. We first calculate the new center, apply\n  // the constraint to it, and then calculate back the anchor\n  if (opt_anchor && resolution !== undefined && resolution !== currentResolution) {\n    var currentCenter = view.getCenter();\n    var center = view.calculateCenterZoom(resolution, opt_anchor);\n    center = view.constrainCenter(center);\n\n    opt_anchor = [\n      (resolution * currentCenter[0] - currentResolution * center[0]) /\n          (resolution - currentResolution),\n      (resolution * currentCenter[1] - currentResolution * center[1]) /\n          (resolution - currentResolution)\n    ];\n  }\n\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration) {\n  if (resolution) {\n    var currentResolution = view.getResolution();\n    var currentCenter = view.getCenter();\n    if (currentResolution !== undefined && currentCenter &&\n        resolution !== currentResolution && opt_duration) {\n      view.animate({\n        resolution: resolution,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      if (opt_anchor) {\n        var center = view.calculateCenterZoom(resolution, opt_anchor);\n        view.setCenter(center);\n      }\n      view.setResolution(resolution);\n    }\n  }\n}\n\nexport default Interaction;\n\n//# sourceMappingURL=Interaction.js.map","/**\n * @module ol/layer/Heatmap\n */\nimport {listen} from '../events.js';\nimport {getChangeEventType} from '../Object.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport VectorLayer from './Vector.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport Icon from '../style/Icon.js';\nimport Style from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {number} [shadow=250] Shadow size in pixels.\n * @property {string|function(import(\"../Feature.js\").default):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {import(\"./VectorRenderType.js\").default|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  BLUR: 'blur',\n  GRADIENT: 'gradient',\n  RADIUS: 'radius'\n};\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n\n\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @api\n */\nvar Heatmap = /*@__PURE__*/(function (VectorLayer) {\n  function Heatmap(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.gradient;\n    delete baseOptions.radius;\n    delete baseOptions.blur;\n    delete baseOptions.shadow;\n    delete baseOptions.weight;\n    VectorLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {Uint8ClampedArray}\n     */\n    this.gradient_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.shadow_ = options.shadow !== undefined ? options.shadow : 250;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.circleImage_ = undefined;\n\n    /**\n     * @private\n     * @type {Array<Array<import(\"../style/Style.js\").default>>}\n     */\n    this.styleCache_ = null;\n\n    listen(this,\n      getChangeEventType(Property.GRADIENT),\n      this.handleGradientChanged_, this);\n\n    this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n\n    this.setBlur(options.blur !== undefined ? options.blur : 15);\n\n    this.setRadius(options.radius !== undefined ? options.radius : 8);\n\n    listen(this,\n      getChangeEventType(Property.BLUR),\n      this.handleStyleChanged_, this);\n    listen(this,\n      getChangeEventType(Property.RADIUS),\n      this.handleStyleChanged_, this);\n\n    this.handleStyleChanged_();\n\n    var weight = options.weight ? options.weight : 'weight';\n    var weightFunction;\n    if (typeof weight === 'string') {\n      weightFunction = function(feature) {\n        return feature.get(weight);\n      };\n    } else {\n      weightFunction = weight;\n    }\n\n    this.setStyle(function(feature, resolution) {\n      var weight = weightFunction(feature);\n      var opacity = weight !== undefined ? clamp(weight, 0, 1) : 1;\n      // cast to 8 bits\n      var index = (255 * opacity) | 0;\n      var style = this.styleCache_[index];\n      if (!style) {\n        style = [\n          new Style({\n            image: new Icon({\n              opacity: opacity,\n              src: this.circleImage_\n            })\n          })\n        ];\n        this.styleCache_[index] = style;\n      }\n      return style;\n    }.bind(this));\n\n    // For performance reasons, don't sort the features before rendering.\n    // The render order is not relevant for a heatmap representation.\n    this.setRenderOrder(null);\n\n    listen(this, RenderEventType.RENDER, this.handleRender_, this);\n  }\n\n  if ( VectorLayer ) Heatmap.__proto__ = VectorLayer;\n  Heatmap.prototype = Object.create( VectorLayer && VectorLayer.prototype );\n  Heatmap.prototype.constructor = Heatmap;\n\n  /**\n   * @return {string} Data URL for a circle.\n   * @private\n   */\n  Heatmap.prototype.createCircle_ = function createCircle_ () {\n    var radius = this.getRadius();\n    var blur = this.getBlur();\n    var halfSize = radius + blur + 1;\n    var size = 2 * halfSize;\n    var context = createCanvasContext2D(size, size);\n    context.shadowOffsetX = context.shadowOffsetY = this.shadow_;\n    context.shadowBlur = blur;\n    context.shadowColor = '#000';\n    context.beginPath();\n    var center = halfSize - this.shadow_;\n    context.arc(center, center, radius, 0, Math.PI * 2, true);\n    context.fill();\n    return context.canvas.toDataURL();\n  };\n\n  /**\n   * Return the blur size in pixels.\n   * @return {number} Blur size in pixels.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.getBlur = function getBlur () {\n    return /** @type {number} */ (this.get(Property.BLUR));\n  };\n\n  /**\n   * Return the gradient colors as array of strings.\n   * @return {Array<string>} Colors.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.getGradient = function getGradient () {\n    return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\n  };\n\n  /**\n   * Return the size of the radius in pixels.\n   * @return {number} Radius size in pixel.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.getRadius = function getRadius () {\n    return /** @type {number} */ (this.get(Property.RADIUS));\n  };\n\n  /**\n   * @private\n   */\n  Heatmap.prototype.handleGradientChanged_ = function handleGradientChanged_ () {\n    this.gradient_ = createGradient(this.getGradient());\n  };\n\n  /**\n   * @private\n   */\n  Heatmap.prototype.handleStyleChanged_ = function handleStyleChanged_ () {\n    this.circleImage_ = this.createCircle_();\n    this.styleCache_ = new Array(256);\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../render/Event.js\").default} event Post compose event\n   * @private\n   */\n  Heatmap.prototype.handleRender_ = function handleRender_ (event) {\n    var context = event.context;\n    var canvas = context.canvas;\n    var image = context.getImageData(0, 0, canvas.width, canvas.height);\n    var view8 = image.data;\n    for (var i = 0, ii = view8.length; i < ii; i += 4) {\n      var alpha = view8[i + 3] * 4;\n      if (alpha) {\n        view8[i] = this.gradient_[alpha];\n        view8[i + 1] = this.gradient_[alpha + 1];\n        view8[i + 2] = this.gradient_[alpha + 2];\n      }\n    }\n    context.putImageData(image, 0, 0);\n  };\n\n  /**\n   * Set the blur size in pixels.\n   * @param {number} blur Blur size in pixels.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.setBlur = function setBlur (blur) {\n    this.set(Property.BLUR, blur);\n  };\n\n  /**\n   * Set the gradient colors as array of strings.\n   * @param {Array<string>} colors Gradient.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.setGradient = function setGradient (colors) {\n    this.set(Property.GRADIENT, colors);\n  };\n\n  /**\n   * Set the size of the radius in pixels.\n   * @param {number} radius Radius size in pixel.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.setRadius = function setRadius (radius) {\n    this.set(Property.RADIUS, radius);\n  };\n\n  return Heatmap;\n}(VectorLayer));\n\n\n/**\n * @param {Array<string>} colors A list of colored.\n * @return {Uint8ClampedArray} An array.\n */\nfunction createGradient(colors) {\n  var width = 1;\n  var height = 256;\n  var context = createCanvasContext2D(width, height);\n\n  var gradient = context.createLinearGradient(0, 0, width, height);\n  var step = 1 / (colors.length - 1);\n  for (var i = 0, ii = colors.length; i < ii; ++i) {\n    gradient.addColorStop(i * step, colors[i]);\n  }\n\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, width, height);\n\n  return context.getImageData(0, 0, width, height).data;\n}\n\n\nexport default Heatmap;\n\n//# sourceMappingURL=Heatmap.js.map","/**\n * @module ol/geom/MultiLineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {interpolatePoint, lineStringsCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = /*@__PURE__*/(function (SimpleGeometry) {\n  function MultiLineString(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.ends_ = opt_ends;\n    } else {\n      var layout = this.getLayout();\n      var lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      var flatCoordinates = [];\n      var ends = [];\n      for (var i = 0, ii = lineStrings.length; i < ii; ++i) {\n        var lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n\n  }\n\n  if ( SimpleGeometry ) MultiLineString.__proto__ = SimpleGeometry;\n  MultiLineString.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiLineString.prototype.constructor = MultiLineString;\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  MultiLineString.prototype.appendLineString = function appendLineString (lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.clone = function clone () {\n    return new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiLineString.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  MultiLineString.prototype.getCoordinateAtM = function getCoordinateAtM (m, opt_extrapolate, opt_interpolate) {\n    if ((this.layout != GeometryLayout.XYM &&\n         this.layout != GeometryLayout.XYZM) ||\n        this.flatCoordinates.length === 0) {\n      return null;\n    }\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(this.flatCoordinates, 0,\n      this.ends_, this.stride, m, extrapolate, interpolate);\n  };\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinatesArray(\n      this.flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  MultiLineString.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  MultiLineString.prototype.getLineString = function getLineString (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  MultiLineString.prototype.getLineStrings = function getLineStrings () {\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var layout = this.layout;\n    /** @type {Array<LineString>} */\n    var lineStrings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  };\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  MultiLineString.prototype.getFlatMidpoints = function getFlatMidpoints () {\n    var midpoints = [];\n    var flatCoordinates = this.flatCoordinates;\n    var offset = 0;\n    var ends = this.ends_;\n    var stride = this.stride;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var midpoint = interpolatePoint(\n        flatCoordinates, offset, end, stride, 0.5);\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiLineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiLineString.prototype.getType = function getType () {\n    return GeometryType.MULTI_LINE_STRING;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiLineString.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return MultiLineString;\n}(SimpleGeometry));\n\n\nexport default MultiLineString;\n\n//# sourceMappingURL=MultiLineString.js.map","/**\n * @module ol/layer/Tile\n */\nimport LayerType from '../LayerType.js';\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /*@__PURE__*/(function (Layer) {\n  function TileLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    Layer.call(this, baseOptions);\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n      options.useInterimTilesOnError : true);\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {import(\"../LayerType.js\").default}\n    */\n    this.type = LayerType.TILE;\n\n  }\n\n  if ( Layer ) TileLayer.__proto__ = Layer;\n  TileLayer.prototype = Object.create( Layer && Layer.prototype );\n  TileLayer.prototype.constructor = TileLayer;\n\n  /**\n  * Return the level as number to which we will preload tiles up to.\n  * @return {number} The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getPreload = function getPreload () {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  };\n\n  /**\n  * Set the level as number to which we will preload tiles up to.\n  * @param {number} preload The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setPreload = function setPreload (preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  };\n\n  /**\n  * Whether we use interim tiles on error.\n  * @return {boolean} Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getUseInterimTilesOnError = function getUseInterimTilesOnError () {\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n  };\n\n  /**\n  * Set whether we use interim tiles on error.\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setUseInterimTilesOnError = function setUseInterimTilesOnError (useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  };\n\n  return TileLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Tile tilesource} of the layer.\n * @function\n * @return {import(\"../source/Tile.js\").default} Source.\n * @api\n */\nTileLayer.prototype.getSource;\n\n\nexport default TileLayer;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/geom/flat/reverse\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (var i = 0; i < stride; ++i) {\n      var tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  var edge = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge > 0;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingIsOriented(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    if (!linearRingIsOriented(\n      flatCoordinates, offset, endss[i], stride, opt_right)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    var reverse = i === 0 ?\n      (right && isClockwise) || (!right && !isClockwise) :\n      (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates, offset, endss[i], stride, opt_right);\n  }\n  return offset;\n}\n\n//# sourceMappingURL=orient.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM'\n};\n\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/layer/Base\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /*@__PURE__*/(function (BaseObject) {\n  function BaseLayer(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @type {Object<string, *>}\n     */\n    var properties = assign({}, options);\n    properties[LayerProperty.OPACITY] =\n       options.opacity !== undefined ? options.opacity : 1;\n    properties[LayerProperty.VISIBLE] =\n       options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n       options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n       options.minResolution !== undefined ? options.minResolution : 0;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n\n    /**\n     * The layer type.\n     * @type {import(\"../LayerType.js\").default}\n     * @protected;\n     */\n    this.type;\n\n  }\n\n  if ( BaseObject ) BaseLayer.__proto__ = BaseObject;\n  BaseLayer.prototype = Object.create( BaseObject && BaseObject.prototype );\n  BaseLayer.prototype.constructor = BaseLayer;\n\n  /**\n   * Get the layer type (used when creating a layer renderer).\n   * @return {import(\"../LayerType.js\").default} The layer type.\n   */\n  BaseLayer.prototype.getType = function getType () {\n    return this.type;\n  };\n\n  /**\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  BaseLayer.prototype.getLayerState = function getLayerState () {\n    /** @type {import(\"./Layer.js\").State} */\n    var state = this.state_ || /** @type {?} */ ({\n      layer: this,\n      managed: true\n    });\n    state.opacity = clamp(this.getOpacity(), 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = this.getZIndex() || 0;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    this.state_ = state;\n\n    return state;\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  BaseLayer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  BaseLayer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    return abstract();\n  };\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getExtent = function getExtent () {\n    return (\n      /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT))\n    );\n  };\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getMaxResolution = function getMaxResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  };\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getMinResolution = function getMinResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  };\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getOpacity = function getOpacity () {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  };\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  BaseLayer.prototype.getSourceState = function getSourceState () {\n    return abstract();\n  };\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getVisible = function getVisible () {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  };\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getZIndex = function getZIndex () {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  };\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setExtent = function setExtent (extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  };\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setMaxResolution = function setMaxResolution (maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  };\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setMinResolution = function setMinResolution (minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  };\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setOpacity = function setOpacity (opacity) {\n    this.set(LayerProperty.OPACITY, opacity);\n  };\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setVisible = function setVisible (visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  };\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setZIndex = function setZIndex (zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  };\n\n  return BaseLayer;\n}(BaseObject));\n\n\nexport default BaseLayer;\n\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/functions\n */\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/geom/flat/length\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  var length = 0;\n  for (var i = offset + stride; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n\n//# sourceMappingURL=length.js.map","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingIsOriented, orientLinearRings} from './flat/orient.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {modulo} from '../math.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /*@__PURE__*/(function (SimpleGeometry) {\n  function Polygon(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) Polygon.__proto__ = SimpleGeometry;\n  Polygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Polygon.prototype.constructor = Polygon;\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  Polygon.prototype.appendLinearRing = function appendLinearRing (linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @override\n   * @api\n   */\n  Polygon.prototype.clone = function clone () {\n    return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  Polygon.prototype.getArea = function getArea () {\n    return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  Polygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(\n        flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(\n      flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  Polygon.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  Polygon.prototype.getFlatInteriorPoint = function getFlatInteriorPoint () {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      var flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride,\n        flatCenter, 0);\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  };\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  Polygon.prototype.getInteriorPoint = function getInteriorPoint () {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  };\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRingCount = function getLinearRingCount () {\n    return this.ends_.length;\n  };\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  Polygon.prototype.getLinearRing = function getLinearRing (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRings = function getLinearRings () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var linearRings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  };\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  Polygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingIsOriented(\n        flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRings(\n              this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.getType = function getType () {\n    return GeometryType.POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  Polygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return Polygon;\n}(SimpleGeometry));\n\n\nexport default Polygon;\n\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  var n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  var flatCoordinates = [];\n  for (var i = 0; i < n; ++i) {\n    extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var flatCoordinates =\n      [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  var sides = opt_sides ? opt_sides : 32;\n  var stride = circle.getStride();\n  var layout = circle.getLayout();\n  var center = circle.getCenter();\n  var arrayLength = stride * (sides + 1);\n  var flatCoordinates = new Array(arrayLength);\n  for (var i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (var j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  var ends = [flatCoordinates.length];\n  var polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  var flatCoordinates = polygon.getFlatCoordinates();\n  var stride = polygon.getStride();\n  var sides = flatCoordinates.length / stride - 1;\n  var startAngle = opt_angle ? opt_angle : 0;\n  for (var i = 0; i <= sides; ++i) {\n    var offset = i * stride;\n    var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n    flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n    flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n  }\n  polygon.changed();\n}\n\n//# sourceMappingURL=Polygon.js.map","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  var el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    var rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (\n  function() {\n\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n\n    return (\n      /**\n       * @param {string} s String.\n       * @return {Color} Color.\n       */\n      function(s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n          color = cache[s];\n        } else {\n          if (cacheSize >= MAX_CACHE_SIZE) {\n            var i = 0;\n            for (var key in cache) {\n              if ((i++ & 3) === 0) {\n                delete cache[key];\n                --cacheSize;\n              }\n            }\n          }\n          color = fromStringInternal_(s);\n          cache[s] = color;\n          ++cacheSize;\n        }\n        return color;\n      }\n    );\n\n  })();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  var r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) { // hex\n    var n = s.length - 1; // number of hex digits\n    var d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    var hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) { // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) { // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  var r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  var g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  var b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  var a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n//# sourceMappingURL=color.js.map","/**\n * @module ol/has\n */\n\nvar ua = typeof navigator !== 'undefined' ?\n  navigator.userAgent.toLowerCase() : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n\n\n/**\n * True if the browser's Canvas implementation implements {get,set}LineDash.\n * @type {boolean}\n */\nexport var CANVAS_LINE_DASH = function() {\n  var has = false;\n  try {\n    has = !!document.createElement('canvas').getContext('2d').setLineDash;\n  } catch (e) {\n    // pass\n  }\n  return has;\n}();\n\n\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport var GEOLOCATION = 'geolocation' in navigator;\n\n\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport var TOUCH = 'ontouchstart' in window;\n\n\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport var POINTER = 'PointerEvent' in window;\n\n\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport var MSPOINTER = !!(navigator.msPointerEnabled);\n\n\nexport {HAS as WEBGL} from './webgl.js';\n\n//# sourceMappingURL=has.js.map","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined)): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @return {Type} The constraint.\n */\nexport function createExtent(extent) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function(center) {\n      if (center) {\n        return [\n          clamp(center[0], extent[0], extent[2]),\n          clamp(center[1], extent[1], extent[3])\n        ];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\nimport FormatType from './format/FormatType.js';\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default), import(\"./extent.js\").Extent, number,\n *                    import(\"./proj/Projection.js\").default)} FeatureLoader\n * @api\n */\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {function(this:import(\"./VectorTile.js\").default, Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default, import(\"./extent.js\").Extent)|function(this:import(\"./source/Vector\").default, Array<import(\"./Feature.js\").default>)} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:import(\"./VectorTile.js\").default)|function(this:import(\"./source/Vector\").default)} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function(extent, resolution, projection) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET',\n        typeof url === 'function' ? url(extent, resolution, projection) : url,\n        true);\n      if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n      }\n      /**\n       * @param {Event} event Event.\n       * @private\n       */\n      xhr.onload = function(event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n          var type = format.getType();\n          /** @type {Document|Node|Object|string|undefined} */\n          var source;\n          if (type == FormatType.JSON || type == FormatType.TEXT) {\n            source = xhr.responseText;\n          } else if (type == FormatType.XML) {\n            source = xhr.responseXML;\n            if (!source) {\n              source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n            }\n          } else if (type == FormatType.ARRAY_BUFFER) {\n            source = /** @type {ArrayBuffer} */ (xhr.response);\n          }\n          if (source) {\n            success.call(this, format.readFeatures(source,\n              {featureProjection: projection}),\n            format.readProjection(source), format.getLastExtent());\n          } else {\n            failure.call(this);\n          }\n        } else {\n          failure.call(this);\n        }\n      }.bind(this);\n      /**\n       * @private\n       */\n      xhr.onerror = function() {\n        failure.call(this);\n      }.bind(this);\n      xhr.send();\n    }\n  );\n}\n\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  return loadFeaturesXhr(url, format,\n    /**\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n     * projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function(features, dataProjection) {\n      var sourceOrTile = /** @type {?} */ (this);\n      if (typeof sourceOrTile.addFeatures === 'function') {\n        /** @type {import(\"./source/Vector\").default} */ (sourceOrTile).addFeatures(features);\n      }\n    }, /* FIXME handle error */ VOID);\n}\n\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/loadingstrategy\n */\n\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function(extent, resolution) {\n      var z = tileGrid.getZForResolution(resolution);\n      var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      var extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      var tileCoord = [z, 0, 0];\n      for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n        for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n\n//# sourceMappingURL=loadingstrategy.js.map","/**\n * @module ol/geom/LineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = /*@__PURE__*/(function (SimpleGeometry) {\n  function LineString(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LineString.__proto__ = SimpleGeometry;\n  LineString.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LineString.prototype.constructor = LineString;\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  LineString.prototype.appendCoordinate = function appendCoordinate (coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @override\n   * @api\n   */\n  LineString.prototype.clone = function clone () {\n    return new LineString(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  LineString.prototype.forEachSegment = function forEachSegment$1 (callback) {\n    return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n  };\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  LineString.prototype.getCoordinateAtM = function getCoordinateAtM (m, opt_extrapolate) {\n    if (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) {\n      return null;\n    }\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(this.flatCoordinates, 0,\n      this.flatCoordinates.length, this.stride, m, extrapolate);\n  };\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LineString.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  LineString.prototype.getCoordinateAt = function getCoordinateAt (fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      fraction, opt_dest);\n  };\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  LineString.prototype.getLength = function getLength () {\n    return lineStringLength(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  LineString.prototype.getFlatMidpoint = function getFlatMidpoint () {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.getType = function getType () {\n    return GeometryType.LINE_STRING;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLineString(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      extent);\n  };\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LineString.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LineString;\n}(SimpleGeometry));\n\n\nexport default LineString;\n\n//# sourceMappingURL=LineString.js.map","/**\n * @module ol/math\n */\nimport {assert} from './asserts.js';\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function() {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  var cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function(x) {\n      var y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n}());\n\n\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n  assert(0 < x, 29); // `x` must be greater than `0`\n  return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  var n = mat.length;\n\n  for (var i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    var maxRow = i;\n    var maxEl = Math.abs(mat[i][i]);\n    for (var r = i + 1; r < n; r++) {\n      var absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    var tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (var j = i + 1; j < n; j++) {\n      var coef = -mat[j][i] / mat[i][i];\n      for (var k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  var x = new Array(n);\n  for (var l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (var m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return angleInRadians * 180 / Math.PI;\n}\n\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return angleInDegrees * Math.PI / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  var r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n//# sourceMappingURL=math.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  var chunkStart = offset;\n  var chunkEnd = offset;\n  var chunkM = 0;\n  var m = 0;\n  var start = offset;\n  var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n\n//# sourceMappingURL=straightchunk.js.map","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var flatCenters = [];\n  var extent = createEmpty();\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n\n//# sourceMappingURL=center.js.map","/**\n * @module ol/geom/MultiPolygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta} from './flat/closest.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRingsArray} from './flat/orient.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = /*@__PURE__*/(function (SimpleGeometry) {\n  function MultiPolygon(coordinates, opt_layout, opt_endss) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      var layout = this.getLayout();\n      var polygons = /** @type {Array<Polygon>} */ (coordinates);\n      var flatCoordinates = [];\n      var endss = [];\n      for (var i = 0, ii = polygons.length; i < ii; ++i) {\n        var polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        var offset = flatCoordinates.length;\n        var ends = polygon.getEnds();\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(/** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates),\n        opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) MultiPolygon.__proto__ = SimpleGeometry;\n  MultiPolygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiPolygon.prototype.constructor = MultiPolygon;\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  MultiPolygon.prototype.appendPolygon = function appendPolygon (polygon) {\n    /** @type {Array<number>} */\n    var ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      var offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.clone = function clone () {\n    var len = this.endss_.length;\n    var newEndss = new Array(len);\n    for (var i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    return new MultiPolygon(\n      this.flatCoordinates.slice(), this.layout, newEndss);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.endss_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  MultiPolygon.prototype.getArea = function getArea () {\n    return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates, 0, this.endss_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates, 0, this.endss_, this.stride);\n  };\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  MultiPolygon.prototype.getEndss = function getEndss () {\n    return this.endss_;\n  };\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  MultiPolygon.prototype.getFlatInteriorPoints = function getFlatInteriorPoints () {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      var flatCenters = linearRingssCenter(\n        this.flatCoordinates, 0, this.endss_, this.stride);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n        flatCenters);\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  };\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  MultiPolygon.prototype.getInteriorPoints = function getInteriorPoints () {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n  };\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  MultiPolygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(\n        flatCoordinates, 0, this.endss_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRingsArray(\n              this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates, 0, this.endss_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEndss);\n    return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n  };\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  MultiPolygon.prototype.getPolygon = function getPolygon (index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    var offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      var prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    var ends = this.endss_[index].slice();\n    var end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n  };\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  MultiPolygon.prototype.getPolygons = function getPolygons () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var endss = this.endss_;\n    var polygons = [];\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      var ends = endss[i].slice();\n      var end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPolygon.prototype.getType = function getType () {\n    return GeometryType.MULTI_POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPolygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      var lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  };\n\n  return MultiPolygon;\n}(SimpleGeometry));\n\n\nexport default MultiPolygon;\n\n//# sourceMappingURL=MultiPolygon.js.map","/**\n * @module ol/geom/Geometry\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {createEmpty, getHeight, returnOrUpdate} from '../extent.js';\nimport {transform2D} from './flat/transform.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport Units from '../proj/Units.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /*@__PURE__*/(function (BaseObject) {\n  function Geometry() {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {Object<string, Geometry>}\n     */\n    this.simplifiedGeometryCache = {};\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n  }\n\n  if ( BaseObject ) Geometry.__proto__ = BaseObject;\n  Geometry.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Geometry.prototype.constructor = Geometry;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  Geometry.prototype.clone = function clone () {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  Geometry.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  };\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  Geometry.prototype.containsXY = function containsXY (x, y) {\n    return false;\n  };\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  Geometry.prototype.getClosestPoint = function getClosestPoint (point, opt_closestPoint) {\n    var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  };\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  Geometry.prototype.intersectsCoordinate = function intersectsCoordinate (coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  Geometry.prototype.computeExtent = function computeExtent (extent) {\n    return abstract();\n  };\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  Geometry.prototype.getExtent = function getExtent (opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      this.extent_ = this.computeExtent(this.extent_);\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  };\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  Geometry.prototype.rotate = function rotate (angle, anchor) {\n    abstract();\n  };\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n   *     sx).\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  Geometry.prototype.scale = function scale (sx, opt_sy, opt_anchor) {\n    abstract();\n  };\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the the {@link\n   * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n   * Douglas Peucker} algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  Geometry.prototype.simplify = function simplify (tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  };\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  Geometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    return abstract();\n  };\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  Geometry.prototype.getType = function getType () {\n    return abstract();\n  };\n\n  /**\n   * Apply a transform function to each coordinate of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n   */\n  Geometry.prototype.applyTransform = function applyTransform (transformFn) {\n    abstract();\n  };\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  Geometry.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return abstract();\n  };\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  Geometry.prototype.translate = function translate (deltaX, deltaY) {\n    abstract();\n  };\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  Geometry.prototype.transform = function transform (source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    var sourceProj = getProjection(source);\n    var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\n      function(inCoordinates, outCoordinates, stride) {\n        var pixelExtent = sourceProj.getExtent();\n        var projectedExtent = sourceProj.getWorldExtent();\n        var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n        composeTransform(tmpTransform,\n          projectedExtent[0], projectedExtent[3],\n          scale, -scale, 0,\n          0, 0);\n        transform2D(inCoordinates, 0, inCoordinates.length, stride,\n          tmpTransform, outCoordinates);\n        return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n      } :\n      getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  };\n\n  return Geometry;\n}(BaseObject));\n\n\nexport default Geometry;\n\n//# sourceMappingURL=Geometry.js.map","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /*@__PURE__*/(function (Control) {\n  function Attribution(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ = options.collapsible !== undefined ?\n      options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    var className = options.className !== undefined ? options.className : 'ol-attribution';\n\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    var label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n\n    var activeLabel = (this.collapsible_ && !this.collapsed_) ?\n      this.collapseLabel_ : this.label_;\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ulElement_);\n    element.appendChild(button);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n  }\n\n  if ( Control ) Attribution.__proto__ = Control;\n  Attribution.prototype = Object.create( Control && Control.prototype );\n  Attribution.prototype.constructor = Attribution;\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  Attribution.prototype.collectSourceAttributions_ = function collectSourceAttributions_ (frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    var lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    var visibleAttributions = [];\n\n    var layerStatesArray = frameState.layerStatesArray;\n    var resolution = frameState.viewState.resolution;\n    for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      if (!visibleAtResolution(layerState, resolution)) {\n        continue;\n      }\n\n      var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n      if (!source) {\n        continue;\n      }\n\n      var attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      var attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      if (!this.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\n        this.setCollapsible(false);\n      }\n\n      if (Array.isArray(attributions)) {\n        for (var j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    return visibleAttributions;\n  };\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  Attribution.prototype.updateElement_ = function updateElement_ (frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var attributions = this.collectSourceAttributions_(frameState);\n\n    var visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (var i = 0, ii = attributions.length; i < ii; ++i) {\n      var element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  };\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Attribution.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleToggle_();\n  };\n\n  /**\n   * @private\n   */\n  Attribution.prototype.handleToggle_ = function handleToggle_ () {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n  };\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.getCollapsible = function getCollapsible () {\n    return this.collapsible_;\n  };\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.setCollapsible = function setCollapsible (collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  };\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.setCollapsed = function setCollapsed (collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  };\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.getCollapsed = function getCollapsed () {\n    return this.collapsed_;\n  };\n\n  return Attribution;\n}(Control));\n\n\n/**\n * Update the attribution element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Attribution}\n * @api\n */\nexport function render(mapEvent) {\n  this.updateElement_(mapEvent.frameState);\n}\n\n\nexport default Attribution;\n\n//# sourceMappingURL=Attribution.js.map","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /*@__PURE__*/(function (Control) {\n  function Rotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-rotate';\n\n    var label = options.label !== undefined ? options.label : '\\u21E7';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = 'ol-compass';\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add('ol-compass');\n    }\n\n    var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    var button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n\n  }\n\n  if ( Control ) Rotate.__proto__ = Control;\n  Rotate.prototype = Object.create( Control && Control.prototype );\n  Rotate.prototype.constructor = Rotate;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Rotate.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  Rotate.prototype.resetNorth_ = function resetNorth_ () {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    if (view.getRotation() !== undefined) {\n      if (this.duration_ > 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  };\n\n  return Rotate;\n}(Control));\n\n\n/**\n * Update the rotate control element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Rotate}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    return;\n  }\n  var rotation = frameState.viewState.rotation;\n  if (rotation != this.rotation_) {\n    var transform = 'rotate(' + rotation + 'rad)';\n    if (this.autoHide_) {\n      var contains = this.element.classList.contains(CLASS_HIDDEN);\n      if (!contains && rotation === 0) {\n        this.element.classList.add(CLASS_HIDDEN);\n      } else if (contains && rotation !== 0) {\n        this.element.classList.remove(CLASS_HIDDEN);\n      }\n    }\n    this.label_.style.msTransform = transform;\n    this.label_.style.webkitTransform = transform;\n    this.label_.style.transform = transform;\n  }\n  this.rotation_ = rotation;\n}\n\nexport default Rotate;\n\n//# sourceMappingURL=Rotate.js.map","/**\n * @module ol/control/Zoom\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /*@__PURE__*/(function (Control) {\n  function Zoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-zoom';\n\n    var delta = options.delta !== undefined ? options.delta : 1;\n\n    var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n      options.zoomInTipLabel : 'Zoom in';\n    var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n      options.zoomOutTipLabel : 'Zoom out';\n\n    var inElement = document.createElement('button');\n    inElement.className = className + '-in';\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel\n    );\n\n    listen(inElement, EventType.CLICK, this.handleClick_.bind(this, delta));\n\n    var outElement = document.createElement('button');\n    outElement.className = className + '-out';\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel\n    );\n\n    listen(outElement, EventType.CLICK, this.handleClick_.bind(this, -delta));\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Control ) Zoom.__proto__ = Control;\n  Zoom.prototype = Object.create( Control && Control.prototype );\n  Zoom.prototype.constructor = Zoom;\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Zoom.prototype.handleClick_ = function handleClick_ (delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  };\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  Zoom.prototype.zoomByDelta_ = function zoomByDelta_ (delta) {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    var currentResolution = view.getResolution();\n    if (currentResolution) {\n      var newResolution = view.constrainResolution(currentResolution, delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          resolution: newResolution,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setResolution(newResolution);\n      }\n    }\n  };\n\n  return Zoom;\n}(Control));\n\n\nexport default Zoom;\n\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./Control.js\").default>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var controls = new Collection();\n\n  var zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  var rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  var attributionControl = options.attribution !== undefined ?\n    options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n  var x1 = flatCoordinates[offset1];\n  var y1 = flatCoordinates[offset1 + 1];\n  var dx = flatCoordinates[offset2] - x1;\n  var dy = flatCoordinates[offset2 + 1] - y1;\n  var offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i], t);\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (var i$1 = 0; i$1 < stride; ++i$1) {\n    closestPoint[i$1] = flatCoordinates[offset + i$1];\n  }\n  closestPoint.length = stride;\n}\n\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    max = maxSquaredDelta(\n      flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    max = arrayMaxSquaredDelta(\n      flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  var i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  var index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index += stride * Math.max(\n        ((Math.sqrt(squaredDistance) -\n            Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates, offset, end, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset,\n  endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates, offset, ends, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/layer/VectorTile\n */\nimport LayerType from '../LayerType.js';\nimport {assert} from '../asserts.js';\nimport TileProperty from './TileProperty.js';\nimport VectorLayer from './Vector.js';\nimport VectorTileRenderType from './VectorTileRenderType.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {import(\"./VectorTileRenderType.js\").default|string} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but point symbols and texts\n *    are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance than the other options.\n *\n * When `declutter` is set to `true`, `'hybrid'` will be used instead of `'image'`.\n * @property {import(\"../source/VectorTile.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority. When set to `true`, a `renderMode` of `'image'` will be overridden with\n * `'hybrid'`.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @param {Options=} opt_options Options.\n * @api\n */\nvar VectorTileLayer = /*@__PURE__*/(function (VectorLayer) {\n  function VectorTileLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var renderMode = options.renderMode || VectorTileRenderType.HYBRID;\n    assert(renderMode == undefined ||\n       renderMode == VectorTileRenderType.IMAGE ||\n       renderMode == VectorTileRenderType.HYBRID ||\n       renderMode == VectorTileRenderType.VECTOR,\n    28); // `renderMode` must be `'image'`, `'hybrid'` or `'vector'`\n    if (options.declutter && renderMode == VectorTileRenderType.IMAGE) {\n      renderMode = VectorTileRenderType.HYBRID;\n    }\n    options.renderMode = renderMode;\n\n    var baseOptions = /** @type {Object} */ (assign({}, options));\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n\n    VectorLayer.call(/** @type {import(\"./Vector.js\").Options} */ this, (baseOptions));\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n      options.useInterimTilesOnError : true);\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {import(\"../LayerType.js\").default}\n    */\n    this.type = LayerType.VECTOR_TILE;\n\n  }\n\n  if ( VectorLayer ) VectorTileLayer.__proto__ = VectorLayer;\n  VectorTileLayer.prototype = Object.create( VectorLayer && VectorLayer.prototype );\n  VectorTileLayer.prototype.constructor = VectorTileLayer;\n\n  /**\n  * Return the level as number to which we will preload tiles up to.\n  * @return {number} The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  VectorTileLayer.prototype.getPreload = function getPreload () {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  };\n\n  /**\n  * Whether we use interim tiles on error.\n  * @return {boolean} Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  VectorTileLayer.prototype.getUseInterimTilesOnError = function getUseInterimTilesOnError () {\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n  };\n\n  /**\n  * Set the level as number to which we will preload tiles up to.\n  * @param {number} preload The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  VectorTileLayer.prototype.setPreload = function setPreload (preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  };\n\n  /**\n  * Set whether we use interim tiles on error.\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  VectorTileLayer.prototype.setUseInterimTilesOnError = function setUseInterimTilesOnError (useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  };\n\n  return VectorTileLayer;\n}(VectorLayer));\n\n\n/**\n * Return the associated {@link module:ol/source/VectorTile vectortilesource} of the layer.\n * @function\n * @return {import(\"../source/VectorTile.js\").default} Source.\n * @api\n */\nVectorTileLayer.prototype.getSource;\nexport default VectorTileLayer;\n\n//# sourceMappingURL=VectorTile.js.map","/**\n * @module ol/geom/MultiPoint\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = /*@__PURE__*/(function (SimpleGeometry) {\n  function MultiPoint(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n  }\n\n  if ( SimpleGeometry ) MultiPoint.__proto__ = SimpleGeometry;\n  MultiPoint.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiPoint.prototype.constructor = MultiPoint;\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  MultiPoint.prototype.appendPoint = function appendPoint (point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.clone = function clone () {\n    var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n    return multiPoint;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPoint.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    var flatCoordinates = this.flatCoordinates;\n    var stride = this.stride;\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var squaredDistance = squaredDx(\n        x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (var j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  };\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  MultiPoint.prototype.getPoint = function getPoint (index) {\n    var n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(this.flatCoordinates.slice(\n      index * this.stride, (index + 1) * this.stride), this.layout);\n  };\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  MultiPoint.prototype.getPoints = function getPoints () {\n    var flatCoordinates = this.flatCoordinates;\n    var layout = this.layout;\n    var stride = this.stride;\n    /** @type {Array<Point>} */\n    var points = [];\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPoint.prototype.getType = function getType () {\n    return GeometryType.MULTI_POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPoint.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var flatCoordinates = this.flatCoordinates;\n    var stride = this.stride;\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return MultiPoint;\n}(SimpleGeometry));\n\n\nexport default MultiPoint;\n\n//# sourceMappingURL=MultiPoint.js.map","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {rotate, scale, translate, transform2D} from './flat/transform.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /*@__PURE__*/(function (Geometry) {\n  function SimpleGeometry() {\n\n    Geometry.call(this);\n\n    /**\n     * @protected\n     * @type {GeometryLayout}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n\n  }\n\n  if ( Geometry ) SimpleGeometry.__proto__ = Geometry;\n  SimpleGeometry.prototype = Object.create( Geometry && Geometry.prototype );\n  SimpleGeometry.prototype.constructor = SimpleGeometry;\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromFlatCoordinates(this.flatCoordinates,\n      0, this.flatCoordinates.length, this.stride, extent);\n  };\n\n  /**\n   * @abstract\n   * @return {Array} Coordinates.\n   */\n  SimpleGeometry.prototype.getCoordinates = function getCoordinates () {\n    return abstract();\n  };\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  SimpleGeometry.prototype.getFirstCoordinate = function getFirstCoordinate () {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  SimpleGeometry.prototype.getFlatCoordinates = function getFlatCoordinates () {\n    return this.flatCoordinates;\n  };\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  SimpleGeometry.prototype.getLastCoordinate = function getLastCoordinate () {\n    return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n  };\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {GeometryLayout} Layout.\n   * @api\n   */\n  SimpleGeometry.prototype.getLayout = function getLayout () {\n    return this.layout;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    var key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      var simplifiedGeometry =\n          this.getSimplifiedGeometryInternal(squaredTolerance);\n      var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n      if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n        this.simplifiedGeometryCache[key] = simplifiedGeometry;\n        return simplifiedGeometry;\n      } else {\n        // Simplification did not actually remove any coordinates.  We now know\n        // that any calls to getSimplifiedGeometry with a squaredTolerance less\n        // than or equal to the current squaredTolerance will also not have any\n        // effect.  This allows us to short circuit simplification (saving CPU\n        // cycles) and prevents the cache of simplified geometries from filling\n        // up with useless identical copies of this geometry (saving memory).\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  };\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    return this;\n  };\n\n  /**\n   * @return {number} Stride.\n   */\n  SimpleGeometry.prototype.getStride = function getStride () {\n    return this.stride;\n  };\n\n  /**\n   * @param {GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  SimpleGeometry.prototype.setFlatCoordinates = function setFlatCoordinates (layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  };\n\n  /**\n   * @abstract\n   * @param {!Array} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   */\n  SimpleGeometry.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    abstract();\n  };\n\n  /**\n   * @param {GeometryLayout|undefined} layout Layout.\n   * @param {Array} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  SimpleGeometry.prototype.setLayout = function setLayout (layout, coordinates, nesting) {\n    /** @type {number} */\n    var stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (var i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.applyTransform = function applyTransform (transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.rotate = function rotate$1 (angle, anchor) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      rotate(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, angle, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.scale = function scale$1 (sx, opt_sy, opt_anchor) {\n    var sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    var anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      scale(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, sx, sy, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.translate = function translate$1 (deltaX, deltaY) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      translate(\n        flatCoordinates, 0, flatCoordinates.length, stride,\n        deltaX, deltaY, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  return SimpleGeometry;\n}(Geometry));\n\n\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  var layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return (\n    /** @type {GeometryLayout} */ (layout)\n  );\n}\n\n\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  var stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  var flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    var stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      transform, opt_dest);\n  }\n}\n\nexport default SimpleGeometry;\n\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/layer/Group\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getIntersection} from '../extent.js';\nimport BaseLayer from './Base.js';\nimport {assign, clear} from '../obj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LAYERS: 'layers'\n};\n\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /*@__PURE__*/(function (BaseLayer) {\n  function LayerGroup(opt_options) {\n\n    var options = opt_options || {};\n    var baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    var layers = options.layers;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    listen(this,\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_, this);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof /** @type {?} */ (layers).getArray === 'function',\n          43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n\n  }\n\n  if ( BaseLayer ) LayerGroup.__proto__ = BaseLayer;\n  LayerGroup.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  LayerGroup.prototype.constructor = LayerGroup;\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayerChange_ = function handleLayerChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayersChanged_ = function handleLayersChanged_ () {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    var layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (var id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    var layersArray = layers.getArray();\n    for (var i = 0, ii = layersArray.length; i < ii; i++) {\n      var layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n      ];\n    }\n\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersAdd_ = function handleLayersAdd_ (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    this.listenerKeys_[getUid(layer)] = [\n      listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n    ];\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersRemove_ = function handleLayersRemove_ (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    var key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  };\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.getLayers = function getLayers () {\n    return (\n      /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS))\n    );\n  };\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.setLayers = function setLayers (layers) {\n    this.set(Property.LAYERS, layers);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function(layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states !== undefined ? opt_states : [];\n\n    var pos = states.length;\n\n    this.getLayers().forEach(function(layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    var ownLayerState = this.getLayerState();\n    for (var i = pos, ii = states.length; i < ii; i++) {\n      var layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution, ownLayerState.maxResolution);\n      layerState.minResolution = Math.max(\n        layerState.minResolution, ownLayerState.minResolution);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getSourceState = function getSourceState () {\n    return SourceState.READY;\n  };\n\n  return LayerGroup;\n}(BaseLayer));\n\n\nexport default LayerGroup;\n\n//# sourceMappingURL=Group.js.map","/**\n * @module ol/control/ScaleLine\n */\nimport {getChangeEventType} from '../Object.js';\nimport {assert} from '../asserts.js';\nimport Control from './Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {listen} from '../events.js';\nimport {getPointResolution, METERS_PER_UNIT} from '../proj.js';\nimport ProjUnits from '../proj/Units.js';\n\n\n/**\n * @type {string}\n */\nvar UNITS_PROP = 'units';\n\n/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nexport var Units = {\n  DEGREES: 'degrees',\n  IMPERIAL: 'imperial',\n  NAUTICAL: 'nautical',\n  METRIC: 'metric',\n  US: 'us'\n};\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nvar LEADING_DIGITS = [1, 2, 5];\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-scale-line'] CSS Class name.\n * @property {number} [minWidth=64] Minimum width in pixels.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units|string} [units='metric'] Units.\n */\n\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n *\n * @api\n */\nvar ScaleLine = /*@__PURE__*/(function (Control) {\n  function ScaleLine(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var className = options.className !== undefined ? options.className : 'ol-scale-line';\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    listen(\n      this, getChangeEventType(UNITS_PROP),\n      this.handleUnitsChanged_, this);\n\n    this.setUnits(/** @type {Units} */ (options.units) || Units.METRIC);\n\n  }\n\n  if ( Control ) ScaleLine.__proto__ = Control;\n  ScaleLine.prototype = Object.create( Control && Control.prototype );\n  ScaleLine.prototype.constructor = ScaleLine;\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  ScaleLine.prototype.getUnits = function getUnits () {\n    return this.get(UNITS_PROP);\n  };\n\n  /**\n   * @private\n   */\n  ScaleLine.prototype.handleUnitsChanged_ = function handleUnitsChanged_ () {\n    this.updateElement_();\n  };\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  ScaleLine.prototype.setUnits = function setUnits (units) {\n    this.set(UNITS_PROP, units);\n  };\n\n  /**\n   * @private\n   */\n  ScaleLine.prototype.updateElement_ = function updateElement_ () {\n    var viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var center = viewState.center;\n    var projection = viewState.projection;\n    var units = this.getUnits();\n    var pointResolutionUnits = units == Units.DEGREES ?\n      ProjUnits.DEGREES :\n      ProjUnits.METERS;\n    var pointResolution =\n        getPointResolution(projection, viewState.resolution, center, pointResolutionUnits);\n    if (projection.getUnits() != ProjUnits.DEGREES && projection.getMetersPerUnit()\n      && pointResolutionUnits == ProjUnits.METERS) {\n      pointResolution *= projection.getMetersPerUnit();\n    }\n\n    var nominalCount = this.minWidth_ * pointResolution;\n    var suffix = '';\n    if (units == Units.DEGREES) {\n      var metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\n      if (projection.getUnits() == ProjUnits.DEGREES) {\n        nominalCount *= metersPerDegree;\n      } else {\n        pointResolution /= metersPerDegree;\n      }\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == Units.IMPERIAL) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == Units.NAUTICAL) {\n      pointResolution /= 1852;\n      suffix = 'nm';\n    } else if (units == Units.METRIC) {\n      if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == Units.US) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      assert(false, 33); // Invalid units\n    }\n\n    var i = 3 * Math.floor(\n      Math.log(this.minWidth_ * pointResolution) / Math.log(10));\n    var count, width;\n    while (true) {\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] *\n          Math.pow(10, Math.floor(i / 3));\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      } else if (width >= this.minWidth_) {\n        break;\n      }\n      ++i;\n    }\n\n    var html = count + ' ' + suffix;\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n  };\n\n  return ScaleLine;\n}(Control));\n\n\n/**\n * Update the scale line element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {ScaleLine}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    this.viewState_ = null;\n  } else {\n    this.viewState_ = frameState.viewState;\n  }\n  this.updateElement_();\n}\n\n\nexport default ScaleLine;\n\n//# sourceMappingURL=ScaleLine.js.map","/**\n * @module ol/array\n */\n\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  var mid, cmp;\n  var comparator = opt_comparator || numberSafeCompareFunction;\n  var low = 0;\n  var high = haystack.length;\n  var found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) { /* Too low. */\n      low = mid + 1;\n\n    } else { /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  var n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    var i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    var tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  var extension = Array.isArray(data) ? data : [data];\n  var length = extension.length;\n  for (var i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  var i = arr.indexOf(obj);\n  var found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  var length = arr.length >>> 0;\n  var value;\n\n  for (var i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  var len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (var i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  var length = arr.length;\n  var tmp = Array(arr.length);\n  var i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function(a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  var index;\n  var found = !arr.every(function(el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  var compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function(currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    var res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || opt_strict && res === 0);\n  });\n}\n\n//# sourceMappingURL=array.js.map","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n\n//# sourceMappingURL=TileProperty.js.map","/**\n * @module ol/format/Feature\n */\nimport {assign} from '../obj.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection, equivalent as equivalentProjection, transformExtent} from '../proj.js';\n\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent of the tile being read. This is only used and\n * required for {@link module:ol/format/MVT}.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nvar FeatureFormat = function FeatureFormat() {\n\n  /**\n   * @protected\n   * @type {import(\"../proj/Projection.js\").default}\n   */\n  this.dataProjection = null;\n\n  /**\n   * @protected\n   * @type {import(\"../proj/Projection.js\").default}\n   */\n  this.defaultFeatureProjection = null;\n\n};\n\n/**\n * Adds the data projection to the read options.\n * @param {Document|Node|Object|string} source Source.\n * @param {ReadOptions=} opt_options Options.\n * @return {ReadOptions|undefined} Options.\n * @protected\n */\nFeatureFormat.prototype.getReadOptions = function getReadOptions (source, opt_options) {\n  var options;\n  if (opt_options) {\n    options = {\n      dataProjection: opt_options.dataProjection ?\n        opt_options.dataProjection : this.readProjection(source),\n      featureProjection: opt_options.featureProjection\n    };\n  }\n  return this.adaptOptions(options);\n};\n\n/**\n * Sets the `dataProjection` on the options, if no `dataProjection`\n * is set.\n * @param {WriteOptions|ReadOptions|undefined} options\n *   Options.\n * @protected\n * @return {WriteOptions|ReadOptions|undefined}\n *   Updated options.\n */\nFeatureFormat.prototype.adaptOptions = function adaptOptions (options) {\n  return assign({\n    dataProjection: this.dataProjection,\n    featureProjection: this.defaultFeatureProjection\n  }, options);\n};\n\n/**\n * Get the extent from the source of the last {@link readFeatures} call.\n * @return {import(\"../extent.js\").Extent} Tile extent.\n */\nFeatureFormat.prototype.getLastExtent = function getLastExtent () {\n  return null;\n};\n\n/**\n * @abstract\n * @return {import(\"./FormatType.js\").default} Format.\n */\nFeatureFormat.prototype.getType = function getType () {\n  return abstract();\n};\n\n/**\n * Read a single feature from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../Feature.js\").FeatureLike} Feature.\n */\nFeatureFormat.prototype.readFeature = function readFeature (source, opt_options) {\n  return abstract();\n};\n\n/**\n * Read all features from a source.\n *\n * @abstract\n * @param {Document|Node|ArrayBuffer|Object|string} source Source.\n * @param {ReadOptions=} opt_options Read options.\n * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n */\nFeatureFormat.prototype.readFeatures = function readFeatures (source, opt_options) {\n  return abstract();\n};\n\n/**\n * Read a single geometry from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nFeatureFormat.prototype.readGeometry = function readGeometry (source, opt_options) {\n  return abstract();\n};\n\n/**\n * Read the projection from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @return {import(\"../proj/Projection.js\").default} Projection.\n */\nFeatureFormat.prototype.readProjection = function readProjection (source) {\n  return abstract();\n};\n\n/**\n * Encode a feature in this format.\n *\n * @abstract\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeFeature = function writeFeature (feature, opt_options) {\n  return abstract();\n};\n\n/**\n * Encode an array of features in this format.\n *\n * @abstract\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeFeatures = function writeFeatures (features, opt_options) {\n  return abstract();\n};\n\n/**\n * Write a single geometry in this format.\n *\n * @abstract\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {\n  return abstract();\n};\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {(WriteOptions|ReadOptions)=} opt_options Options.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} Transformed geometry.\n */\nexport function transformWithOptions(geometry, write, opt_options) {\n  var featureProjection = opt_options ?\n    getProjection(opt_options.featureProjection) : null;\n  var dataProjection = opt_options ?\n    getProjection(opt_options.dataProjection) : null;\n  /**\n   * @type {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent}\n   */\n  var transformed;\n  if (featureProjection && dataProjection &&\n      !equivalentProjection(featureProjection, dataProjection)) {\n    if (Array.isArray(geometry)) {\n      // FIXME this is necessary because GML treats extents\n      // as geometries\n      transformed = transformExtent(\n        geometry,\n        dataProjection,\n        featureProjection);\n    } else {\n      transformed = (write ? /** @type {import(\"../geom/Geometry\").default} */ (geometry).clone() : geometry).transform(\n        write ? featureProjection : dataProjection,\n        write ? dataProjection : featureProjection);\n    }\n  } else {\n    transformed = geometry;\n  }\n  if (write && opt_options && /** @type {WriteOptions} */ (opt_options).decimals !== undefined &&\n    !Array.isArray(transformed)) {\n    var power = Math.pow(10, /** @type {WriteOptions} */ (opt_options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    var transform = function(coordinates) {\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = /** @type {import(\"../geom/Geometry\").default} */ (geometry).clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/format/JSONFeature\n */\nimport {abstract} from '../util.js';\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nvar JSONFeature = /*@__PURE__*/(function (FeatureFormat) {\n  function JSONFeature() {\n    FeatureFormat.call(this);\n  }\n\n  if ( FeatureFormat ) JSONFeature.__proto__ = FeatureFormat;\n  JSONFeature.prototype = Object.create( FeatureFormat && FeatureFormat.prototype );\n  JSONFeature.prototype.constructor = JSONFeature;\n\n  /**\n   * @inheritDoc\n   */\n  JSONFeature.prototype.getType = function getType () {\n    return FormatType.JSON;\n  };\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  JSONFeature.prototype.readFeature = function readFeature (source, opt_options) {\n    return this.readFeatureFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  JSONFeature.prototype.readFeatures = function readFeatures (source, opt_options) {\n    return this.readFeaturesFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  JSONFeature.prototype.readFeatureFromObject = function readFeatureFromObject (object, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  JSONFeature.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  JSONFeature.prototype.readGeometry = function readGeometry (source, opt_options) {\n    return this.readGeometryFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  JSONFeature.prototype.readGeometryFromObject = function readGeometryFromObject (object, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  JSONFeature.prototype.readProjection = function readProjection (source) {\n    return this.readProjectionFromObject(getObject(source));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  JSONFeature.prototype.readProjectionFromObject = function readProjectionFromObject (object) {\n    return abstract();\n  };\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  JSONFeature.prototype.writeFeature = function writeFeature (feature, opt_options) {\n    return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeFeatureObject = function writeFeatureObject (feature, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  JSONFeature.prototype.writeFeatures = function writeFeatures (features, opt_options) {\n    return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeFeaturesObject = function writeFeaturesObject (features, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  JSONFeature.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeGeometryObject = function writeGeometryObject (geometry, opt_options) {\n    return abstract();\n  };\n\n  return JSONFeature;\n}(FeatureFormat));\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    var object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\n\nexport default JSONFeature;\n\n//# sourceMappingURL=JSONFeature.js.map","/**\n * @module ol/geom/GeometryCollection\n */\nimport {listen, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nvar GeometryCollection = /*@__PURE__*/(function (Geometry) {\n  function GeometryCollection(opt_geometries) {\n\n    Geometry.call(this);\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = opt_geometries ? opt_geometries : null;\n\n    this.listenGeometriesChange_();\n  }\n\n  if ( Geometry ) GeometryCollection.__proto__ = Geometry;\n  GeometryCollection.prototype = Object.create( Geometry && Geometry.prototype );\n  GeometryCollection.prototype.constructor = GeometryCollection;\n\n  /**\n   * @private\n   */\n  GeometryCollection.prototype.unlistenGeometriesChange_ = function unlistenGeometriesChange_ () {\n    if (!this.geometries_) {\n      return;\n    }\n    for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      unlisten(\n        this.geometries_[i], EventType.CHANGE,\n        this.changed, this);\n    }\n  };\n\n  /**\n   * @private\n   */\n  GeometryCollection.prototype.listenGeometriesChange_ = function listenGeometriesChange_ () {\n    if (!this.geometries_) {\n      return;\n    }\n    for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      listen(\n        this.geometries_[i], EventType.CHANGE,\n        this.changed, this);\n    }\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @override\n   * @api\n   */\n  GeometryCollection.prototype.clone = function clone () {\n    var geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    return geometryCollection;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x, y, closestPoint, minSquaredDistance);\n    }\n    return minSquaredDistance;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.containsXY = function containsXY (x, y) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.computeExtent = function computeExtent (extent) {\n    createOrUpdateEmpty(extent);\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  };\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  GeometryCollection.prototype.getGeometries = function getGeometries () {\n    return cloneGeometries(this.geometries_);\n  };\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  GeometryCollection.prototype.getGeometriesArray = function getGeometriesArray () {\n    return this.geometries_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    var key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      var simplifiedGeometries = [];\n      var geometries = this.geometries_;\n      var simplified = false;\n      for (var i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometry = geometries[i];\n        var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n        simplifiedGeometries.push(simplifiedGeometry);\n        if (simplifiedGeometry !== geometry) {\n          simplified = true;\n        }\n      }\n      if (simplified) {\n        var simplifiedGeometryCollection = new GeometryCollection(null);\n        simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n        this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n        return simplifiedGeometryCollection;\n      } else {\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.getType = function getType () {\n    return GeometryType.GEOMETRY_COLLECTION;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  GeometryCollection.prototype.isEmpty = function isEmpty () {\n    return this.geometries_.length === 0;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.rotate = function rotate (angle, anchor) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.scale = function scale (sx, opt_sy, opt_anchor) {\n    var anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, opt_sy, anchor);\n    }\n    this.changed();\n  };\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  GeometryCollection.prototype.setGeometries = function setGeometries (geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  };\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  GeometryCollection.prototype.setGeometriesArray = function setGeometriesArray (geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.applyTransform = function applyTransform (transformFn) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.translate = function translate (deltaX, deltaY) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.disposeInternal = function disposeInternal () {\n    this.unlistenGeometriesChange_();\n    Geometry.prototype.disposeInternal.call(this);\n  };\n\n  return GeometryCollection;\n}(Geometry));\n\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  var clonedGeometries = [];\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\n\nexport default GeometryCollection;\n\n//# sourceMappingURL=GeometryCollection.js.map","/**\n * @module ol/format/GeoJSON\n */\n\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport GeometryType from '../geom/GeometryType.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n  * @api\n */\nvar GeoJSON = /*@__PURE__*/(function (JSONFeature) {\n  function GeoJSON(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    JSONFeature.call(this);\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ?\n        options.dataProjection : 'EPSG:4326');\n\n    if (options.featureProjection) {\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n  }\n\n  if ( JSONFeature ) GeoJSON.__proto__ = JSONFeature;\n  GeoJSON.prototype = Object.create( JSONFeature && JSONFeature.prototype );\n  GeoJSON.prototype.constructor = GeoJSON;\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readFeatureFromObject = function readFeatureFromObject (object, opt_options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    var geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null\n      };\n    }\n\n    var geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n    var feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (this.extractGeometryName_ && 'geometry_name' in geoJSONFeature !== undefined) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties']);\n    }\n    return feature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {\n    var geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    var features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      var geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n      features = [];\n      var geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (var i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(this.readFeatureFromObject(geoJSONFeatures[i], opt_options));\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, opt_options)];\n    }\n    return features;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readGeometryFromObject = function readGeometryFromObject (object, opt_options) {\n    return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readProjectionFromObject = function readProjectionFromObject (object) {\n    var crs = object['crs'];\n    var projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return (\n      /** @type {import(\"../proj/Projection.js\").default} */ (projection)\n    );\n  };\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONFeature} Object.\n   * @override\n   * @api\n   */\n  GeoJSON.prototype.writeFeatureObject = function writeFeatureObject (feature, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n\n    /** @type {GeoJSONFeature} */\n    var object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null\n    };\n\n    var id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, opt_options);\n    }\n\n    var properties = feature.getProperties();\n    delete properties[feature.getGeometryName()];\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n    return object;\n  };\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @override\n   * @api\n   */\n  GeoJSON.prototype.writeFeaturesObject = function writeFeaturesObject (features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    var objects = [];\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], opt_options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects\n    };\n  };\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @override\n   * @api\n   */\n  GeoJSON.prototype.writeGeometryObject = function writeGeometryObject (geometry, opt_options) {\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\n  };\n\n  return GeoJSON;\n}(JSONFeature));\n\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  var geometry;\n  switch (object['type']) {\n    case GeometryType.POINT: {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geometry = readLineStringGeometry(/** @type {GeoJSONLineString} */ (object));\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geometry = readMultiPointGeometry(/** @type {GeoJSONMultiPoint} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geometry = readMultiLineStringGeometry(/** @type {GeoJSONMultiLineString} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geometry = readMultiPolygonGeometry(/** @type {GeoJSONMultiPolygon} */ (object));\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geometry = readGeometryCollectionGeometry(/** @type {GeoJSONGeometryCollection} */ (object));\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object.type);\n    }\n  }\n  return /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geometry, false, opt_options));\n}\n\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  var geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function(geometry) {\n      return readGeometry(geometry, opt_options);\n    });\n  return new GeometryCollection(geometries);\n}\n\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geometry, true, opt_options));\n  var type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  var geoJSON;\n  switch (type) {\n    case GeometryType.POINT: {\n      geoJSON = writePointGeometry(/** @type {Point} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geoJSON = writeLineStringGeometry(/** @type {LineString} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geoJSON = writePolygonGeometry(/** @type {Polygon} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geoJSON = writeMultiPointGeometry(/** @type {MultiPoint} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geoJSON = writeMultiLineStringGeometry(/** @type {MultiLineString} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geoJSON = writeMultiPolygonGeometry(/** @type {MultiPolygon} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geoJSON = writeGeometryCollectionGeometry(/** @type {GeometryCollection} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.CIRCLE: {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: []\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  var geometries = geometry.getGeometriesArray().map(function(geometry) {\n    var options = assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries\n  };\n}\n\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  var right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right)\n  };\n}\n\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  var right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right)\n  };\n}\n\n\nexport default GeoJSON;\n\n//# sourceMappingURL=GeoJSON.js.map","/**\n * @module ol/coordinate\n */\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += delta[0];\n  coordinate[1] += delta[1];\n  return coordinate;\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  var r = circle.getRadius();\n  var center = circle.getCenter();\n  var x0 = center[0];\n  var y0 = center[1];\n  var x1 = coordinate[0];\n  var y1 = coordinate[1];\n\n  var dx = x1 - x0;\n  var dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  var d = Math.sqrt(dx * dx + dy * dy);\n\n  var x = x0 + r * dx / d;\n  var y = y0 + r * dy / d;\n\n  return [x, y];\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  var x0 = coordinate[0];\n  var y0 = coordinate[1];\n  var start = segment[0];\n  var end = segment[1];\n  var x1 = start[0];\n  var y1 = start[1];\n  var x2 = end[0];\n  var y2 = end[1];\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  var along = (dx === 0 && dy === 0) ? 0 :\n    ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n  var x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function(coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  var x = Math.abs(3600 * normalizedDegrees);\n  var dflPrecision = opt_fractionDigits || 0;\n  var precision = Math.pow(10, dflPrecision);\n\n  var deg = Math.floor(x / 3600);\n  var min = Math.floor((x - deg * 3600) / 60);\n  var sec = x - (deg * 3600) - (min * 60);\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) + '\\u2033' +\n    (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  var equals = true;\n  for (var i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  var cosAngle = Math.cos(angle);\n  var sinAngle = Math.sin(angle);\n  var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  var dx = coord1[0] - coord2[0];\n  var dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate,\n    closestOnSegment(coordinate, segment));\n}\n\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n        degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/geom/flat/deflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    var coordinate = coordinates[i];\n    for (var j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n  var ends = opt_ends ? opt_ends : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n    var end = deflateCoordinates(\n      flatCoordinates, offset, coordinatess[j], stride);\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n  var endss = opt_endss ? opt_endss : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    var ends = deflateCoordinatesArray(\n      flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/interaction/Draw\n */\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {getChangeEventType} from '../Object.js';\nimport {squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {noModifierKeys, always, shiftKeyOnly} from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport {POINTER_TYPE} from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport InteractionProperty from './Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {GeometryType} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry as\n * arguments, and returns a geometry. The optional existing geometry is the\n * geometry that is returned when the function is called without a second\n * argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default=):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nvar Mode = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n\n/**\n * @enum {string}\n */\nvar DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nvar DrawEvent = /*@__PURE__*/(function (Event) {\n  function DrawEvent(type, feature) {\n\n    Event.call(this, type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n\n  }\n\n  if ( Event ) DrawEvent.__proto__ = Event;\n  DrawEvent.prototype = Object.create( Event && Event.prototype );\n  DrawEvent.prototype.constructor = DrawEvent;\n\n  return DrawEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nvar Draw = /*@__PURE__*/(function (PointerInteraction) {\n  function Draw(options) {\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {?}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {GeometryType}\n     * @private\n     */\n    this.type_ = /** @type {GeometryType} */ (options.type);\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints ?\n      options.minPoints :\n      (this.mode_ === Mode.POLYGON ? 3 : 2);\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n    var geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      if (this.type_ === GeometryType.CIRCLE) {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function(coordinates, opt_geometry) {\n          var circle = opt_geometry ? /** @type {Circle} */ (opt_geometry) :\n            new Circle([NaN, NaN]);\n          var squaredLength = squaredCoordinateDistance(\n            coordinates[0], coordinates[1]);\n          circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n          return circle;\n        };\n      } else {\n        var Constructor;\n        var mode = this.mode_;\n        if (mode === Mode.POINT) {\n          Constructor = Point;\n        } else if (mode === Mode.LINE_STRING) {\n          Constructor = LineString;\n        } else if (mode === Mode.POLYGON) {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function(coordinates, opt_geometry) {\n          var geometry = opt_geometry;\n          if (geometry) {\n            if (mode === Mode.POLYGON) {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n              } else {\n                geometry.setCoordinates([]);\n              }\n            } else {\n              geometry.setCoordinates(coordinates);\n            }\n          } else {\n            geometry = new Constructor(coordinates);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance ?\n      options.clickTolerance * options.clickTolerance : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileInteracting: true\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition ?\n        options.freehandCondition : shiftKeyOnly;\n    }\n\n    listen(this,\n      getChangeEventType(InteractionProperty.ACTIVE),\n      this.updateState_, this);\n\n  }\n\n  if ( PointerInteraction ) Draw.__proto__ = PointerInteraction;\n  Draw.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Draw.prototype.constructor = Draw;\n\n  /**\n   * @inheritDoc\n   */\n  Draw.prototype.setMap = function setMap (map) {\n    PointerInteraction.prototype.setMap.call(this, map);\n    this.updateState_();\n  };\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  Draw.prototype.getOverlay = function getOverlay () {\n    return this.overlay_;\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @override\n   * @api\n   */\n  Draw.prototype.handleEvent = function handleEvent (event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.preventDefault();\n    }\n    this.freehand_ = this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n    var move = event.type === MapBrowserEventType.POINTERMOVE;\n    var pass = true;\n    if (!this.freehand_ && this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n      var now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (this.freehand_ &&\n        event.type === MapBrowserEventType.POINTERDRAG &&\n        this.sketchFeature_ !== null) {\n      this.addToDrawing_(event);\n      pass = false;\n    } else if (this.freehand_ &&\n        event.type === MapBrowserEventType.POINTERDOWN) {\n      pass = false;\n    } else if (move) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        pass = this.handlePointerMove_(event);\n      } else if (/** @type {MapBrowserPointerEvent} */ (event).pointerEvent.pointerType == POINTER_TYPE ||\n          (event.type === MapBrowserEventType.POINTERDRAG && this.downTimeout_ === undefined)) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return PointerInteraction.prototype.handleEvent.call(this, event) && pass;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Draw.prototype.handleDownEvent = function handleDownEvent (event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event);\n      }\n      return true;\n    } else if (this.condition_(event)) {\n      this.lastDragTime_ = Date.now();\n      this.downTimeout_ = setTimeout(function() {\n        this.handlePointerMove_(new MapBrowserPointerEvent(\n          MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, false, event.frameState));\n      }.bind(this), this.dragVertexDelay_);\n      this.downPx_ = event.pixel;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  Draw.prototype.handleUpEvent = function handleUpEvent (event) {\n    var pass = true;\n\n    if (this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n\n    this.handlePointerMove_(event);\n\n    var circleMode = this.mode_ === Mode.CIRCLE;\n\n    if (this.shouldHandle_) {\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event);\n        if (this.mode_ === Mode.POINT) {\n          this.finishDrawing();\n        }\n      } else if (this.freehand_ || circleMode) {\n        this.finishDrawing();\n      } else if (this.atFinish_(event)) {\n        if (this.finishCondition_(event)) {\n          this.finishDrawing();\n        }\n      } else {\n        this.addToDrawing_(event);\n      }\n      pass = false;\n    } else if (this.freehand_) {\n      this.finishCoordinate_ = null;\n      this.abortDrawing_();\n    }\n    if (!pass && this.stopClick_) {\n      event.stopPropagation();\n    }\n    return pass;\n  };\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @return {boolean} Pass the event to other interactions.\n   * @private\n   */\n  Draw.prototype.handlePointerMove_ = function handlePointerMove_ (event) {\n    if (this.downPx_ &&\n        ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))) {\n      var downPx = this.downPx_;\n      var clickPx = event.pixel;\n      var dx = downPx[0] - clickPx[0];\n      var dy = downPx[1] - clickPx[1];\n      var squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_ ?\n        squaredDistance > this.squaredClickTolerance_ :\n        squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return true;\n      }\n    }\n\n    if (this.finishCoordinate_) {\n      this.modifyDrawing_(event);\n    } else {\n      this.createOrUpdateSketchPoint_(event);\n    }\n    return true;\n  };\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  Draw.prototype.atFinish_ = function atFinish_ (event) {\n    var at = false;\n    if (this.sketchFeature_) {\n      var potentiallyDone = false;\n      var potentiallyFinishCoordinates = [this.finishCoordinate_];\n      if (this.mode_ === Mode.LINE_STRING) {\n        potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n      } else if (this.mode_ === Mode.POLYGON) {\n        var sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [sketchCoords[0][0], sketchCoords[0][sketchCoords[0].length - 2]];\n      }\n      if (potentiallyDone) {\n        var map = event.map;\n        for (var i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          var finishCoordinate = potentiallyFinishCoordinates[i];\n          var finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          var pixel = event.pixel;\n          var dx = pixel[0] - finishPixel[0];\n          var dy = pixel[1] - finishPixel[1];\n          var snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  };\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.createOrUpdateSketchPoint_ = function createOrUpdateSketchPoint_ (event) {\n    var coordinates = event.coordinate.slice();\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      var sketchPointGeom = /** @type {Point} */ (this.sketchPoint_.getGeometry());\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  };\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.startDrawing_ = function startDrawing_ (event) {\n    var start = event.coordinate;\n    this.finishCoordinate_ = start;\n    if (this.mode_ === Mode.POINT) {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === Mode.POLYGON) {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(\n        new LineString(this.sketchLineCoords_));\n    }\n    var geometry = this.geometryFunction_(this.sketchCoords_);\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  };\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.modifyDrawing_ = function modifyDrawing_ (event) {\n    var coordinate = event.coordinate;\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n    var coordinates, last;\n    if (this.mode_ === Mode.POINT) {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(event)) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(/** @type {!LineCoordType} */ (this.sketchCoords_), geometry);\n    if (this.sketchPoint_) {\n      var sketchPointGeom = /** @type {Point} */ (this.sketchPoint_.getGeometry());\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    /** @type {LineString} */\n    var sketchLineGeom;\n    if (geometry.getType() == GeometryType.POLYGON &&\n        this.mode_ !== Mode.POLYGON) {\n      if (!this.sketchLine_) {\n        this.sketchLine_ = new Feature();\n      }\n      var ring = /** @type {Polygon} */ (geometry).getLinearRing(0);\n      sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n      if (!sketchLineGeom) {\n        sketchLineGeom = new LineString(ring.getFlatCoordinates(), ring.getLayout());\n        this.sketchLine_.setGeometry(sketchLineGeom);\n      } else {\n        sketchLineGeom.setFlatCoordinates(\n          ring.getLayout(), ring.getFlatCoordinates());\n        sketchLineGeom.changed();\n      }\n    } else if (this.sketchLineCoords_) {\n      sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  };\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.addToDrawing_ = function addToDrawing_ (event) {\n    var coordinate = event.coordinate;\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n    var done;\n    var coordinates;\n    if (this.mode_ === Mode.LINE_STRING) {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry);\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry);\n    }\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  };\n\n  /**\n   * Remove last point of the feature currently being drawn.\n   * @api\n   */\n  Draw.prototype.removeLastPoint = function removeLastPoint () {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n    var coordinates;\n    /** @type {LineString} */\n    var sketchLineGeom;\n    if (this.mode_ === Mode.LINE_STRING) {\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      coordinates.splice(-2, 1);\n      this.geometryFunction_(coordinates, geometry);\n      if (coordinates.length >= 2) {\n        this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n      }\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      coordinates.splice(-2, 1);\n      sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n      sketchLineGeom.setCoordinates(coordinates);\n      this.geometryFunction_(this.sketchCoords_, geometry);\n    }\n\n    if (coordinates.length === 0) {\n      this.finishCoordinate_ = null;\n    }\n\n    this.updateSketchFeatures_();\n  };\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  Draw.prototype.finishDrawing = function finishDrawing () {\n    var sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    var coordinates = this.sketchCoords_;\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (sketchFeature.getGeometry());\n    if (this.mode_ === Mode.LINE_STRING) {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry);\n    } else if (this.mode_ === Mode.POLYGON) {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === GeometryType.MULTI_POINT) {\n      sketchFeature.setGeometry(new MultiPoint([/** @type {PointCoordType} */(coordinates)]));\n    } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n      sketchFeature.setGeometry(new MultiLineString([/** @type {LineCoordType} */(coordinates)]));\n    } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n      sketchFeature.setGeometry(new MultiPolygon([/** @type {PolyCoordType} */(coordinates)]));\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  };\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature} The sketch feature (or null if none).\n   * @private\n   */\n  Draw.prototype.abortDrawing_ = function abortDrawing_ () {\n    this.finishCoordinate_ = null;\n    var sketchFeature = this.sketchFeature_;\n    if (sketchFeature) {\n      this.sketchFeature_ = null;\n      this.sketchPoint_ = null;\n      this.sketchLine_ = null;\n      /** @type {VectorSource} */ (this.overlay_.getSource()).clear(true);\n    }\n    return sketchFeature;\n  };\n\n  /**\n   * Extend an existing geometry by adding additional points. This only works\n   * on features with `LineString` geometries, where the interaction will\n   * extend lines by adding points to the end of the coordinates array.\n   * @param {!Feature} feature Feature to be extended.\n   * @api\n   */\n  Draw.prototype.extend = function extend (feature) {\n    var geometry = feature.getGeometry();\n    var lineString = /** @type {LineString} */ (geometry);\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    var last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  };\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  Draw.prototype.updateSketchFeatures_ = function updateSketchFeatures_ () {\n    var sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    var overlaySource = /** @type {VectorSource} */ (this.overlay_.getSource());\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  };\n\n  /**\n   * @private\n   */\n  Draw.prototype.updateState_ = function updateState_ () {\n    var map = this.getMap();\n    var active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing_();\n    }\n    this.overlay_.setMap(active ? map : null);\n  };\n\n  return Draw;\n}(PointerInteraction));\n\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  var styles = createEditingStyle();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `import(\"../geom/Circle.js\").Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a\n *     polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n  return function(coordinates, opt_geometry) {\n    var center = /** @type {LineCoordType} */ (coordinates)[0];\n    var end = /** @type {LineCoordType} */ (coordinates)[1];\n    var radius = Math.sqrt(\n      squaredCoordinateDistance(center, end));\n    var geometry = opt_geometry ? /** @type {Polygon} */ (opt_geometry) :\n      fromCircle(new Circle(center), opt_sides);\n    var angle = opt_angle;\n    if (!opt_angle) {\n      var x = end[0] - center[0];\n      var y = end[1] - center[1];\n      angle = Math.atan(y / x) - (x < 0 ? Math.PI : 0);\n    }\n    makeRegular(geometry, center, radius, angle);\n    return geometry;\n  };\n}\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return (\n    function(coordinates, opt_geometry) {\n      var extent = boundingExtent(/** @type {LineCoordType} */ (coordinates));\n      var boxCoordinates = [[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]];\n      var geometry = opt_geometry;\n      if (geometry) {\n        geometry.setCoordinates(boxCoordinates);\n      } else {\n        geometry = new Polygon(boxCoordinates);\n      }\n      return geometry;\n    }\n  );\n}\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {GeometryType} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  var mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Mode.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Mode.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Mode.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Mode.CIRCLE;\n  }\n  return (\n    /** @type {!Mode} */ (mode)\n  );\n}\n\n\nexport default Draw;\n\n//# sourceMappingURL=Draw.js.map","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n  var pointX = NaN;\n  var pointY = NaN;\n  var n = (end - offset) / stride;\n  if (n === 1) {\n    pointX = flatCoordinates[offset];\n    pointY = flatCoordinates[offset + 1];\n  } else if (n == 2) {\n    pointX = (1 - fraction) * flatCoordinates[offset] +\n        fraction * flatCoordinates[offset + stride];\n    pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n        fraction * flatCoordinates[offset + stride + 1];\n  } else if (n !== 0) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    var cumulativeLengths = [0];\n    for (var i = offset + stride; i < end; i += stride) {\n      var x2 = flatCoordinates[i];\n      var y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    var target = fraction * length;\n    var index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      var t = (target - cumulativeLengths[-index - 2]) /\n          (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      var o = offset + (-index - 2) * stride;\n      pointX = lerp(\n        flatCoordinates[o], flatCoordinates[o + stride], t);\n      pointY = lerp(\n        flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n    } else {\n      pointX = flatCoordinates[offset + index * stride];\n      pointY = flatCoordinates[offset + index * stride + 1];\n    }\n  }\n  if (opt_dest) {\n    opt_dest[0] = pointX;\n    opt_dest[1] = pointY;\n    return opt_dest;\n  } else {\n    return [pointX, pointY];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n  if (end == offset) {\n    return null;\n  }\n  var coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  var lo = offset / stride;\n  var hi = end / stride;\n  while (lo < hi) {\n    var mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  var m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  var m1 = flatCoordinates[(lo + 1) * stride - 1];\n  var t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (var i = 0; i < stride - 1; ++i) {\n    coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i],\n      flatCoordinates[lo * stride + i], t));\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n  }\n  var coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates, offset, end, stride, m, false);\n    }\n    offset = end;\n  }\n  return null;\n}\n\n//# sourceMappingURL=interpolate.js.map","/**\n * @module ol/interaction/Snap\n */\nimport {getUid} from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, closestOnCircle, closestOnSegment, squaredDistanceToSegment} from '../coordinate.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport {getValues} from '../obj.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n\n/**\n * @typedef {Object} Result\n * @property {boolean} snapped\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel\n */\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n * @return {import(\"../Feature.js\").default} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n  if (/** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature) {\n    return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature;\n  } else if (/** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element) {\n    return /** @type {import(\"../Feature.js\").default} */ (/** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element);\n  }\n\n}\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap';\n *\n *     var snap = new Snap({\n *       source: source\n *     });\n *\n * @api\n */\nvar Snap = /*@__PURE__*/(function (PointerInteraction) {\n  function Snap(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.handleDownEvent) {\n      pointerOptions.handleDownEvent = TRUE;\n    }\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @type {import(\"../source/Vector.js\").default}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.edge_ = options.edge !== undefined ? options.edge : true;\n\n    /**\n     * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featuresListenerKeys_ = [];\n\n    /**\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featureChangeListenerKeys_ = {};\n\n    /**\n     * Extents are preserved so indexed segment can be quickly removed\n     * when its feature geometry changes\n     * @type {Object<string, import(\"../extent.js\").Extent>}\n     * @private\n     */\n    this.indexedFeaturesExtents_ = {};\n\n    /**\n     * If a feature geometry changes while a pointer drag|move event occurs, the\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\n     * event fired.\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.pendingFeatures_ = {};\n\n    /**\n     * Used for distance sorting in sortByDistance_\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.pixelCoordinate_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n     * @type {function(SegmentData, SegmentData): number}\n     * @private\n     */\n    this.sortByDistance_ = sortByDistance.bind(this);\n\n\n    /**\n    * Segment RTree for each layer\n    * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n    * @private\n    */\n    this.rBush_ = new RBush();\n\n\n    /**\n    * @const\n    * @private\n    * @type {Object<string, function(import(\"../Feature.js\").default, import(\"../geom/Geometry.js\").default)>}\n    */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_,\n      'LineString': this.writeLineStringGeometry_,\n      'LinearRing': this.writeLineStringGeometry_,\n      'Polygon': this.writePolygonGeometry_,\n      'MultiPoint': this.writeMultiPointGeometry_,\n      'MultiLineString': this.writeMultiLineStringGeometry_,\n      'MultiPolygon': this.writeMultiPolygonGeometry_,\n      'GeometryCollection': this.writeGeometryCollectionGeometry_,\n      'Circle': this.writeCircleGeometry_\n    };\n  }\n\n  if ( PointerInteraction ) Snap.__proto__ = PointerInteraction;\n  Snap.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Snap.prototype.constructor = Snap;\n\n  /**\n   * Add a feature to the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {boolean=} opt_listen Whether to listen to the feature change or not\n   *     Defaults to `true`.\n   * @api\n   */\n  Snap.prototype.addFeature = function addFeature (feature, opt_listen) {\n    var register = opt_listen !== undefined ? opt_listen : true;\n    var feature_uid = getUid(feature);\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      var segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (segmentWriter) {\n        this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n        segmentWriter.call(this, feature, geometry);\n      }\n    }\n\n    if (register) {\n      this.featureChangeListenerKeys_[feature_uid] = listen(\n        feature,\n        EventType.CHANGE,\n        this.handleFeatureChange_, this);\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @private\n   */\n  Snap.prototype.forEachFeatureAdd_ = function forEachFeatureAdd_ (feature) {\n    this.addFeature(feature);\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @private\n   */\n  Snap.prototype.forEachFeatureRemove_ = function forEachFeatureRemove_ (feature) {\n    this.removeFeature(feature);\n  };\n\n  /**\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  Snap.prototype.getFeatures_ = function getFeatures_ () {\n    var features;\n    if (this.features_) {\n      features = this.features_;\n    } else if (this.source_) {\n      features = this.source_.getFeatures();\n    }\n    return features;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Snap.prototype.handleEvent = function handleEvent (evt) {\n    var result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n    if (result.snapped) {\n      evt.coordinate = result.vertex.slice(0, 2);\n      evt.pixel = result.vertexPixel;\n    }\n    return PointerInteraction.prototype.handleEvent.call(this, evt);\n  };\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Snap.prototype.handleFeatureAdd_ = function handleFeatureAdd_ (evt) {\n    var feature = getFeatureFromEvent(evt);\n    this.addFeature(feature);\n  };\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Snap.prototype.handleFeatureRemove_ = function handleFeatureRemove_ (evt) {\n    var feature = getFeatureFromEvent(evt);\n    this.removeFeature(feature);\n  };\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  Snap.prototype.handleFeatureChange_ = function handleFeatureChange_ (evt) {\n    var feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\n    if (this.handlingDownUpSequence) {\n      var uid = getUid(feature);\n      if (!(uid in this.pendingFeatures_)) {\n        this.pendingFeatures_[uid] = feature;\n      }\n    } else {\n      this.updateFeature_(feature);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Snap.prototype.handleUpEvent = function handleUpEvent (evt) {\n    var featuresToUpdate = getValues(this.pendingFeatures_);\n    if (featuresToUpdate.length) {\n      featuresToUpdate.forEach(this.updateFeature_.bind(this));\n      this.pendingFeatures_ = {};\n    }\n    return false;\n  };\n\n  /**\n   * Remove a feature from the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n   *     or not. Defaults to `true`.\n   * @api\n   */\n  Snap.prototype.removeFeature = function removeFeature (feature, opt_unlisten) {\n    var unregister = opt_unlisten !== undefined ? opt_unlisten : true;\n    var feature_uid = getUid(feature);\n    var extent = this.indexedFeaturesExtents_[feature_uid];\n    if (extent) {\n      var rBush = this.rBush_;\n      var nodesToRemove = [];\n      rBush.forEachInExtent(extent, function(node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n      for (var i = nodesToRemove.length - 1; i >= 0; --i) {\n        rBush.remove(nodesToRemove[i]);\n      }\n    }\n\n    if (unregister) {\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n      delete this.featureChangeListenerKeys_[feature_uid];\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Snap.prototype.setMap = function setMap (map) {\n    var currentMap = this.getMap();\n    var keys = this.featuresListenerKeys_;\n    var features = /** @type {Array<import(\"../Feature.js\").default>} */ (this.getFeatures_());\n\n    if (currentMap) {\n      keys.forEach(unlistenByKey);\n      keys.length = 0;\n      features.forEach(this.forEachFeatureRemove_.bind(this));\n    }\n    PointerInteraction.prototype.setMap.call(this, map);\n\n    if (map) {\n      if (this.features_) {\n        keys.push(\n          listen(this.features_, CollectionEventType.ADD,\n            this.handleFeatureAdd_, this),\n          listen(this.features_, CollectionEventType.REMOVE,\n            this.handleFeatureRemove_, this)\n        );\n      } else if (this.source_) {\n        keys.push(\n          listen(this.source_, VectorEventType.ADDFEATURE,\n            this.handleFeatureAdd_, this),\n          listen(this.source_, VectorEventType.REMOVEFEATURE,\n            this.handleFeatureRemove_, this)\n        );\n      }\n      features.forEach(this.forEachFeatureAdd_.bind(this));\n    }\n  };\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @return {Result} Snap result\n   */\n  Snap.prototype.snapTo = function snapTo (pixel, pixelCoordinate, map) {\n\n    var lowerLeft = map.getCoordinateFromPixel(\n      [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n    var upperRight = map.getCoordinateFromPixel(\n      [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n    var box = boundingExtent([lowerLeft, upperRight]);\n\n    var segments = this.rBush_.getInExtent(box);\n\n    // If snapping on vertices only, don't consider circles\n    if (this.vertex_ && !this.edge_) {\n      segments = segments.filter(function(segment) {\n        return segment.feature.getGeometry().getType() !==\n            GeometryType.CIRCLE;\n      });\n    }\n\n    var snappedToVertex = false;\n    var snapped = false;\n    var vertex = null;\n    var vertexPixel = null;\n    var dist, pixel1, pixel2, squaredDist1, squaredDist2;\n    if (segments.length > 0) {\n      this.pixelCoordinate_ = pixelCoordinate;\n      segments.sort(this.sortByDistance_);\n      var closestSegment = segments[0].segment;\n      var isCircle = segments[0].feature.getGeometry().getType() ===\n          GeometryType.CIRCLE;\n      if (this.vertex_ && !this.edge_) {\n        pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n        pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n        squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\n        squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\n        dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        snappedToVertex = dist <= this.pixelTolerance_;\n        if (snappedToVertex) {\n          snapped = true;\n          vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n          vertexPixel = map.getPixelFromCoordinate(vertex);\n        }\n      } else if (this.edge_) {\n        if (isCircle) {\n          vertex = closestOnCircle(pixelCoordinate,\n            /** @type {import(\"../geom/Circle.js\").default} */ (segments[0].feature.getGeometry()));\n        } else {\n          vertex = closestOnSegment(pixelCoordinate, closestSegment);\n        }\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n        if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n          snapped = true;\n          if (this.vertex_ && !isCircle) {\n            pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n            pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n            squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n            squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n            dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n            snappedToVertex = dist <= this.pixelTolerance_;\n            if (snappedToVertex) {\n              vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n              vertexPixel = map.getPixelFromCoordinate(vertex);\n            }\n          }\n        }\n      }\n      if (snapped) {\n        vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n      }\n    }\n    return (\n      /** @type {Result} */ ({\n        snapped: snapped,\n        vertex: vertex,\n        vertexPixel: vertexPixel\n      })\n    );\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  Snap.prototype.updateFeature_ = function updateFeature_ (feature) {\n    this.removeFeature(feature, false);\n    this.addFeature(feature, false);\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeCircleGeometry_ = function writeCircleGeometry_ (feature, geometry) {\n    var polygon = fromCircle(geometry);\n    var coordinates = polygon.getCoordinates()[0];\n    for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      var segment = coordinates.slice(i, i + 2);\n      var segmentData = /** @type {SegmentData} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeGeometryCollectionGeometry_ = function writeGeometryCollectionGeometry_ (feature, geometry) {\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0; i < geometries.length; ++i) {\n      var segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n      if (segmentWriter) {\n        segmentWriter.call(this, feature, geometries[i]);\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeLineStringGeometry_ = function writeLineStringGeometry_ (feature, geometry) {\n    var coordinates = geometry.getCoordinates();\n    for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      var segment = coordinates.slice(i, i + 2);\n      var segmentData = /** @type {SegmentData} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeMultiLineStringGeometry_ = function writeMultiLineStringGeometry_ (feature, geometry) {\n    var lines = geometry.getCoordinates();\n    for (var j = 0, jj = lines.length; j < jj; ++j) {\n      var coordinates = lines[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = /** @type {SegmentData} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeMultiPointGeometry_ = function writeMultiPointGeometry_ (feature, geometry) {\n    var points = geometry.getCoordinates();\n    for (var i = 0, ii = points.length; i < ii; ++i) {\n      var coordinates = points[i];\n      var segmentData = /** @type {SegmentData} */ ({\n        feature: feature,\n        segment: [coordinates, coordinates]\n      });\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeMultiPolygonGeometry_ = function writeMultiPolygonGeometry_ (feature, geometry) {\n    var polygons = geometry.getCoordinates();\n    for (var k = 0, kk = polygons.length; k < kk; ++k) {\n      var rings = polygons[k];\n      for (var j = 0, jj = rings.length; j < jj; ++j) {\n        var coordinates = rings[j];\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          var segment = coordinates.slice(i, i + 2);\n          var segmentData = /** @type {SegmentData} */ ({\n            feature: feature,\n            segment: segment\n          });\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writePointGeometry_ = function writePointGeometry_ (feature, geometry) {\n    var coordinates = geometry.getCoordinates();\n    var segmentData = /** @type {SegmentData} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writePolygonGeometry_ = function writePolygonGeometry_ (feature, geometry) {\n    var rings = geometry.getCoordinates();\n    for (var j = 0, jj = rings.length; j < jj; ++j) {\n      var coordinates = rings[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = /** @type {SegmentData} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n\n  return Snap;\n}(PointerInteraction));\n\n\n/**\n * Sort segments by distance, helper function\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in distance.\n * @this {Snap}\n */\nfunction sortByDistance(a, b) {\n  var deltaA = squaredDistanceToSegment(this.pixelCoordinate_, a.segment);\n  var deltaB = squaredDistanceToSegment(this.pixelCoordinate_, b.segment);\n  return deltaA - deltaB;\n}\n\nexport default Snap;\n\n//# sourceMappingURL=Snap.js.map","/**\n * @module ol/geom/flat/area\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  var twiceArea = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  var area = 0;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var area = 0;\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n\n//# sourceMappingURL=area.js.map","/**\n * @module ol/geom/flat/inflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n  var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n  var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  var i = 0;\n  for (var j = 0, jj = ends.length; j < jj; ++j) {\n    var end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n  var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  var i = 0;\n  for (var j = 0, jj = endss.length; j < jj; ++j) {\n    var ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/transform\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var x = flatCoordinates[j];\n    var y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @return {string} Change type.\n */\nvar getChangeType = (function() {\n  var changeType;\n  return function() {\n    if (!changeType) {\n      var body = document.body;\n      if (body.webkitRequestFullscreen) {\n        changeType = 'webkitfullscreenchange';\n      } else if (body.mozRequestFullScreen) {\n        changeType = 'mozfullscreenchange';\n      } else if (body.msRequestFullscreen) {\n        changeType = 'MSFullscreenChange';\n      } else if (body.requestFullscreen) {\n        changeType = 'fullscreenchange';\n      }\n    }\n    return changeType;\n  };\n})();\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](http://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @api\n */\nvar FullScreen = /*@__PURE__*/(function (Control) {\n  function FullScreen(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.cssClassName_ = options.className !== undefined ? options.className :\n      'ol-full-screen';\n\n    var label = options.label !== undefined ? options.label : '\\u2922';\n\n    /**\n     * @private\n     * @type {Text}\n     */\n    this.labelNode_ = typeof label === 'string' ?\n      document.createTextNode(label) : label;\n\n    var labelActive = options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n    /**\n     * @private\n     * @type {Text}\n     */\n    this.labelActiveNode_ = typeof labelActive === 'string' ?\n      document.createTextNode(labelActive) : labelActive;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.button_ = document.createElement('button');\n\n    var tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n    this.setClassName_(this.button_, isFullScreen());\n    this.button_.setAttribute('type', 'button');\n    this.button_.title = tipLabel;\n    this.button_.appendChild(this.labelNode_);\n\n    listen(this.button_, EventType.CLICK,\n      this.handleClick_, this);\n\n    var cssClasses = this.cssClassName_ + ' ' + CLASS_UNSELECTABLE +\n        ' ' + CLASS_CONTROL + ' ' +\n        (!isFullScreenSupported() ? CLASS_UNSUPPORTED : '');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.button_);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.keys_ = options.keys !== undefined ? options.keys : false;\n\n    /**\n     * @private\n     * @type {HTMLElement|string|undefined}\n     */\n    this.source_ = options.source;\n\n  }\n\n  if ( Control ) FullScreen.__proto__ = Control;\n  FullScreen.prototype = Object.create( Control && Control.prototype );\n  FullScreen.prototype.constructor = FullScreen;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  FullScreen.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleFullScreen_();\n  };\n\n  /**\n   * @private\n   */\n  FullScreen.prototype.handleFullScreen_ = function handleFullScreen_ () {\n    if (!isFullScreenSupported()) {\n      return;\n    }\n    var map = this.getMap();\n    if (!map) {\n      return;\n    }\n    if (isFullScreen()) {\n      exitFullScreen();\n    } else {\n      var element;\n      if (this.source_) {\n        element = typeof this.source_ === 'string' ?\n          document.getElementById(this.source_) :\n          this.source_;\n      } else {\n        element = map.getTargetElement();\n      }\n      if (this.keys_) {\n        requestFullScreenWithKeys(element);\n\n      } else {\n        requestFullScreen(element);\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  FullScreen.prototype.handleFullScreenChange_ = function handleFullScreenChange_ () {\n    var map = this.getMap();\n    if (isFullScreen()) {\n      this.setClassName_(this.button_, true);\n      replaceNode(this.labelActiveNode_, this.labelNode_);\n    } else {\n      this.setClassName_(this.button_, false);\n      replaceNode(this.labelNode_, this.labelActiveNode_);\n    }\n    if (map) {\n      map.updateSize();\n    }\n  };\n\n  /**\n   * @param {HTMLElement} element Target element\n   * @param {boolean} fullscreen True if fullscreen class name should be active\n   * @private\n   */\n  FullScreen.prototype.setClassName_ = function setClassName_ (element, fullscreen) {\n    var activeClassName = this.cssClassName_ + '-true';\n    var inactiveClassName = this.cssClassName_ + '-false';\n    var nextClassName = fullscreen ? activeClassName : inactiveClassName;\n    element.classList.remove(activeClassName);\n    element.classList.remove(inactiveClassName);\n    element.classList.add(nextClassName);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  FullScreen.prototype.setMap = function setMap (map) {\n    Control.prototype.setMap.call(this, map);\n    if (map) {\n      this.listenerKeys.push(listen(document,\n        getChangeType(),\n        this.handleFullScreenChange_, this)\n      );\n    }\n  };\n\n  return FullScreen;\n}(Control));\n\n\n/**\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported() {\n  var body = document.body;\n  return !!(\n    body.webkitRequestFullscreen ||\n    (body.mozRequestFullScreen && document.mozFullScreenEnabled) ||\n    (body.msRequestFullscreen && document.msFullscreenEnabled) ||\n    (body.requestFullscreen && document.fullscreenEnabled)\n  );\n}\n\n/**\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen() {\n  return !!(\n    document.webkitIsFullScreen || document.mozFullScreen ||\n    document.msFullscreenElement || document.fullscreenElement\n  );\n}\n\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.msRequestFullscreen) {\n    element.msRequestFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element.mozRequestFullScreenWithKeys) {\n    element.mozRequestFullScreenWithKeys();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n */\nfunction exitFullScreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.msExitFullscreen) {\n    document.msExitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n\nexport default FullScreen;\n\n//# sourceMappingURL=FullScreen.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment} from '../../extent.js';\nimport {linearRingContainsXY, linearRingContainsExtent} from './contains.js';\nimport {forEach as forEachSegment} from './segments.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n  var coordinatesExtent = extendFlatCoordinates(\n    createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] &&\n      coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] &&\n      coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(flatCoordinates, offset, end, stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function(point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    });\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    if (intersectsLineString(\n      flatCoordinates, offset, ends[i], stride, extent)) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n  if (intersectsLineString(\n    flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n  if (!intersectsLinearRing(\n    flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n      if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (intersectsLinearRingArray(\n      flatCoordinates, offset, ends, stride, extent)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/layer/Image\n */\nimport LayerType from '../LayerType.js';\nimport Layer from './Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {import(\"../source/Image.js\").default} [source] Source for this layer.\n */\n\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @api\n */\nvar ImageLayer = /*@__PURE__*/(function (Layer) {\n  function ImageLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n    Layer.call(this, options);\n\n    /**\n     * The layer type.\n     * @protected\n     * @type {import(\"../LayerType.js\").default}\n     */\n    this.type = LayerType.IMAGE;\n\n  }\n\n  if ( Layer ) ImageLayer.__proto__ = Layer;\n  ImageLayer.prototype = Object.create( Layer && Layer.prototype );\n  ImageLayer.prototype.constructor = ImageLayer;\n\n  return ImageLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Image source} of the image layer.\n * @function\n * @return {import(\"../source/Image.js\").default} Source.\n * @api\n */\nImageLayer.prototype.getSource;\nexport default ImageLayer;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/easing\n */\n\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/css\n */\n\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object<string>} The font families (or null if the input spec is invalid).\n */\nexport var getFontFamilies = (function() {\n  var style;\n  var cache = {};\n  return function(font) {\n    if (!style) {\n      style = document.createElement('div').style;\n    }\n    if (!(font in cache)) {\n      style.font = font;\n      var family = style.fontFamily;\n      style.font = '';\n      if (!family) {\n        return null;\n      }\n      cache[font] = family.split(/,\\s?/);\n    }\n    return cache[font];\n  };\n})();\n\n//# sourceMappingURL=css.js.map","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar Event = function Event(type) {\n\n  /**\n   * @type {boolean}\n   */\n  this.propagationStopped;\n\n  /**\n   * The event type.\n   * @type {string}\n   * @api\n   */\n  this.type = type;\n\n  /**\n   * The event target.\n   * @type {Object}\n   * @api\n   */\n  this.target = null;\n};\n\n/**\n * Stop event propagation.\n * @api\n */\nEvent.prototype.preventDefault = function preventDefault () {\n  this.propagationStopped = true;\n};\n\n/**\n * Stop event propagation.\n * @api\n */\nEvent.prototype.stopPropagation = function stopPropagation () {\n  this.propagationStopped = true;\n};\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default Event;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  SOURCE: 'source'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {function()=} opt_errback Callback on error.\n * @param {string=} opt_callbackParam Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, opt_errback, opt_callbackParam) {\n  var script = document.createElement('script');\n  var key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src = url + (url.indexOf('?') == -1 ? '?' : '&') +\n      (opt_callbackParam || 'callback') + '=' + key;\n  var timer = setTimeout(function() {\n    cleanup();\n    if (opt_errback) {\n      opt_errback();\n    }\n  }, 10000);\n  window[key] = function(data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.getElementsByTagName('head')[0].appendChild(script);\n}\n\n//# sourceMappingURL=net.js.map","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/geom/Point\n */\nimport {createOrUpdateFromCoordinate, containsXY} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /*@__PURE__*/(function (SimpleGeometry) {\n  function Point(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  if ( SimpleGeometry ) Point.__proto__ = SimpleGeometry;\n  Point.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Point.prototype.constructor = Point;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @override\n   * @api\n   */\n  Point.prototype.clone = function clone () {\n    var point = new Point(this.flatCoordinates.slice(), this.layout);\n    return point;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n    if (squaredDistance < minSquaredDistance) {\n      var stride = this.stride;\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @override\n   * @api\n   */\n  Point.prototype.getCoordinates = function getCoordinates () {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.getType = function getType () {\n    return GeometryType.POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return Point;\n}(SimpleGeometry));\n\n\nexport default Point;\n\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle'\n};\n\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/geom/Circle\n */\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nvar Circle = /*@__PURE__*/(function (SimpleGeometry) {\n  function Circle(center, opt_radius, opt_layout) {\n    SimpleGeometry.call(this);\n    if (opt_layout !== undefined && opt_radius === undefined) {\n      this.setFlatCoordinates(opt_layout, center);\n    } else {\n      var radius = opt_radius ? opt_radius : 0;\n      this.setCenterAndRadius(center, radius, opt_layout);\n    }\n  }\n\n  if ( SimpleGeometry ) Circle.__proto__ = SimpleGeometry;\n  Circle.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Circle.prototype.constructor = Circle;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @override\n   * @api\n   */\n  Circle.prototype.clone = function clone () {\n    return new Circle(this.flatCoordinates.slice(), undefined, this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var dx = x - flatCoordinates[0];\n    var dy = y - flatCoordinates[1];\n    var squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (var i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        var delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (var i$1 = 2; i$1 < this.stride; ++i$1) {\n          closestPoint[i$1] = flatCoordinates[i$1];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.containsXY = function containsXY (x, y) {\n    var flatCoordinates = this.flatCoordinates;\n    var dx = x - flatCoordinates[0];\n    var dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  };\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  Circle.prototype.getCenter = function getCenter () {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.computeExtent = function computeExtent (extent) {\n    var flatCoordinates = this.flatCoordinates;\n    var radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n      extent);\n  };\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  Circle.prototype.getRadius = function getRadius () {\n    return Math.sqrt(this.getRadiusSquared_());\n  };\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  Circle.prototype.getRadiusSquared_ = function getRadiusSquared_ () {\n    var dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    var dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Circle.prototype.getType = function getType () {\n    return GeometryType.CIRCLE;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Circle.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      var center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate, this);\n    }\n    return false;\n\n  };\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  Circle.prototype.setCenter = function setCenter (center) {\n    var stride = this.stride;\n    var radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    var flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (var i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  };\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  Circle.prototype.setCenterAndRadius = function setCenterAndRadius (center, radius, opt_layout) {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    var flatCoordinates = this.flatCoordinates;\n    var offset = deflateCoordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (var i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.getCoordinates = function getCoordinates () {\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {};\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  Circle.prototype.setRadius = function setRadius (radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  };\n\n  return Circle;\n}(SimpleGeometry));\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/geom/flat/segments\n */\n\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(this: S, import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @param {S=} opt_this The object to be used as the value of 'this'\n *     within callback.\n * @return {T|boolean} Value.\n * @template T,S\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback, opt_this) {\n  var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  var point2 = [];\n  var ret;\n  for (; (offset + stride) < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback.call(opt_this, point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=segments.js.map"],"sourceRoot":""}